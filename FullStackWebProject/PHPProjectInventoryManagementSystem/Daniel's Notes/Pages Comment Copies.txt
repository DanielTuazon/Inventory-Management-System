(=======)-----------[{ HUGE PAGE COMMENT COPY DUMP }]-----------(=============)


Just use find to find pages you need info and comment of,
Do it like this {login.css}


-----------<PASTED AFTER CHAPTER 22>-----------




{Start}------[{login.css}]------{File}


/*div.container*/

/*.container{
    display: none;
} This will make everything inside container disappear*/


/*.container{
    background: url('/images/login-background.jpg') no-repeat center center fixed;
    background-size: cover; */
    /*background: url('../images/login-background.jpg')*/
    /*center*/
/* } */

/*
::after
In CSS, ::after creates a pseudo-element that is the 
last child of the selected element. It is often used to
add cosmetic content to an element with the content
property. It is inline by default. */

/*.dead-link::after {
  content: url('../../media/warning.svg');
  display: inline-block;
  width: 12px;
  height: 12px;
}

.topic-games::after {
  content: 'üéÆ ';
}

.topic-weather::before {
  content: '‚õÖ ';
}

The value of said property is adjusted automatically according to the content or the context of the element.

For example, a block-level element with height: auto
will grow taller as it contains more text. For another
example, a block element with margin: 0 auto will have
the left and right margins increased until it becomes
centered along the y-axis of the viewport.

CSS introduced the ::after notation (with two colons)
to distinguish pseudo-classes from pseudo-elements.
For backward compatibility, browsers also accept
:after, introduced earlier.
It really depends on the property you give the value
to, different properties behave differently depending
on the content and context.
*/

/*
Pixels (an absolute value) and percentage (a relative value) cannot be derived each other.
Let me explain.
If you use a fixed value like width:250px you will have 250 pixels.
If you use a relative value it will change depending from other values.
width percentage returns a value related to the container.
If your container is 1000px large and you use width: 20%, it results to
be 200 pixels. If the container size depends from something else (depending
from the screen resolution for example) you will not know how many pixels
will be the defined percentage.
(Check more on documentation mozilla)
To center a child element in a container use: margin: auto
You can specify margin-top/margin-bottom after that if you want to change the vertical position.
*/
/*:: = pseudo elements : = psuedo classes*/

/*here use tag instead of a class*/

/*This property is specified as a comma-separated list of shadows.*/
/*Look it up further as theres more into this:  color | offset-x | offset-y | blur-radius
                                                text-shadow: #fc0 1px 0 10px;             */

/*jsDelivr CDN, and CDN stands for Content delivery network*/
/*This below code resets every elements default styling
 check code here https://cdn.jsdelivr.net/npm/modern-css-reset/dist/reset.min.css
 and check instructions here https://andy-bell.co.uk/a-modern-css-reset/*/
/*Use the devtool look at box model and see that it resets the defualts*/

/*             [LOGINPAGE.HTML]                */


*,*::before,*::after{box-sizing:border-box}body,h1,h2,h3,h4,p,figure,blockquote,dl,dd{margin:0}ul[role="list"],ol[role="list"]{list-style:none}html:focus-within{scroll-behavior:smooth}body{min-height:100vh;text-rendering:optimizeSpeed;line-height:1.5}a:not([class]){text-decoration-skip-ink:auto}img,picture{max-width:100%;display:block}input,button,textarea,select{font:inherit}@media(prefers-reduced-motion:reduce){html:focus-within{scroll-behavior:auto}*,*::before,*::after{animation-duration:.01ms !important;animation-iteration-count:1 !important;transition-duration:.01ms !important;scroll-behavior:auto !important}}

body#loginBody{
    /*Fuckin hell that was a headache to figure out, so a couple of things noting here
      Here's some no-no's:
      background-image: url()
      url('') is ok, but never use double quotes there
      using url() without single quotes is ok in php file
      Also, one big fuckin thing that cost us was this ../ at the beginning.
      Because of live server for some reason it run this without ../ which is
      essential to running that image, so ../ is a must, in our regards anyways*/
    background: url(../images/login-background.jpg) no-repeat center center fixed;
    background-size: cover;
    font-family: arial;
}

/*
Here is all you need to know about relative file paths:

Starting with ‚Äú/‚Äù returns to the root directory and starts there
Starting with ‚Äú../‚Äù moves one directory backwards and starts there
Starting with ‚Äú../../‚Äù moves two directories backwards and starts there (and so on‚Ä¶)
To move forward, just start with the first subdirectory and keep moving forward
*/
/*
body{
    background: url('/images/login-background.jpg') no-repeat center center fixed;
    background-size: cover;
    font-family: arial;
    background-blend-mode: luminosity;
    background-color: #f685a2;
}
*/

body{
    font-family: Arial;
}
/* This is just a test code
#label-id{
    color: #fff;
    font-size: 100px;
    font-weight: bold;
    text-shadow: 2px 0 #000000, -2px 0 #000000, 0 2px #000000, 0 -2px #000000,
               1px 1px #000000, -1px -1px #000000, 1px -1px #000000, -1px 1px #000000;
}
*/

div.loginHeader{
    text-align: center;
}


div.loginHeader{
    margin-bottom: 60px;
}

div.loginHeader h1{
    font-size: 100px;
    color:#f685a2;
    padding:0px;
    margin:0px;
    /*Text Shadow simulating Text Border is my addition*/
    /*-webkit-text-stroke: 2px #fff;*/
    /*Also look up global values*/
    /*Read and comprehend this, look up text-shadow*/
    text-shadow: 2px 0 #fff, -2px 0 #fff, 0 2px #fff, 0 -2px #fff,
               1px 1px #fff, -1px -1px #fff, 1px -1px #fff, -1px 1px #fff;
    /*Find a solution to put black border on top of this white border*/
}

div.loginHeader p{
    color:#ffdae3;
    font-size:50px;
    margin:0px;
    display: inline-block;
    text-transform: uppercase;
    text-shadow: 2px 0 #000000, -2px 0 #000000, 0 2px #000000, 0 -2px #000000,
               1px 1px #000000, -1px -1px #000000, 1px -1px #000000, -1px 1px #000000;
    
}

div.loginHeader p:after{
    content:'';
    display:block;
    height:5px;
    background:#f685a2;
    /*width: inherit;*/
    margin:0 auto;
}

div.loginBody form{
    margin:0 auto;
    width:450px;
    background: rgba(0,0,0,.5);
    padding:50px;
    border: 2px solid #fff;
    border-radius: 8px;
    /*Notice instead of sumoning other properties
    their values are summoned here, like the solid
    is border-width, then border-color after*/
}

div.loginInputContainer{
    margin-top: 30px;

}

div.loginInputContainer label{
    display: block;
    text-transform: uppercase;
    font-size: 20px;
    font-weight: bold;
    color: #fff;
}

div.loginInputContainer input{
    height: 30px;
    width: 100%;
    border: 2px solid #d40339;
    font-size: 20px;
    padding: 5px;
    text-align: center;
    font-style: italic;
}

div.loginButtonContainer{
    margin-top: 40px;
    text-align: center;
}

div.loginButtonContainer button{
    font-size: 20px;
    padding: 10px 40px;
    background: #f685a2;
    border: none;
    color: #fff;
}

/*This asshole is going to use this css file for two htmls
  which is possible sure, but it's less organized*/
/*This guys methods and structure is so crude*/


/*             [HOMEPAGE.HTML]                */

div.header{
    width: 100%;
    /*removed on login part height: 20px;*/
    background-color: #f685a1;
    padding: 10px 0px;
    text-align: right;
    /*this text line sends the a elmenet to right corner*/
}

div.header a{
    font-size: 20px; 
    /*This font-size will now dictate how tall the header
      will be, since we removed that specification property on
      the header class specificator above*/
    color: #fff;
    padding: 5px 5px;
    /*This is an a element that has text inside, so the padding
      will make space inside, so border spaced from text inside*/
    text-decoration: none;
    border: 2px solid transparent;
    border-bottom: 2px solid #fff;
    /*this border is a place holder, which also stops abruptness
      remove it to see what happens*/
    /*I added margin-right below to stop squashing when squashed*/
    margin-right: 5px;

}

div.header a:hover{
    border-radius: 5px;
    border: 2px solid #fff;
}

/*Our code/page is susceptible to height wise squishing*/
/*I propose that we make a transparent div inside that
  does the same thing as the homepageContainer, which is
  set a container or a limitation, a set size, then
  place all the elements*/
div.banner{
    /*Below code can be removed since media covers for it, the one with min-width and max=width*/
    background: url('../images/banner.jpg') no-repeat center center /*center*/ fixed;
    background-size: cover;
    padding-top: 100px;
    padding-bottom: 100px;
    height: 80vh;
    /* Try this for clarification
     width: 100%;
    max-width: 1000px;
    margin: 0 auto;
    */
}

/*This below code is my Addition, to make the banner smaller
  when resized by width to a smaller number. Notice the
  change in height*/
/*The width relates to 1080p size of webpage (or screen?)*/
@media (max-width:1250px){
    div.banner{
        background: url('../images/banner.jpg') no-repeat center center/*center*/ fixed;
        background-size: cover;
        padding-top: 100px;
        padding-bottom: 100px;
        height: 65vh;
        transition: 0.5s;
        
    }
}

/*This below code is also mine, if this wasn't created
  there would be an abrupt transition*/
@media (min-width:1250px) and (max-width:1920px){
    div.banner{
        background: url('../images/banner.jpg') no-repeat center center/*center*/ fixed;
        background-size: cover;
        padding-top: 100px;
        padding-bottom: 100px;
        height: 80vh;
        transition: 0.5s;
    }
}


/*This below code is also mine, if this wasn't created
  there would be an abrupt transition*/

div.homepageContainer{
    width: 100%;
    max-width: 1000px;
    /*height: 70vh; removed because of homepageFeatures,
      now the screen is shaking again, great*/
    /*max-width originally 900px now turned 1000*/
    /*Since we set the height, the stretch resulting from text
      or content change has disappeared*/
    /*vh post-fix?*/
    margin: 0 auto;
    /*remove the auto and the text will go at the edge*/
    /*this homepageContainer which delibirately*/
    
}

div.bannerHeader h1{
    /*I added padding-left code here*/
    padding-left: 10px;
    font-size: 100px;
    color: #f685a1;
    line-height: 100%;
    /*The line-height property specifies the height of a line.
    Note: Negative values are not allowed.*/
    text-shadow: 2px 0 #670000, -2px 0 #670000, 0 2px #670000, 0 -2px #670000,
               1px 1px #670000, -1px -1px #670000, 1px -1px #670000, -1px 1px #670000;
    /*The text-shadow above is daniel's addition*/
}

div.bannerHeader p{
    /*I added padding-left code here*/
    padding-left: 10px;
    font-size: 40px;
    color: #f685a1;
    text-transform: uppercase;
    line-height: 100%;
    /*line-height works perfect since both h1 and p class in same div*/
    text-shadow: 2px 0 #670000, -2px 0 #670000, 0 2px #670000, 0 -2px #670000,
               1px 1px #670000, -1px -1px #670000, 1px -1px #670000, -1px 1px #670000;
    /*The text-shadow above is daniel's addition*/
    
}

p.bannerTagline{
    /*I added padding-left code here*/
    padding-left: 10px;
    padding-right: 5px;
    margin-top: 20px;
    font-size: 25px;
    color: #fff;
    /*The property below is Daniel's addition*/
    text-shadow: 2px 0 #000000, -2px 0 #000000, 0 2px #000000, 0 -2px #000000,
               1px 1px #000000, -1px -1px #000000, 1px -1px #000000, -1px 1px #000000;
}

/*Now it's still presentable even if squished width wise*/
/*The expression means once the screen is 500px it will run/takeover*/
/*I added the media maxwidth expression here*/
@media (max-width:800px){
    div.bannerIcons{
        position: relative;
        top: -50px;
        /*I added padding-left code here*/
        padding-left: 10px;
        margin-top: 150px;
        /*this  below transition won't work since i think
        its not the element directly???*/
        transition: 0.5s all;
    }
    
}

div.bannerIcons{
    position: relative;
    /*dont add top:auto; here it's causing problems which is?*/
    /*I added the position and padding-left code here*/
    padding-left: 10px;
    margin-top: 150px;
    transition: 0.5 all;
}



div.bannerIcons a{
    /*Above Code is test*/
    font-size: 23px;
    margin-left: 40px;
    padding: 10px 14px;
    /*The above padding dictates logo position I adjusted a bit*/
    background: rgb(0,0,0,0.5);
    color: #868485;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    display: inline-block;
}


/*
div.bannerIcons i{
    position: absolute;
    margin-top: 100px;
    background-color:
}
*/


div.bannerIcons a:first-child{
    margin-left: 0px;
    /*this margin-left: sets the first a element in div to 0px margin
      you can try using the last-child to see how it works*/
}

div.bannerIcons a:hover{
    color: #fff;
    font-size: 25px;
    background:#f685a1;
    /*The logos were borrowing is considered a text*/
    /*VS Code remembers the colors you previously used*/
    transition: .5s all;
    /*all css value has explanation in notes*/
}

/*This guy is just lazy. He's reusing the same classes and other stuff,
  I am of the opinion that it just makes the code needlessly complicated*/

div.homepageFeatures{
    display: flex;
    flex-direction: row;
    /*This above property value makes them line up horizontally*/
    padding: 50px 0px;
    /*Set the padding for a <p> element to 35 pixels for top,
        70 pixels for right, 50 pixels for bottom, and to 90
        pixels for left*/
    margin: auto -15px;
    
}

div.homepageFeature{
    padding:10px 20px;
    text-align: center;
    width: 33.33%;
    /*Look at how the width: 33.33% works*/
}

div.homepageFeature:hover{
    border-top: 2px solid #f8a4b9;
    border-bottom: 2px solid #f8a4b9;
    transition: 0.5s all;
}

div.homepageFeature span.featureIcon{
    height: 80px;
    width: 80px;
    display: inline-block;
    font-size: 50px;
    background: #f685a1;
    color: #fff;
    /*padding-left: 18px; this property value causes logos to turn*/
    padding-top: 5px;
    border-radius: 50%;
    margin-bottom: 20px;
    /*I think maybe % is preferable than px
      because it can adjust with zoom or browser stretch*/
}

/*Take note of Inheretence and Non-Inheritance*/
/*Study Inheritance and the Inherit value*/

div.homepageFeature h3.featureTitle{
    margin-bottom: 20px;
    font-size: 23;

}

div.homepageFeature p.featureDescription{
    color: #848484;
    font-size: 18px;
}

div.homepageNotified{
    background: #e3e3e3;
    padding: 80px 0px;
}

div.homepageNotifiedContainer{
    display: flex;
    /*Just flex will cause them to lign up horizontally*/
    flex-direction: row;
    /*make flex-direction: column and it will align vertically*/
}

/*Below is child combinator, this is not descendant combinator */
/*
div.homepageNotifiedContainer > div{
    width: 50%;
} Removing this will pull them together
*/

div.emailForm h3{
    font-size: 25px;
}


div.emailForm{
    width: 40%;
    /*I added margin-left code*/
    margin-left: 20px;
    
}

div.video{
    width: 60%;
    text-align: center;
     /*I added margin-left code*/
    padding-left: 20px;
}

div.homepageNotified h3{
    margin-bottom: 20px;
}

div.homepageNotified p{
    color: #848484;
    line-height: 200%;
    margin-bottom: 30px;
}

div.formContainer{
    width: 80%;
    position: relative;
}
/*position: relative elements moves based on where its position normally
  go set right: 50; it will move 50px to right from that position */

/*
body by default has
In fact, this margin is so undesirable that it is essentially 
standard practice to include this type of styling in a .css file
which is included with every page of a site:

html, body
{
    margin: 0px; padding: 0px
}

*/

div.formContainer input{
    width: 100%;
    padding: 15px 10px;
    border-radius: 15px;
    border: none;
}

div.formContainer input:focus{
    outline: none;
    /*This outline removes the border or outline in
      input when you click or focus on that input*/
}

div.formContainer button{
    position: absolute;
    /*
    An element with position: absolute; is positioned relative
    to the nearest positioned ancestor
    */
    right: 0;
    top:0;
    /*For this right top properties to work, display must be set*/
    height: 100%;
    font-size: 22px;
    padding: 0px 10px;
    background: #f685a1;
    border-radius: 0px 15px 15px 0px;
    /*Here we set the left top down corners to zero
      Or you can do the following properties
      border-top-right-radius: 15px;
      border-bottom-right-radius: 15px;*/
    border: none;
    color: #fff;
}
    /*So since this is absolute, it will cover the entire height
      of the class the button is in*/

/*      
div.emailForm p{
    margin-right: 60px;
}
* The code has become obsolete because div.video
  was edited or styled*/
/*Above code is my addition*/
/*Please line them up in order or corelation*/

/*
.video{
    width: 100%;
    Something weird happens with width: 10%;
    I think only 10% of it will be in the container
    and since the video is
}
*/

iframe{
    width: 80%;
    height: 100%;
    /*height: 20%; try this*/
    /*also width is not 100% for a reason it stretches*/
    /*This is where we set the size instead of the embed*/
    /*weird the code is going past the border, we'll just
      adjust and improve the code after we finished the
      entire project, eh forget it he turned it to 100%*/
    /*margin: 0 auto;*/
}

div.socials{
    text-align: center;
    padding: 70px 0 40px 0px;
    /*Why no px on zero? Not sure, just copied it*/
}

h3.socialHeader{
    font-size: 30px;
}

p.socialText{
    margin-top: 20px;
    margin-bottom: 25px;
    color: #848484;
    font-size: 20px;
}

div.socialIconsContainer a{
    font-size: 23px;
    height: 50px;
    width: 50px;
    display: inline-block;
    /*this display property value will give them spacing*/
    padding-top: 7px;
    margin-bottom: 5px;
    background: #d4d4d4;
    border-radius: 50%;
    color: #fff;
    margin-left: 20px;
}

div.socialIconsContainer a:hover{
    background: #f8a4b9;
    transition: 0.3s all;
    /*I think the all makes it all under that class*/
    /*Notice how you dont have to mention other
      propertys values, just mention the ones that
      are wanted to be affected*/
}

/*Also with the icons under IMS header and p, I think
  instead of changing its size(width/height) it would be
  better if we instead use padding or margin either with
  the background or icon itself, just a thought*/

div.footer{
    background: #e3e3e3;
    padding-top: 50px;
    padding-bottom: 50px;
    text-align: center;
    /*text-aline works since its inside a div with set size
      Also footer worked through homepageContainer*/
}

div.footer a{
    color: #848484;
    margin-left: 30px;
    text-decoration: none;
    margin-right: 10px;
    /*this text-decoration removes the underline in anchor text*/
    /*Also I added the margin-right*/
    /*I modified a lot of stuff in this code*/
}


div.footer a:hover{
    font-weight: bold;
    color: #f8a4b9;
    transition: 0.5s all;
    /*What's the reaspm for the all value?
      thing is it still works without it*/
}

/*Dont modify or mess with the code any further
  you can do that once we complete the entire project*/

/*                [DASHBOARD.HTML STYLE]                  */

/*Reason why we use # instead of . I'm not sure*/
#dashboardMainContainer{
    display: flex;
    flex-direction: row;
    /*Flex is weird, row is column like and column is row like*/
}

/*There's an explanation of vh in notes*/
div.dashboard_sidebar{
    width: 20%;
    background: #323232;
    /*This css property below was my addition*/
    height: auto;
    /*height: 100vh; code from tutorial guy*/
}

div.dashboard_content_container{
    width: 80%;
    background: #f4f6f9;
}

h3.dashboard_logo{
    color: #f685a1;
    font-size: 80px;
    text-align: center; 
}

/*this works but its not specific which div that has img, that's bad
div > img{
    width: 40%;
    border: transparent;
    border-radius: 500px;
}
*/

/*This below is a code I made for dahyun.png*/
/*
div.dashboard_sidebar_user img{
    width: 40%;
    border: transparent;
    border-radius: 500px;
}
*/



div.dashboard_sidebar_user{
    text-align: center;
    position: relative;
    padding-bottom: 20px;
    border-bottom: 1px solid #fff;
}

/*When you're having trouble styling something, go check it out
  in browser with devtools and troubleshoot there, Just like
  the tutorial guy were following*/

div.dashboard_sidebar_user img{
    width: 80px;
    display: inline-block;
    border: 2px solid #f685a2;
    border-radius: 50%;
    margin-right: 5px;
    vertical-align: middle;
    /*You don't neet to set position for this, also we're
      forgetting to place info about new stuff here on notes
      palce this property and float property there later*/

}

/*We changed and added some styling properties and values
  because the bootstrap css affected some elements for no
  reason*/

div.dashboard_sidebar_user span{
    top: 20%;
    font-size: 18px;
    text-transform: uppercase;
    color: #fff;
    display: inline-block;
    font-family: arial;
    margin-top: 5px;

}   

ul.dashboard_menu_lists{
    margin-top: 10px;
    /*This fixes the issue of gap, our codes the same
      but for some reason there's a difference*/
    margin-left: -40px;
}

/*Theres some changes he's making that we will not follow*/
ul.dashboard_menu_lists li.liMainMenu{
    padding: 15px 0x;
    /*This will cause big boy padding-bottom: 10px;*/
    /*padding-top: 15px;*/
    /*padding: 15px 15px;*/
    /*First is vertical(height), second is horizontal(width)*/
    text-transform: uppercase;
    /*This removes the bullet point dots, which is weird since
      the tutorial guy didn't use this, and he still has no bullet points*/
    list-style-type: none;
}

/*You can grab highlighted codes with ctrl + left click*/
/*This weird small differences in our results and video result
  might be because of the fact we're using firefox browser*/


ul.dashboard_menu_lists li.liMainMenu a{
    text-decoration: none;
    color: #fff;
    /*height: 100%;*/
    display: block;
    /*margin-left: 10px;*/
    font-size: 18px;
    font-family: arial;
    padding: 15px 15px;
    padding-right: 0px;
    /*padding-bottom: 10px;*/
}

/*He changed the width and text to make design smaller
  but it doesn't look good, so lets diverge and keep ours*/
/*This below code specifically targets the logoIcons*/
ul.dashboard_menu_lists li.liMainMenu a i{
    font-size: 23px;
    width: 30px;
    margin-right: 5px;
}

ul.dashboard_menu_lists li.menuActive{
    background: #f685a1;
    color: #fff;
}
/*
ul.dashboard_menu_lists li.menuActive:active{
    background: #005c95;
    color: #fff;
}
*/

/*Keep note that I added some of my own codes here*/
ul.dashboard_menu_lists li:hover{
    background: #f685a1;
    color: #fff;
    transition: 0.3s all;
    /*Using all everytime might be good practice/protocol?
      The active button also has transition, maybe thats
      what it means? Every or all connected psuodoclass to
      that element gets a transition?*/
}

div.dashboard_topNav{
    background: #fff;
    padding: 20px;
}

div.dashboard_topNav a{
    color: #848383;
    font-size: 18px;
    text-decoration: none;
}

a#logoutBtn{
    float: right;
}

div.dashboard_content{
    padding: 50px 10px 10px 10px;
}

div.dashboard_content_main{
    background: #fff;
    min-height: 820px;
    height: 100%;
    /*This line below was added when we separated the userview and useradd forms*/
    border: 1px solid orangered;
    padding-left: 20px;
    padding-top: 20px;
}

/*      LogIn Php      */

div#errorMessage{
    background: white;
    color: red;
    text-align: center;
    font-size: 20px;
}

/*====================== Below Related to User-Add.php========*/

form::after{
    content: '';
    clear: both;
    display: block;
    /*This creates a cover for button*/
    /*Maybe this makes it so if an element is outside,
     it can come after it?*/
    /*Makes it come inside form*/
}

form.appForm{
    /*width sets the width of form*/
    /*50% takes the space it can, within the div its in*/
    width: 90%;
    /*This margin below will set the code to middle, for some reason*/
    margin: 0 auto;
    /*
    margin: 0 auto; this is shorthand for below code
    =
    margin-top: 0px;
    margin-right: auto;
    margin-bottom: 0px;
    margin-left: auto;
    */
    padding: 10px;
    border:1px solid #cecfd0;
    border-radius: 5px;
    background: rgb(233, 233, 233);
}

form label{
    font-weight: bold;
    text-transform: uppercase;
}

form button.appBtn{
    background:#f685a2;
    border: 1px solid #f685a1;
    color: white;
    padding: 10px;
    margin-top: 20px;
    float: right;
    /*so this button input can get out of appForm?*/
}

form button.appBtn:active{
    outline: 2px solid #000000;
    /*Outline different from border, it doesn't take space*/
}

/*In webdevtool in browser you might see this when you use element
  inspector sign at left corner: input#first_name.appFormInput
  the #first_name is just a specififty, you can target all by leaving it out*/
/*This is read as input element with class of appFormInput
  inside form element. Very specific, I know.*/
form input.appFormInput{
    width:100%;
    height: 33px;
    border: 1px solid #d6d7da;
    border-radius: 5px;
    /*Added below cause bootstrap css changed it to something else if this is not set*/
    font-family: arial;
    font-size: 16px;
    /*font-weight: bold;*/
}

div.appFormInputContainer{
    margin-bottom: 15px;
}

/*If you ever feel something missing, try using div to contain*/
div#userAddFormContainer{
    padding-top: 50px;
}

p.responseMessage{
    font-size: 18px;
    text-align: center;
    margin-top: 33px;
    padding: 20px;

}

p.responseMessage_error{
    background: rgb(255, 135, 135);
    font-family: Arial, Helvetica, sans-serif;
    margin-left: 5px;
}

p.responseMessage_success{
    background: rgb(134, 255, 134);
    font-family: Arial, Helvetica, sans-serif;
    /*I added margin-left with help from devtool and no thanks to bootstrap tampering*/
    margin-left: 5px;
}

/*User Add Page*/

div.row{
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    width: 100%;
}

div.column{
    width: 100%;
    padding: 0px 10px;
}

/*That divides it from 100% the div could offer*/
div.column-5{
    width: 40%;
}

div.column-7{
    width: 60%;
}

/*Note. Best styling and troubleshooting method
  is by using inspect/devtool and reading whats wrong, or
  checking what style to use, testing things out */

h1.section_header{
    /*I made some modifications*/
    /*Alt + scroll mouse makes you move through pages*/
    font-size: 25px;
    color: #f685a1;
    border-bottom: 1px solid #f685a1;
    padding-bottom: 8px;
    padding: 7px;
    border-left: 4px solid #f690bf;
    margin-bottom: 15px;
    /*For some reason margin-left is cancelling out padding-bottom
      you can see it in devtool*/
    margin-left: 16px;
    margin-top: 2px;

}

table, th, td{
    margin-top: 10px;
    border: 1px solid #b5b5b5;
    border-collapse: collapse;
    font-size: 14px;
}

/*I modified a lot of stuff relating to the table
  to make it more dynamic*/
table{
    width: 100%;
    /*This property below stops code from overflowing
      past the parent div*/
    /*When elememts or something css overflows,
      look for solution online*/
    /*table-layout: fixed;*/
    
}

table th{
    font-size: 14px;
    text-transform: uppercase;
    text-align: center;
    background: #f4f6f9;
    word-break: normal;
    padding: 0 5px 0 5px;
}

table td{
    /*We specified font-family here to stop
    bootstrap css styling from overtaking with helvitica*/
    font-family: Arial;
    text-align: center;
    font-size: 14px;
    padding: 4px;
    /*Added Code*/

    
    white-space: nowrap;
    /* Some Useful CSS Properties Below 
    max-width: 100px;
    word-break: break-all;
    white-space-collapse:collapse;
    word-wrap: break-word;
    white-space: wrap;
    overflow-wrap: break-word;
    hyphens: manual;
    */
}

table td.email{
    /*This CSS specifator and code is added by me
      it is to contain long emails*/
    /*Point is we strayed to far to the tutorial
      code just to make page more dynamic*/
    max-width: 200px;
    overflow: hidden;
    text-overflow: ellipsis;
}

table td.firstName{
    /*max-width refers to how much px it can hold before using overflow css*/
    max-width: 100px;
    overflow: hidden;
    /*overflow: scroll [old code]*/ 
    text-overflow: ellipsis;
}

table td.lastName{
    max-width: 80px;
    overflow: hidden;
    text-overflow: ellipsis; 
}

/*Hope our addition doesn't blowback on us*
/*The max width corelates to the screen size webpage*/
/*Also it relates to the screen of the user, the laptop screen
  automatically runs this, but the external monitor won't.
  You'll have to zoom out to see the email in full width*/
/*So normally screen is 1920px so once it reaches 1800px
  It will run this below code*/
/*So multiple media's would be useful for this, lets do that later*/
@media (max-width:1800px){
    /*Placing this code block below will stop long names from*/
    div.dashboard_sidebar_user{
        /*max-width: 100px;*/
        overflow: hidden;
        
    }
    
    table td{
        max-width: 100px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        transition: 0.5s all;
        /*white-space: nowrap;*/
    }

    table td a{
        white-space: normal;
        text-overflow: normal;
    }

    table{
        width: 100%;
        table-layout: fixed;
    }

    /*This specifier prevents from overflowing
      when squished too hard*/
    table th{
        word-wrap: break-word;
    }
    
    /*
    div.banner{
        background: url('../images/banner.jpg') no-repeat center center fixed;
        background-size: cover;
        padding-top: 100px;
        padding-bottom: 100px;
        height: 65vh;
        transition: 0.5s;
        
    }
    */
}

/*This code block below is my addition to make page dynamic*/
@media (max-width: 600px){
    table td{
        overflow: hidden;
    }

    table td.email{
        /*This solves overflowing at super squashed*/
        overflow: hidden;
        
    }
    
    /*This code below stops the name at sidenavbar from overflowing when squashed*/
    /*Although with long names the overflow will start early so this doesn't work*/
    /*Stop editing this for now and just continue tutorial*/
    div.dashboard_sidebar_user{
        /*max-width: 100px;*/
        overflow: hidden;
        
    }
    
    table td.firstName{
        /*max-width refers to how much px it can hold before using overflow css*/
        
        overflow: hidden;
        
    }
    

    table td.lastName{
     
        overflow: hidden;
        
    }
}



p.userCount{
    text-align: right;
    font-size: 15px;
    font-weight: bold;
    text-transform: uppercase;
    color: #f685a1;
}

/*This is getting affected by bootstrap styling again so we changed it*/
input.form-control{
    font-family: Arial;
    font-size: 16px;
    /*font-weight: bold;*/
    /*Webdevtool is really useful, you can style there in real time,
      find out the positions, and troubleshoot and find problems.
      It's kinda like using Photoshop*/
}

/*This below code was set to move the div that
  contains the table*/
div.users{
    width: 98%;
    margin-left: 18px;
}

/*There will be another point taht the page is so squashed
  that the text will overflow again, at that point
  use another @media and use overflow: hidden on td*/
/*Also note that time from database is different from our time in philippines*/

a.subMenuLink{
    /*!important prioritizes this, cause theres hierchy or */
    padding-left: 65px !important;
    padding-top: 10px !important;
    padding-bottom: 10px !important;
    text-transform: none;
    font-size: 17px !important;
}

/*Don't rely too much on !important, its better
  to go through and understand the order and code*/
a.subMenuLink i{
    font-size: 17px !important;
    margin-right: -3px !important;
    /*This below affects icon*/
    width: 30px !important;
}

ul.subMenus{
    /*This removes the dropdown bullet point signs*/
    list-style-type: none;
    background: #c26a80;
    /*Had to add below this cause submenu has gap without this*/
    margin-left: -40px;
    /*This property below will make this part disappear,
      you can't even find it with inspect webdevtool*/
    display: none;
}


/*You can see the elements in left side of webdevtool
  hover over it and youll see which covers which, usefu*/


/*This is the element it targets*/
/*<i class="fa fa-angle-up mainMenuIconArrow"></i>*/
i.mainMenuIconArrow{
    /*This causes the icon to go right*/
    float: right;
    margin-top: 5px;
    /*This property below was supposed to inherit from above
      this one ul.dashboard_menu_lists li.liMainMenu a i
      The !important cut that ties*/
    font-size: 20px !important;
}


/*This below block of code is for the hover like thing on subMenus*/
.subMenuActive{
    font-weight: bold;
    border-top: 2px solid white;
    border-bottom: 2px solid white;
    background: #763a49;
}

.productTextAreaInput{
    width: 100%;
    height: 75px;
    /*I added the border property cause his styling is different works
      different, might be problem with the styling add on at the very top*/
    border: 1px solid #d6d7da;
    border-radius: 5px;
    font-size: 16px;
    font-family: Arial;
    /*This code below removes the resizable function of text area*/
    resize: none
}

/*This below code block is his solution to overzised images,
  which we already solved with our dynamic css style. Lets try
  his codes for now*/
/*Lmao our code is good, but if the content is long length wise it stretches*/
/*Still not dynamic the images overflow, solve this later*/
.productImages{
    /*Don't use */
    max-width: 100px;
    max-height: 100px;
    display: block;
    margin-left: auto;
    margin-right: auto;
    overflow: hidden;
}

/*table td.firstname works, not this code block below
  We looked hard for a solution, and the solution was
  just the one set in table td.firstname CSS specifier*/
/*
td.firstName{
    overflow: hidden;
}
*/

/*This means both of those class are targeted*/
#suppliersSelect, #products{
    display: block;
    width: 100%;
    height: 30px;
    border-color: #d2d2d2;
    border-style:double;
    margin-bottom: 10px;
    font-family: arial;
    background: white;
    height: 110px;
    max-height: 110px;
}

/*To remove bullet points in products column at supplier-view*/
td.productsTD{
    list-style-type: none;
}

/*This one helps in update form for suppliers view*/
/*We turned it back the id to supplierselect so we dont need this one, its just styling anyway*/
/*
#products{
    display: block;
    width: 100%;
    height: 30px;
    border-color: #d2d2d2;
    border-style:double;
    margin-bottom: 10px;
    font-family: arial;
    background: white;
    height: 110px;
    max-height: 110px;
}
*/



{End}------[{login.css}]------{File}












{Start}------[{add.php}]------{File}



<?php
    /*It's ok if this and that have similar names, they are
    separated by folders anyway. But lets change it anyways*/
    /*Test site with vardump. this will show the input you placed var_dump($_POST)*/
    /*Start the session*/
    session_start();


    /*var_dump($_POST);
    var_dump($_FILES); //This line shows the img file, check out in google var_masterpiece, the name is img thats what we set
    die;*/


    //Re-read this hole thing again cause this got more confusing with the dynamic change
    //We'll now make this dynamic 
    //Capture the table mappings.
    include('table_columns.php');

    //From this point forward Chapter 14 of Video Project, I'll trust you to comprehend the code
    //Without a copious amound of comments right next to it
    //This code below will place $_SESSION['table'] to $table_name
    //Capture the table name.
    $table_name = $_SESSION['table'];
    $columns = $table_columns_mapping[$table_name];

    // var_dump($columns);
    // die;

    //This $_SESSION collerates with the one set at each page (user-add, supplier-add, product-add) then it pulls out the one related to it 
    // var_dump($columns);
    // die;

    // Loop through the columns
    $db_arr = [];
    $user = $_SESSION['user'];

    //var_dump($table_name);
    // var_dump($_POST);
    // die;

    //remember foreach works with array
    foreach($columns as $column){
        //This line below confusing, comprehend it later. NOW() gets the current time by the way.
        if(in_array($column, ['created_at','updated_at'])) $value = date('Y-m-d H:i:s');
        else if ($column == 'created_by') $value = $user['id'];
        //Unsure about these entire code block
        else if ($column == 'password') $value = password_hash($_POST[$column], PASSWORD_DEFAULT);
        else if ($column == 'img') {
            // Upload or move the file to our directory
            $target_dir = "../uploads/products/";
            $file_data = $_FILES[$column];
            /*var_dump($file_data);
            die;*/

            //Start: This code block was copied from update-product
            $value = NULL;
            $file_data = $_FILES['img'];
            /*var_dump($file_data);
            die;*/
        
            //What does that !== mean? Not equal to?
            if($file_data['tmp_name'] !== '' ){
                
                $file_name = $file_data['name'];
                //This code below was added, above line of code can still work alone if you want
                //Basically this couple of two lines below, makes it so instead of the real name, it makes its own custom name for the uploaded
                $file_ext = pathinfo($file_name, PATHINFO_EXTENSION); //This line grabs file extension of the image
                $file_name = 'product-' . time() . '.' . $file_ext;
            
                //var_dump($file_name);
                //die;
            
                $check = getimagesize($file_data['tmp_name']);
                //$file_name_value = NULL;
                /*var_dump($check);
                die;*/
            
                // Move the file
                // If not (equals) thats what the exclamation mark means if(!$check){
                if($check){
                    // Move the files
                    // move_uploaded_file(filename, destination); format. We append $target_dir and $file_name. This code block will move the uploaded images not just in the database but the folder too
                    if(move_uploaded_file($file_data['tmp_name'], $target_dir . $file_name)){
                        // Save the file_name to the database.
                        $value = $file_name;
                    }
                }
                
        
            }
            //End: This code block was copied from update-product


            //Start: This was replaced by code sequence above
            // $file_name = $file_data['name'];
            // //This code below was added, above line of code can still work alone if you want
            // //Basically this couple of two lines below, makes it so instead of the real name, it makes its own custom name for the uploaded
            // $file_ext = pathinfo($file_name, PATHINFO_EXTENSION); //This line grabs file extension of the image
            // $file_name = 'product-' . time() . '.' . $file_ext;

            // //var_dump($file_name);
            // //die;

            // $check = getimagesize($file_data['tmp_name']);
            // /*var_dump($check);
            // die;*/

            // // Move the file
            // // If not (equals) thats what the exclamation mark means if(!$check){
            // if($check){
            //     // Move the files
            //     // move_uploaded_file(filename, destination); format. We append $target_dir and $file_name. This code block will move the uploaded images not just in the database but the folder too
            //     if(move_uploaded_file($file_data['tmp_name'], $target_dir . $file_name)){
            //         // Save the file_name to the database.
            //         $value = $file_name;
            //     }
            // } else {    
            //     // Do not move the files
            // }
            //End: This was replaced by code sequence above

            // Save the path to our database, this line note is dated
            //var_dump($file_data);
            //die;
        }
        /* Removed in chapter 19 26:04
        else if ($column == 'suppliers') {
            var_dump($_POST);
            die;
        }
        */
        else $value = isset($_POST[$column]) ? $_POST[$column] : '';
        
        /* This two line of codesl, was to determine the cause of error why the images we upload doesnt go to directory uploads\products
        var_dump($column, $value);
        $db_arr[$column] = $value;
        */

        //This line below means: If is set that means its not empty then we capture the column or/of the value if not lets just do none so : is the if here, ? might be the capture. Tutorial guy said.
        $db_arr[$column] = $value;
        
    }
    
    // var_dump($db_arr);
    // die;

    //Does the foreach contained in that block or it leaves to attach this implode?
    //Remember in php . is the concatenation operator
    //this code below relates to the values the foreach got
    $table_properties = implode(", ", array_keys($db_arr));
    $table_placeholders = ':' . implode(", :", array_keys($db_arr));
    //$table_properties = implode()

    // var_dump($table_placeholders);
    // var_dump($table_placeholders);
    // var_dump($db_arr);
    // die;
   
    //var_dump($db_arr);
    //die;

    //phpdelusions.net find codes in relation to sql and php communication
    //var_dump($columns); With this code, if you go to user-add or product-add, and you click submit button, you will see what table it grabs
    //die;


    //This code below will reset table or place nothing in it,
    //if not the value it will show is user which was set in user-add.php
    //$_SESSION['table'] = ''; dont use this, the table variable must contain users
    //as users is the name of the table in our database, and a connection
    
    //This code below, so the first_name inside $_POST
    //correlates to the name="" attribute in inputs
    //For users data

    /* Got commented out cause we're updating to a more dynamic code
    $first_name = $_POST['first_name'];
    $last_name = $_POST['last_name'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    //var_dump($password); see the input without encryption
    //Password length changed to 300, as to accomodate the encrypted version of password
    //The below code encrypts at make it hard for the password to be seen 
    $encrypted = password_hash($password, PASSWORD_DEFAULT);
    */

    //var_dump($_SESSION);
    //Again with this self reading into, just let the entire video end before making conspiracies
    //var_dump($_POST);
    //This below code makes it so we don't stay at this php file
    //header('location: /fullstackwebproject/PHPProjectInventoryManagementSystem/user-add.php');
    //He reordered something in phpmyadmin in our database, he made email come before password column
    //I guess, the order in phpmyadmin database must match the one in codes? I think?

    /*$table_name(first_name, last_name, email, password, created_at, updated_at) Deprecated code line below INSERT INTO*/
    //('".$first_name."','".$last_name."','".$email."','".$encrypted."', NOW(), NOW())"; Deprecated code line below VALUES

    //Warning last time we did this $table_name(table_properties) instead of this $table_name($table_properties) notice the difference in snytax?
    //With this you can just keep using var_dump(); die; and other methods of debugging


    // Adding the record to main table. Chapter 19
    try {
        $sql = "INSERT INTO  
                            $table_name($table_properties)
                            /*$table_name(supplier, product, updated_at, created_at)*/ 
                        VALUES
                            ($table_placeholders)";
        //note dont place single quote on NOW() 

        include('connection.php');
        //Command like how we would have typed it in phpmyadmin
        //exec is probably a method or function inside PDO which is in $conn
        
        
        $stmt = $conn->prepare($sql);
        $stmt->execute($db_arr);
        //$stmt->execute($db_arr);
        //The below dots probably connect them like in javascript

        // Get saved id
        $product_id = $conn->lastInsertId();



        // Add supplier
        if($table_name === 'products'){
            // ? is an or at this situation I think
            $suppliers = isset($_POST['suppliers']) ? $_POST['suppliers'] : [];
            if($suppliers){
                // Loop through the suppliers and add record
                foreach($suppliers as $supplier){
                    //$pid = unfinished line

                    $supplier_data = [
                        //Corelates with below block of code
                        'supplier_id' => $supplier,
                        'product_id' => $product_id,
                        'updated_at' => date('Y-m-d H:i:s'),
                        'created_at' => date('Y-m-d H:i:s')

                    ];


                    $sql = "INSERT INTO productsuppliers
                                        (supplier, product, updated_at, created_at)
                                    VALUES
                                        (:supplier_id, :product_id, :updated_at, :created_at)";

                    /*
                    $sql = "INSERT INTO productsuppliers
                                        ($table_properties) 
                                    VALUES
                                        ($table_placeholders)";
                                        //(:supplier, :product, :updated_at, :created_at)";         
                    //note dont place single quote on NOW() 
                    */

                    //include('connection.php');
                    //Command like how we would have typed it in phpmyadmin
                    //exec is probably a method or function inside PDO which is in $conn

                    //This makes adding product show in productsupplies
                    $stmt = $conn->prepare($sql);
                    $stmt->execute($supplier_data);
                    //$stmt->execute($db_arr);
                    //The below dots probably connect them like in javascript
                    
                }
                // var_dump($suppliers);
                // die;    
            }

            //This below grabs the suppliers id
            //var_dump($_POST['suppliers']);
            //die;
        }

        $response = [
            'success' => true,
            'message' => 'Succesfully added to the system'
            //'message' => $first_name . ' ' . $last_name . ' succesfully added to the system' this became useless once this got dynamic
        ];
        //The PDOException makes it so we get a proper error message, getMessage is from $e which probably a parameter
    } catch (PDOException $e){
        $response = [
            'success' => false,
            'message' => $e->getMessage()
        ];
    }
    
    //This sets another variable with value in $_SESSION
    $_SESSION['response'] = $response;
    header('location: ../' . $_SESSION['redirect_to']);
    //Above line of code ends you at where it's currently in

    //header('location: ../user-add.php'); old Deprecated Code Line

    //Also we have to decrypt password when logging in
    //Storing it in quote is a must
    // Now we'll be Adding Record
    //include('connection.php');
    
    /*var_dump($conn); test and see if it works with this
     die;*/

    /*
    $_POST

    (PHP 4 >= 4.1.0, PHP 5, PHP 7, PHP 8)

    $_POST ‚Äî HTTP POST variables

    An associative array of variables passed to the current
    script via the HTTP POST method when using application/x-www-form-urlencoded
    or multipart/form-data as the HTTP Content-Type in the request. 
    */
?>


{End}------[{add.php}]------{File}








{Start}------[{Connection.php}]------{File}



<?php
    //Why no session here? Cause this is not a page, I think
    //this is just a starter template I think
    //The server we're in
    $servername = 'localhost';
    //why root? also you can see phpcode version in phpmyadmin
    //Go to phpmyadmin, go priviliages on one of the database tables and see
    $username = 'root';
    //Password is entirely unsure
    $password = '';

    //There's other ways to do that one, like using mySQLi?
    
    //https://www.geeksforgeeks.org/what-is-pdo-in-php/
    // Connecting to database.
    // PDO is object or method to how we connect?
    // This tutorial guy has a thin grasp of what he's teaching
    // Exception is to stop something?
    try {
        //Turn dbname=inventory to inventorywewe, it will not work and connected succesfully wont be echoed
        //I read the notes, so PDO is a class (Comes with php), inside parentheses are parameters which is then a related to function __Constructors that uses $this->
        $conn = new PDO("mysql:host=$servername;dbname=inventory", $username, $password);
        //So maybe this new PDO turns $conn into an object, which then can let others use it to grab its methods
        // set the PDO error mode to exception. Also what is that new keyword next to PDO?
        //https://www.php.net/manual/en/pdo.setattribute.php Not sure what the below code is for
        //setAttribute must be a function cause it has () as postfix, and that function is from inside the $conn I think
        //So I think the above new PDO creates the PDO inside, I think this is wrong assumption though
        //Or $conn is running the method(object function/function with the values from $conn
        //-> its pulling that from $conn, setAttribute is object function
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        //https://stackoverflow.com/questions/3173501/whats-the-difference-between-double-colon-and-arrow-in-php
        //Maybe the PDO inside parenthesis of setAttribute is from the new PDO we set inside $conn,
        //So maybe the -> means lettting that method setAttribute use whats inside $conn
        //Also what's ::
        //this echo below just shows that the connection or form works when clicked
        /*echo 'Connected Successfully.';*/
        /*The bellow code can work without \, so why add it?*/
    } catch (\Exception $e) {
        //An error message when dbname is misspelled or
        //something else wrong wont show if this below code
        //is not set. Also getMessage is a function, $e must be a parameter
        /*echo $e->getMessage();*/
        $error_message = $e->getMessage();
    }

    //$conn has become a class, PDO is a class or called a template (or at least a container of one)
    //-> pulls out an attribute or an object function from a class
?>


{End}------[{Connection.php}]------{File}






{Start}------[{delete-user.php}]------{File}

<?php
    $data = $_POST;

    //Adding (int) makes the data from 'string(1) "1"' (click the post line in network) to int(1)
    //Is it turning it back into an int? Cause data is being filtered all the time
    $user_id = (int) $data['user_id'];
    $first_name = $data['f_name'];
    $last_name = $data['l_name'];

    //var_dump($user_id); you left this, and this stopped the alert from working, it interfered

    //We copied this setup code below from add.php. So some notes might not make sense
    try {
        $command = "DELETE FROM users WHERE id={$user_id}";
        //var_dump($command);
        //die;
        //I don't know what int(17) string(29) correspond to
        //int(17) string(29) "DELETE FROM users WHERE id=17" 

        include('connection.php');
        //Command like how we would have typed it in phpmyadmin
        //exec is probably a method or function inside PDO which is in $conn
        $conn->exec($command); 


        //What's up with echo used on json_encode?
        //The below dots probably connect them like in javascript, concatenation
        //echo json_encode([
        //return json_encode([
        echo json_encode([
            'success' => true,
            'message' => $first_name . ' ' . $last_name . ' is successfully deleted.'
        ]);

        //The PDOException makes it so we get a proper error message, getMessage is from $e which probably a parameter
    } catch (PDOException $e){
        echo json_encode([
            'success' => false, 
            'message' => ' Error processing your request!'
        ]);
    }

?>



{End}------[{delete-user.php}]------{File}








{Start}------[{delete.php}]------{File}



<?php
    $data = $_POST;

    //Adding (int) makes the data from 'string(1) "1"' (click the post line in network) to int(1)
    //Is it turning it back into an int? Cause data is being filtered all the time
    //This below, at the moment is related to the array inside data of ajax in product-view
    $id = (int) $data['id'];
    $table = $data['table'];

    // You can see the results in network response
    // var_dump($id);
    // var_dump($table);
    // die;

    //$first_name = $data['f_name'];
    //$last_name = $data['l_name'];

    //var_dump($user_id); you left this, and this stopped the alert from working, it interfered

    //Adding the record
    //We copied this setup code below from add.php. So some notes might not make sense
    try {
        include('connection.php');

        //Comprehend this two Chapter 21
        //Delete junction table (See database schema or workflow whatever)
        if($table === 'suppliers'){
            $supplier_id = $id;
            $command = "DELETE FROM productsuppliers WHERE supplier={$id}";
            $conn->exec($command); 
        }
        //Without this below block of code some rows in view products cant be deleted
        if($table === 'products'){
            $supplier_id = $id;
            $command = "DELETE FROM productsuppliers WHERE product={$id}";
            $conn->exec($command); 
        }

        //Delete main table
        $command = "DELETE FROM $table WHERE id={$id}";
        //$command = "DELETE FROM users WHERE id={$user_id}";
        //var_dump($command);
        //die;
        //I don't know what int(17) string(29) correspond to
        //int(17) string(29) "DELETE FROM users WHERE id=17" 

        //Command like how we would have typed it in phpmyadmin
        //exec is probably a method or function inside PDO which is in $conn
        $conn->exec($command); 


        //What's up with echo used on json_encode?
        //The below dots probably connect them like in javascript, concatenation
        //echo json_encode([
        //return json_encode([
        echo json_encode([
            'success' => true,
        ]);

        //The PDOException makes it so we get a proper error message, getMessage is from $e which probably a parameter
    } catch (PDOException $e){
        echo json_encode([
            'success' => false, 
        ]);
    }

?>



{End}------[{delete.php}]------{File}







{Start}------[{get-product.php}]------{File}

<?php

include('connection.php');
$id = $_GET['id'];

//This code was pulled from product-view.php
$stmt = $conn->prepare("SELECT * FROM products WHERE id=$id");
$stmt->execute();
$row = $stmt->fetch(PDO::FETCH_ASSOC);
//$stmt->setFetchMode(PDO::FETCH_ASSOC);

//Fetch suppliers
$stmt = $conn->prepare("
    SELECT supplier_name, suppliers.id
        FROM suppliers, productsuppliers
        WHERE
            productsuppliers.product=$id
                AND
            productsuppliers.supplier=suppliers.id                                 
    ");
$stmt->execute();
$suppliers = $stmt->fetchAll(PDO::FETCH_ASSOC);
//$row = $stmt->fetchAll(PDO::FETCH_ASSOC);

//God dang this new stuffs are confusing, array_column stuff
//Organizing stuff this thing
$row['suppliers'] = array_column($suppliers, 'id');

//var_dump($row);
//die;

echo json_encode($row);

//When using get method you can see it in network tab on webdevtools
//What exactly can echo do?
//this grabs that row, you can place $id too if you want to grab it
//var_dump($row);
//die;

?>


{End}------[{get-product.php}]------{File}






{Start}------[{get-supplier.php}]------{File}

<?php
//This whole code is copied from get-product
include('connection.php');
$id = $_GET['id'];

//This code was pulled from product-view.php
$stmt = $conn->prepare("SELECT * FROM suppliers WHERE id=$id");
$stmt->execute();
$row = $stmt->fetch(PDO::FETCH_ASSOC);
//$stmt->setFetchMode(PDO::FETCH_ASSOC);

//Fetch products
$stmt = $conn->prepare("
    SELECT product_name, products.id
        FROM products, productsuppliers
        WHERE
            productsuppliers.supplier=$id
                AND
            productsuppliers.product=products.id                                 
    ");
$stmt->execute();
$products = $stmt->fetchAll(PDO::FETCH_ASSOC);
//$row = $stmt->fetchAll(PDO::FETCH_ASSOC);

//God dang this new stuffs are confusing, array_column stuff
//Organizing stuff this thing
$row['products'] = array_column($products, 'id');

//var_dump($row);
//die;

echo json_encode($row);

//When using get method you can see it in network tab on webdevtools
//What exactly can echo do?
//this grabs that row, you can place $id too if you want to grab it
//var_dump($row);
//die;

?>


{End}------[{get-supplier.php}]------{File}









{Start}------[{logout.php}]------{File}

<?php
    session_start();

    //remove all session variables
    session_unset();

    //destroy
    session_destroy();

    //To see what this does run this logout then go back to dashboard.php
    //Remove header to test what happens

    //Could be in parenthisis is key value pair and we ones who set the value?
    //This don't work -> header('location: /PHPProjectInventoryManagementSystem/login.php');
    //Also the header below, dont forget to add the / at the very end, or it won't work
    header('location: /fullstackwebproject/PHPProjectInventoryManagementSystem/login.php');
    //exit(); this code or php can run without this exit line, I dont even know this keyword
?>


{End}------[{logout.php}]------{File}








{Start}------[{show.php}]------{File}



<?php

include('connection.php');

//All the $show_table names started here, actually it might have started at add.php

//Try and comprehend this
//table name comes from add.php
$table_name = $show_table;
//$table_name = $_SESSION['table'];

//$stmt = $conn->prepare("SELECT * FROM users ORDER BY created_at DESC"); line of code from show-users.php
$stmt = $conn->prepare("SELECT * FROM $table_name ORDER BY created_at DESC");
$stmt->execute();
$stmt->setFetchMode(PDO::FETCH_ASSOC);

return $stmt->fetchAll();

?>


{End}------[{show.php}]------{File}








{Start}------[{table_columns.php}]------{File}


<?php
//Note you forgot to add email column before, so remember to not be forgetful, or it send error of missing row
$table_columns_mapping = [
    'users' => [
        'first_name','last_name','email','password','created_at','updated_at'
    ],
    'products' => [
        'product_name','description','img','created_by','created_at','updated_at'
    ],
    'suppliers' => [
        'supplier_name','supplier_location','email','created_by','created_at','updated_at'
    ]
];

?>


{End}------[{table_columns.php}]------{File}









{Start}------[{update-product.php}]------{File}

<?php

    //var_dump($_POST);
    //var_dump($_FILES);
    //These two below grabs the columns of the row selected, which then are sent by $_POST
    $product_name = $_POST['product_name'];
    $description = $_POST['description'];
    $pid = $_POST['pid'];


    // Upload or move the file to our directory
    $target_dir = "../uploads/products/";
    //img relates to the name="img" set in making bootstrap update thing
    //$file_name_value = '';
    $file_name_value = NULL;
    $file_data = $_FILES['img'];
    /*var_dump($file_data);
    die;*/

    //What does that !== mean? Not equal to?
    if($file_data['tmp_name'] !== '' ){
        
        $file_name = $file_data['name'];
        //This code below was added, above line of code can still work alone if you want
        //Basically this couple of two lines below, makes it so instead of the real name, it makes its own custom name for the uploaded
        $file_ext = pathinfo($file_name, PATHINFO_EXTENSION); //This line grabs file extension of the image
        $file_name = 'product-' . time() . '.' . $file_ext;
    
        //var_dump($file_name);
        //die;
    
        $check = getimagesize($file_data['tmp_name']);
        //$file_name_value = NULL;
        /*var_dump($check);
        die;*/
    
        // Move the file
        // If not (equals) thats what the exclamation mark means if(!$check){
        if($check){
            // Move the files
            // move_uploaded_file(filename, destination); format. We append $target_dir and $file_name. This code block will move the uploaded images not just in the database but the folder too
            if(move_uploaded_file($file_data['tmp_name'], $target_dir . $file_name)){
                // Save the file_name to the database.
                $file_name_value = $file_name;
            }
        }
    }



    // var_dump($_POST);
    // die;

    // var_dump($file_data);
    // die;

    
    /*
    else {    
        // Do not move the files
    }
    */
    // var_dump($product_name);
    // var_dump($description);
    // var_dump($pid);
    // var_dump($file_name_value);
    // die; You can use this and check it on network requests in browser
    // The following code block was copied from

    //Update the product record

    try {
        
        $sql = "UPDATE products 
                    SET
                    product_name =?, description =?, img =?
                    WHERE id =?";
                            //     $table_name($table_properties) 
                            // VALUES
                            //     ($table_placeholders)";
        //Note dont place single quote on NOW() 

        include('connection.php');
        //Command like how we would have typed it in phpmyadmin
        //exec is probably a method or function inside PDO which is in $conn

        $stmt = $conn->prepare($sql);
        $stmt->execute([$product_name, $description, $file_name_value, $pid]);
        //The ? or parametized query was 
        //$stmt->execute($db_arr);
        //The below dots probably connect them like in javascript

        // Delete the old values (Since I think its in another table? Products and productsuppliers)
        // Why is it a question mark again exactly? Also this one probably deletes all column in that row?
        // Also keep your attention to the code word by word, you changed WHERE TO FROM here before and it caused errors. But the error doesnt point the problem its at
        $sql = "DELETE FROM productsuppliers WHERE product=?";
        $stmt = $conn->prepare($sql);
        $stmt->execute([$pid]);

        // $product_name;
        // $description;
        // $file_name_value;
        // $pid;

        //So product table and productsuppliers are working intangent here

        //if($suppliers){
        // Loop through the suppliers and add record
        // Get suppliers
        $suppliers = isset($_POST['suppliers']) ? $_POST['suppliers'] : [];
        foreach($suppliers as $supplier){
            //$pid = unfinished line
            $supplier_data = [
                //Corelates with below block of code
                'supplier_id' => $supplier,
                'product_id' => $pid,
                'updated_at' => date('Y-m-d H:i:s'),
                'created_at' => date('Y-m-d H:i:s')
            ];


            $sql = "INSERT INTO productsuppliers
                                (supplier, product, updated_at, created_at)
                            VALUES
                                (:supplier_id, :product_id, :updated_at, :created_at)";

            /*
            $sql = "INSERT INTO productsuppliers
                                ($table_properties) 
                            VALUES
                                ($table_placeholders)";
                                //(:supplier, :product, :updated_at, :created_at)";         
            //note dont place single quote on NOW() 
            */

            //include('connection.php');
            //Command like how we would have typed it in phpmyadmin
            //exec is probably a method or function inside PDO which is in $conn

            //This makes adding product show in productsupplies
            $stmt = $conn->prepare($sql);
            $stmt->execute($supplier_data);
            //$stmt->execute($db_arr);
            //The below dots probably connect them like in javascript
            
        }
        // var_dump($suppliers);
        // die;    
    //}

        $response = [
        'success' => true,
        'message' => "<strong>$product_name</strong> Succesfully updated to the system"
        //'message' => $first_name . ' ' . $last_name . ' succesfully added to the system' this became useless once this got dynamic
        //Also Chapter 18 update the message array wont work with $product_name if we use single quotes, so use double quotes
        ];

        
    } catch (Exception $e) {
        
        $response = [
            'success' => false,
            'message' => "<strong>$product_name</strong> Unsuccesfully updated to the system"
            //'message' => 'Error processing your request'
            //'message' => $first_name . ' ' . $last_name . ' succesfully added to the system' this became useless once this got dynamic
            //Sometimes single quotes and double quotes are interchangable
            ];
    }

    // Save the database
    //the blue description wont cause trouble

    //This completes it as ajax and json work together
    echo json_encode($response);
?>


{End}------[{update-product.php}]------{File}






{Start}------[{update-supplier.php}]------{File}

<?php

    //These four relates to the message: query in bootstrapdialog, the for values
    $supplier_name = isset($_POST['supplier_name']) ? $_POST['supplier_name'] : '';
    $supplier_location = isset($_POST['supplier_location']) ? $_POST['supplier_location'] : '';
    $email = isset($_POST['email']) ? $_POST['email'] : '';
    //$products = isset($_POST['products']) ? $_POST['products'] : '';

    //var_dump($_POST);
    //var_dump($_FILES);
    //These two below grabs the columns of the row selected, which then are sent by $_POST
    // $product_name = $_POST['product_name'];
    // $description = $_POST['description'];
    
    $supplier_id = $_POST['sid'];

    // var_dump($_POST);
    // die;

    // var_dump($file_data);
    // die;

    
    /*
    else {    
        // Do not move the files
    }
    */
    // var_dump($product_name);
    // var_dump($description);
    // var_dump($pid);
    // var_dump($file_name_value);
    // die; You can use this and check it on network requests in browser
    // The following code block was copied from

    //Update the product record

    try {
        //This goes to suppliers table to update it
        $sql = "UPDATE suppliers 
                    SET
                    supplier_name = ?, supplier_location = ?, email = ?
                    WHERE id =?";
                            //     $table_name($table_properties) 
                            // VALUES
                            //     ($table_placeholders)";
        //Note dont place single quote on NOW() 

        include('connection.php');
        //Command like how we would have typed it in phpmyadmin
        //exec is probably a method or function inside PDO which is in $conn

        $stmt = $conn->prepare($sql);
        $stmt->execute([$supplier_name, $supplier_location, $email, $supplier_id]);
        //The ? or parametized query was 
        //$stmt->execute($db_arr);
        //The below dots probably connect them like in javascript

        // Delete the old values (Since I think its in another table? Products and productsuppliers)
        // Why is it a question mark again exactly? Also this one probably deletes all column in that row?
        // Also keep your attention to the code word by word, you changed WHERE TO FROM here before and it caused errors. But the error doesnt point the problem its at
        $sql = "DELETE FROM productsuppliers WHERE supplier=?";
        $stmt = $conn->prepare($sql);
        $stmt->execute([$supplier_id]);

        // $product_name;
        // $description;
        // $file_name_value;
        // $pid;

        //So product table and productsuppliers are working intangent here

        //if($suppliers){
        // Loop through the suppliers and add record
        // Get suppliers
        // Get Products
        $products = isset($_POST['products']) ? $_POST['products'] : [];
        //$products = isset($_POST['products']) ? $_POST['products'] : '';
        //$suppliers = isset($_POST['suppliers']) ? $_POST['suppliers'] : [];
        foreach($products as $product){
            //$pid = unfinished line
            $supplier_data = [
                //Corelates with below block of code
                'supplier_id' => $supplier_id,
                'product_id' => $product,
                'updated_at' => date('Y-m-d H:i:s'),
                'created_at' => date('Y-m-d H:i:s')
            ];


            $sql = "INSERT INTO productsuppliers
                                (supplier, product, updated_at, created_at)
                            VALUES
                                (:supplier_id, :product_id, :updated_at, :created_at)";

            /*
            $sql = "INSERT INTO productsuppliers
                                ($table_properties) 
                            VALUES
                                ($table_placeholders)";
                                //(:supplier, :product, :updated_at, :created_at)";         
            //note dont place single quote on NOW() 
            */

            //include('connection.php');
            //Command like how we would have typed it in phpmyadmin
            //exec is probably a method or function inside PDO which is in $conn

            //This makes adding product show in productsupplies
            $stmt = $conn->prepare($sql);
            $stmt->execute($supplier_data);
            //$stmt->execute($db_arr);
            //The below dots probably connect them like in javascript
            
        }
        // var_dump($suppliers);
        // die;    
    //}

        $response = [
        'success' => true,
        'message' => "<strong>$supplier_name</strong> Succesfully updated to the system"
        //'message' => $first_name . ' ' . $last_name . ' succesfully added to the system' this became useless once this got dynamic
        //Also Chapter 18 update the message array wont work with $product_name if we use single quotes, so use double quotes
        ];

        
    } catch (Exception $e) {
        
        $response = [
            'success' => false,
            'message' => "<strong>$supplier_name</strong> Unsuccesfully updated to the system"
            //'message' => 'Error processing your request'
            //'message' => $first_name . ' ' . $last_name . ' succesfully added to the system' this became useless once this got dynamic
            //Sometimes single quotes and double quotes are interchangable
            ];
    }

    // Save the database
    //the blue description wont cause trouble

    //This completes it as ajax and json work together
    echo json_encode($response);
?>


{End}------[{update-supplier.php}]------{File}










{Start}------[{update-user.php}]------{File}


<?php
    $data = $_POST;

    //Adding (int) makes the data from 'string(1) "1"' (click the post line in network) to int(1)
    //Is it turning it back into an int? Cause data is being filtered all the time
    $user_id = (int) $data['userId'];
    $first_name = $data['f_name'];
    $last_name = $data['l_name'];
    $email = $data['email'];
    
    //$now = date('Y-m-d H:i:s');

    /*You can see the results of this at network and then requests from webdevtool
    var_dump($user_id);
    var_dump($first_name);
    var_dump($last_name);
    var_dump($email);
    die;
    */

    //This code was copy pasted from delete-user so some comments might not make sense
    //var_dump($user_id); you left this, and this stopped the alert from working, it interfered

    //We copied this setup code below from add.php. So some notes might not make sense
    try {
        $sql = "UPDATE users SET email=?, first_name=?, last_name=?, updated_at=? WHERE id=?";

        //var_dump($command);
        //die;
        //I don't know what int(17) string(29) correspond to
        //int(17) string(29) "DELETE FROM users WHERE id=17" 

        include('connection.php');
        $conn->prepare($sql)->execute([$email, $first_name, $last_name, date('Y-m-d h:i:s'), $user_id]);
        //$conn->prepare($sql)->execute([$email, $first_name, $last_name, NOW(), $user_id]);

        //Command like how we would have typed it in phpmyadmin
        //exec is probably a method or function inside PDO which is in $conn
        //$conn->exec($command); 

        //Note I noticed if you click the logos next to update or delte text it will refresh like anchor

        //What's up with echo used on json_encode?
        //The below dots probably connect them like in javascript, concatenation
        //echo json_encode([
        //return json_encode([
        echo json_encode([
            'success' => true,
            'message' => $first_name . ' ' . $last_name . ' is successfully updated.'
        ]);

        //The PDOException makes it so we get a proper error message, getMessage is from $e which probably a parameter
    } catch (PDOException $e){
        echo json_encode([
            'success' => false, 
            'message' => ' Error processing your request!'
        ]);
    }
    //You can actually remove try and echo or comment it out and this will still work
?>




{End}------[{update-user.php}]------{File}















{Start}------[{script.js}]------{File}



/*Since there's no function at the moment, the
    parenthesis inside has no prefix function.
    Seems like the => is the one making it happen*/
/*
    toggleBtn.addEventListener('click', () => {
    alert('Hello Userman');
    });
*/
var sideBarIsOpen = true;

/*Why is event in parenthesis? It still will work without that inside*/
toggleBtn.addEventListener('click', (event) => {
    event.preventDefault(); /*This line prevents refresh caused by a element*/
        
    /*remember if will automatically run without condition if its truthy*/
    if(sideBarIsOpen){
        dashboard_sidebar.style.width = '10%'; /*this line expects and id, not a class*/
        dashboard_sidebar.style.transition = '0.3s all' /*Weird we only set it here, not on the css or the else expression*/
        dashboard_content_container.style.width = '90%';
        /*Notice the expression, first is the id of the element,
        second is the style, third is the property then the change*/
        dashboard_logo.style.fontSize = '50px';
        userImage.style.width = '60px';
    
        /*Here we're using this instead of getElementById*/
        menuIcons = document.getElementsByClassName('menuText');
        /*I added the console.logs because the concept is loose to me.
        but what below says is it the menuText has value of 2 or is
        2, but the for loop starts at 0, so if i value becomes
        2 the loop will end since the var i started from 0, so
        thats 0, 1, 2(end). Only two was push out which is the length*/
        /*console.log(menuIcons)*/
        for(var i=0; i < menuIcons.length; i++){
            menuIcons[i].style.display = 'none';
        }
        
        /*Comprehend this. Note that since unlike menuText theres only one of this we dont need for loop*/
        document.getElementsByClassName('dashboard_menu_lists')[0].style.textAlign = 'center';
        
        sideBarIsOpen = false;

    } else {
        dashboard_sidebar.style.width = '20%';
        dashboard_content_container.style.width = '80%';
        dashboard_logo.style.fontSize = '80px';
        userImage.style.width = '80px';

        menuIcons = document.getElementsByClassName('menuText');
        for(var i=0; i < menuIcons.length; i++){
            /*console.log(menuIcons)*/
            menuIcons[i].style.display = 'inline';
        }
        
        document.getElementsByClassName('dashboard_menu_lists')[0].style.textAlign = 'left';
        
        sideBarIsOpen = true;
    }

});

/* showHideSubMenu is the class of an element were targetting */
// Submenu show / hide function.
document.addEventListener('click', function(e){
    let clickedEl = e.target;

    if(clickedEl.classList.contains('showHideSubMenu')){
        //console.log(clickedEl.closest('li').querySelector('.subMenus')); just for checking if it works
        //closest li relates to closest. The querySelector() will be the one to be run?
        let subMenu = clickedEl.closest('li').querySelector('.subMenus');
        let mainMenuIcon = clickedEl.closest('li').querySelector('.mainMenuIconArrow');


        // Just noticed when initializing variable, its dimmed when its not used or invoked
        // Close open submenus.
        let subMenus = document.querySelectorAll('.subMenus');

        //Note that taking this notes outside might not work as some comments or notes needs context

        //So submenus has all the sub, that querySelectorAll grabbed
        //What below says: subMenus became sort of an object, the forEach is a method or function in js,
        //sub is parameter which probably has a corelating action/codes inside method forEach
        //This code below stops all subMenus from being open all at once, so it only lets one subMenu open at once
        //Close all submenus.

        subMenus.forEach((sub) => {
            //Below code basically makes it so it closes and opens
            //Line below means: if subMenu is not equal, then it's combined with this which will be run if conditions are met
            if(subMenu !== sub) sub.style.display = 'none';
            //The below line of code will show true false in console
            //console.log(subMenu === sub);
            //sub.style.display = 'none';
        });

        
        // Call function to hide/show submenu. So other scripts or pages can use it?
        // We turned it into a query which will then be used as parameter in function
        showHideSubMenu(subMenu,mainMenuIcon);

        
        //console.log(subMenus);

        //console.log('mainMenuIcon');
        //console.log('mainMenuIcon'); this line checks if this variable is recieveing querySelector parameter target/value

        /*console.log(clickedEl.closest('li'));
        console.log(clickedEl.closest('li').querySelector('.subMenus'));*/

        //let targetMenu = clickedEl.dataset.submenu; old deprecated code
        //let targetMenu = clickedEl.dataset.target; name or the target can be changed, so we changed it
        //let targetMenu = clickedEl.dataset this line grabs the entire set not just target



        /*[Start Of This Code Block Comment] - Deprecated Code We placed this in a function below
        //!= means opposite, so opposite of undefined
        //Check if there is submenu
        //if(subMenu != undefined){ depricated code
        if(subMenu != null){
            //let subMenu = document.getElementById(targetMenu); This line was moved up
            
            //this makes the on and off function really work
            //now imagine how you can use transition property here
            //if(subMenu.style.display === 'block') subMenu.style.display = 'none';
            //else subMenu.style.display = 'block'; deprecated codes

            if(subMenu.style.display === 'block') {
                subMenu.style.display = 'none';
                //This sets when the dropdown gets back up
                mainMenuIcon.classList.remove('fa-angle-down');
                mainMenuIcon.classList.add('fa-angle-left');
            } else {
                subMenu.style.display = 'block';
                //This sets when the dropdown gets dropped
                mainMenuIcon.classList.remove('fa-angle-left');
                mainMenuIcon.classList.add('fa-angle-down');
            }

            //This means the targetMenu id from element in DOM (document), so its style, the display CSS property is equal to block
            //document.getElementById(targetMenu).style.display = 'block';
        }
        [End Of This Code Block Comment]*/
        
        //console.log(targetMenu);
        
        //alert() is a javascript function
        //alert('main menu');
    }

});

// And reason for these are?
// Function - to show/hide submenu
function showHideSubMenu(subMenu,mainMenuIcon){
    if(subMenu != null){
        if(subMenu.style.display === 'block') {
            subMenu.style.display = 'none';
            //This sets when the dropdown gets back up
            mainMenuIcon.classList.remove('fa-angle-down');
            mainMenuIcon.classList.add('fa-angle-left');
        } else {
            subMenu.style.display = 'block';
            //This sets when the dropdown gets dropped
            mainMenuIcon.classList.remove('fa-angle-left');
            mainMenuIcon.classList.add('fa-angle-down');
        }
    }
}



// Add / hide active class to menu
// Get the current page
// Use selector to get the current menu or submenu
// Add the active class

//This code line below will get your current window loccation, we've used the window object before in scrimba
//console.log(window.location);

//Got it, this code sequence, first get the current site location, then place on curFile,
//then query Selector with help of variable looks for the current window location
let pathArray = window.location.pathname.split( '/' );
let curFile = pathArray[pathArray.length - 1];
//This is the result of console logging pathArray Array(4) [ "", "fullstackwebproject", "PHPProjectInventoryManagementSystem", "user-add.php" ]

//Go check .closest method again in showHideSubMenu again, the second one 
//This line below is confusing, comprehend it
let curNav = document.querySelector('a[href="./'+ curFile +'"]');
let mainNav = curNav.closest('li.liMainMenu');
//Now the active page and the sidetab it corelates to will be orange like color on side
mainNav.style.background = '#ff5a35'; //Or you can change it to pinkish # for tutorials sake #f685a1

//I Think this change of sequence of code is to make it so when we hover to submenu we can seperate the subMenu highlight, maybe?
//Understand the logic behind this, its confusing
let subMenu = curNav.closest('.subMenus');
//This below line of code makes it so subMenu active is highlighted, go figure logic behind code
curNav.classList.add('subMenuActive');

let mainMenuIcon = mainNav.querySelector('i.mainMenuIconArrow');
//let mainMenuIcon = mainNav.closest('li').querySelector('.mainMenuIconArrow');
//console.log(mainMenuIcon);

// Call function to hide/show submenu.
showHideSubMenu(subMenu,mainMenuIcon);



//console.log(curNav);

//Document Object Model
//DOM stands for Document Object Model.
//This bolow code will print out that class info in console in webdevtool on browser
//console.log(document.querySelectorAll('.liMainMenu_link'));


/*Double Click Code, My Method which he didn't Use, he used if else statement instead*/
/*
toggleBtn.addEventListener('dblclick', (event) => {
    event.preventDefault(); Note:This line prevents refresh caused by a element
    dashboard_sidebar.style.width = '20%'; Note:this line expects and id, not a class
    dashboard_content_container.style.width = '80%';
    dashboard_logo.style.fontSize = '80px';
    userImage.style.width = '80px';

    menuIcons = document.getElementsByClassName('menuText');
    for(var i=0; i < menuIcons.length; i++){
        console.log(menuIcons)
        Note: span element is inline that's why set it to inline
                (inline-block works too but its effects is sus)
        menuIcons[i].style.display = 'inline';
    }
});
*/

/* This below code will show what's being clicked
document.addEventListener('click', function(e){
    let clickedEl = e.target;
    console.log(clickedEl);
});
*/



{End}------[{script.js}]------{File}











{Start}------[{app-header-scripts.php}]------{File}


<link rel="stylesheet" type="text/css" href="css/login.css?v=<?= time(); ?>">
<link rel="stylesheet" href="css/font-awesome-4/css/font-awesome.min.css">     
<!--<script src="https://kit.fontawesome.com/9b6ef7dac1.js" crossorigin="anonymous"></script> There's an error on browser console when we use this-->
<!--Below, first one is related to CSS and second one is related to js-->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap3-dialog/1.35.4/css/bootstrap-dialog.min.css" integrity="sha512-PvZCtvQ6xGBLWHcXnyHD67NTP+a+bNrToMsIdX/NUqhw+npjLDhlMZ/PhSHZN4s9NdmuumcxKHQqbHlGVqc8ow==" crossorigin="anonymous" referrerpolicy="no-referrer" />


{End}------[{app-header-scripts.php}]------{File}







{Start}------[{app-scripts.php}]------{File}


    
    <!--This was once at the bottom of body element in user-add.php-->
    <!--Also apparently you can place a link with a link to link a link-->
    
    <script src="js/script.js?v=<?= time(); ?>"></script>
    <script src="js/jquery/jquery-3.7.1.min.js"></script>

    <!--Study how all this scripts and linking corelates-->

    <!-- Latest compiled and minified CSS @-->
    <!-- This link below is causing the font inside table to go bold/thicker change it to helvitica
         It apparently also influencing dahsboard user add on sidebar ims dahyun kim and log out.
         It also affected some of the tutorial guys elements. We found the solution out by using
         the inspect and searching which element and which stlye from which css-->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <!--For now I'll leave out the line of code above, its also off setting the forms.
        So apparently, this css coresspond with some of its functions. So we can't leave this out.
        Just go ahead and manually set some of the styling/css/elemnent it affected -->

    <!-- Optional theme @-->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">
                                        <!--Adding these three lines with @ will help remove error on console-->
    <!-- Latest compiled and minified JavaScript @--><!--More specifically this line below removes the error-->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap3-dialog/1.35.4/js/bootstrap-dialog.js" integrity="sha512-AZ+KX5NScHcQKWBfRXlCtb+ckjKYLO1i10faHLPXtGacz34rhXU8KM4t77XXG/Oy9961AeLqB/5o0KTJfy2WiA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>



{End}------[{app-scripts.php}]------{File}








{Start}------[{app-sidebar.php}]------{File}


<?php
    //We placed php here since we removed this below line of code in product-view page which template or layout was copied from users-view.php
    //Remove this and you will see the problem
    $user = $_SESSION['user']
?>

<div class="dashboard_sidebar" id="dashboard_sidebar">
    <h3 class="dashboard_logo" id="dashboard_logo">IMS</h3>
    <div class="dashboard_sidebar_user">
        <!-- <img src="images/user/dahyun.png" alt="User image."/> -->
        <img src="images/user/user1.png" alt="User image." id="userImage"/>
        <!--Notice how wi didn't do php postfix after ?-->
        <!--This will make the name from the database firstname-->
        <span><?= $user['first_name'] . ' ' . $user['last_name']?></span>
        <!--The dot there between them might be for seperating them-->
        <!--<span>Dubu</span>-->
    </div>
    <!--The <ul> tag defines an unordered (bulleted) list.
        Use the <ul> tag together with the <li> tag to
        create unordered lists. <li> means list item-->
    <div class="dashboard_sidebar_menus">
        <ul class="dashboard_menu_lists">
            <!--We removed the Management word in the span titles-->
            <!--class="menuActive" (deprecated code line?)-->
            <li class="liMainMenu">
            <!-- ./ is used because the file were href-ing is one directory above, i think-->
                <a href="./dashboard.php"><i class="fa fa-dashboard"></i> <span class="menuText">Dashboard</span></a>
            </li>
            <li class="liMainMenu">
                <!--<a href="#"><i class="fa fa-user-plus"></i> <span class="menuText">Product Management</span></a>-->
                <a href="javascript:void(0);" class="liMainMenu_link showHideSubMenu">
                    <i class="fa fa-tag showHideSubMenu"></i>
                    <span class="menuText showHideSubMenu">Product</span>
                    <i class="fa fa-angle-left mainMenuIconArrow showHideSubMenu"></i>
                </a>

                <ul class="subMenus">
                    <li><a class="subMenuLink" href="./product-view.php"><i class="fa fa-circle-o"></i> View Products</a></li> 
                    <li><a class="subMenuLink" href="./product-add.php"><i class="fa fa-circle-o"></i> Add Product</a></li>
                </ul>
            </li>
            <li class="liMainMenu">
                <!--The difference in styling or look in page is because of how the tutorial screen is probably from laptop, and we use external monitor with bigger dimensions-->
                <!--The below line of code was the original, the codes after it was moved from the very bottom-->
                <!--<a href="#"><i class="fa fa-user-plus"></i> <span class="menuText">Supplier Management</span></a>-->
                <a href="javascript:void(0);" class="liMainMenu_link showHideSubMenu">
                    <i class="fa fa-truck showHideSubMenu"></i>
                    <span class="menuText showHideSubMenu">Supplier</span>
                    <i class="fa fa-angle-left mainMenuIconArrow showHideSubMenu"></i>
                </a>

                <ul class="subMenus">
                    <li><a class="subMenuLink" href="./supplier-view.php"><i class="fa fa-circle-o"></i> View Suppliers</a></li> 
                    <li><a class="subMenuLink" href="./supplier-add.php"><i class="fa fa-circle-o"></i> Add Supplier</a></li>
                </ul>
            </li>
            <!--The red " at the end is not causing problems for some reason, it just works-->
            <!--<li class="liMainMenu showHideSubMenu" data-target="user"> old code-->
            <li class="liMainMenu showHideSubMenu">
                <!--javascript:void(0); this will stop the default reaction of refreshing page the below code does-->
                <!--If we only place showHideSubMenu in a element here, there will be problems to range of clicking area, we added it to element above too-->
                <a href="javascript:void(0);" class="liMainMenu_link showHideSubMenu">
                    <i class="fa fa-user-plus showHideSubMenu"></i>
                    <span class="menuText showHideSubMenu">User</span>
                    <i class="fa fa-angle-left mainMenuIconArrow showHideSubMenu"></i>
                </a>

                <ul class="subMenus">
                    <li><a class="subMenuLink" href="./users-view.php"><i class="fa fa-circle-o"></i> View Users</a></li> 
                    <li><a class="subMenuLink" href="./user-add.php"><i class="fa fa-circle-o"></i> Add User</a></li>
                </ul>
            </li>

            <!--13 - 40:27 Not To Set Active-->

            <!--
            <li class="">
                <a href=""><i class="fa fa-dollar"></i> <span class="menuText">Revenue Management</span></a>
            </li>
            <li class="">
                <a href=""><i class="fa fa-book"></i> <span class="menuText">Accounts Receivable</span></a>
            </li>
            <li class="">
                <a href=""><i class="fa fa-gears"></i> <span class="menuText">Configuration</span></a>
            </li>
            <li class="">
                <a href=""><i class="fa fa-line-chart"></i> <span class="menuText">Stats</span></a>
            </li>
            -->
        </ul>
    </div>
</div>




{End}------[{app-sidebar.php}]------{File}









{Start}------[{app-topnav.php}]------{File}


<div class="dashboard_topNav">
    <a href="" id="toggleBtn"><i class="fa fa-navicon"></i></a>
    <!--Href and Location: might have different rules-->
    <a href="database/logout.php" id="logoutBtn"><i class="fa fa-power-off"></i> Log-out</a>
</div>


{End}------[{app-topnav.php}]------{File}




{Start}------[{dashboard.php}]------{File}



<?php
    //Go to WA4E for more info on sessions and cookies
    /* So without the session_start the user info collected
        won't be accessed or pass over to this page from login
    //session_start();
    var_dump($_SESSION['user']);
    die;
    */
    
    session_start();

    /*This refresh and prevents user from going back to dashboard. Also must be a shorthand thing */
    /*Remember the negation thing, that ! makes isset to opposite, so that mins if is not set, header will run */
    /*This if makes it so that just accessing this through url or address bar won't work, try accesing dashboard through url*/
    if(!isset($_SESSION['user'])) header('location: login.php');

    /*This will connecto the the span element on user*/
    $user = $_SESSION['user'];


?>

<!--[==============THIS IS DASHBOARD.PHP=================]-->

<!DOCTYPE html>
<html>
    <head>
        <title>Dashboard - Inventory Management System</title>
        <link rel="stylesheet" type="text/css" href="css/login.css">
        <script src="https://kit.fontawesome.com/9b6ef7dac1.js" crossorigin="anonymous"></script>
    </head>
    <body>
        <div id="dashboardMainContainer">
            <!--We originally had the code in those app-sidebar and
            topnav php here, but now we separate it and use include-->
            <?php include('partials/app-sidebar.php') ?>
            <div class="dashboard_content_container" id="dashboard_content_container">
                <?php include('partials/app-topnav.php') ?>
                <div class="dashboard_content">
                    <div class="dashboard_content_main">
                    </div>   
                </div>
            </div>
        </div>
    <!--So designing and planning this all out is important,
        building them seperately and connecting them into one
        or building them in one and then seperating them-->
    <!--Just like user-add.php we made the js code separat.
        that js code was for the button for side nav-->
    <script src="js/script.js">
    </script> 
    </body>
</html>


{End}------[{dashboard.php}]------{File}







{Start}------[{index.php}]------{File}


<!DOCTYPE html>
<html>
    <head>
        <title>IMS Homepage - Inventory Management System</title>
        <link rel="stylesheet" type="text/css" href="css/login.css">
        <script src="https://kit.fontawesome.com/9b6ef7dac1.js" crossorigin="anonymous"></script>
        <!--This script is grabbing icons from external server
            So if you have no connection, the logo wont load
            Will work for a moment without net cause of cache-->
    </head>
    <body>
        <!--<p>Hello</p> you can see the default
            css property with devtool in browser-->
        <div class="header">
            <!--So homepageContainer became the template
                which sections have in-common as it
                sets the width and max-width for contents
                to abide and organize into-->
            <div class="homepageContainer">
                <!--Change from login.html to login.php since we use xampp server now-->
                <a href="login.php">Log In</a>
            </div>
        </div>
        <div class="banner">
            <!--div.class this div.class auto writes
                also this div element wont show up unless
                given content-->
            <div class="homepageContainer">
                <div class="bannerHeader">
                    <h1>IMS</h1>
                    <p>Inventory Management System</p>
                </div>
                <p class="bannerTagline">Track your goods throughout your entire
                   supply chain, from purchasing to production
                   to end sales
                </p>
                <div class="bannerIcons">
                    <a href=""><i class="fa-brands fa-apple"></i></a>
                    <!--This class must be from the server we pull from
                        fa must mean fontawesome the website-->
                    <a href=""><i class="fa-brands fa-android"></i></a>
                    <a href=""><i class="fa-brands fa-windows"></i></a>
                </div>
            </div>
        </div>
        <div class="homepageContainer">
            <div class="homepageFeatures">
                <div class="homepageFeature">
                    <span class="featureIcon"><i class="fa fa-gear"></i></span>
                    <h3 class="featureTitle">Editable Theme</h3>
                    <p class="featureDescription">Lorem ipsum dolor sit amet, consectetur adipiscing
                        elit. Suspendisse fringilla fringilla
                    </p>
                </div>
                <div class="homepageFeature">
                    <span class="featureIcon"><i class="fa fa-star"></i></span>
                    <h3 class="featureTitle">Flat Design</h3>
                    <p class="featureDescription">Lorem ipsum dolor sit amet, consectetur adipiscing
                        elit. Suspendisse fringilla fringilla
                    </p>
                </div>
                <div class="homepageFeature">
                    <span class="featureIcon"><i class="fa fa-globe"></i></span>
                    <h3 class="featureTitle">Reach Your Audience</h3>
                    <p class="featureDescription">Lorem ipsum dolor sit amet, consectetur adipiscing
                        elit. Suspendisse fringilla fringilla
                    </p>
                </div>
            </div>
        </div>
        <!--See that we're dividing and placing them by blocks
            of elements related to each other for one goal-->
        <div class="homepageNotified">
            <div class="homepageContainer">
                <div class="homepageNotifiedContainer">
                    <!--
                    <button>Button Test</button>
                    <input type="text" placeholder="test text">
                    -->
                    <!--So the form element is what causes the refresh
                        try this above, and the inputs wont refresh-->
                    <!--Also this for some reason looks column like, not row-->
                    <div class="emailForm">
                        <h3>Get Notified Of Any Updates!</h3>
                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod
                        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
                        quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
                        Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu
                        fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in
                        culpa qui officia deserunt mollit anim id est laborum.
                        </p>
                        <form action="">
                            <div class="formContainer">
                                <input type="text" placeholder="Email Address"/>
                                <button>Notify</button>
                            </div>
                        </form>
                    </div>
                    <div class="video">
                        <iframe src="https://www.youtube.com/embed/8A2t_tAjMz8?si=FERfK_ZxnZWDFIrG" frameborder="0"></iframe>
                        <!--You can get youtube source above on youtube share embed-->
                        <!--The code below is the complete version youtube shares-->
                        <!--
                        <iframe width="560" height="315" src="https://www.youtube.com/embed/8A2t_tAjMz8?si=B5_Jx-QEo1azIIic" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
                        -->  
                    </div>
                </div>    
            </div>
        </div>
        <div class="socials">
            <div class="homepageContainer">
                <h3 class="socialHeader">Say Hi & Get In Touch</h3>
                <p class="socialText">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod. </p>
                <div class="socialIconsContainer">
                    <a href=""><i class="fa fa-twitter"></i></a>
                    <a href=""><i class="fa fa-facebook"></i></a>
                    <a href=""><i class="fa fa-pinterest"></i></a>
                    <a href=""><i class="fa fa-google-plus"></i></a>
                    <a href=""><i class="fa fa-linkedin"></i></a>
                    <a href=""><i class="fa fa-youtube"></i></a>
                    <!--I think there's a quicker way to copy paste down-->
                    <!--so a element anchors outside code?-->
                </div>
            </div>
        </div>
        <div class="footer">
            <div class="homepageContainer">
                <a href="">Contact</a>
                <a href="">Download</a>
                <a href="">Press</a>
                <a href="">Email</a>
                <a href="">Support</a>
                <a href="">Privacy Policy</a> 
            </div>
        </div>
        <!--Be vigilant of this:
            </div>
            </div> 
            Pay attention to the lines, and end tags-->
    </body>
</html>

<!--Note: You can fold/hide the code by clicking
    the line on top of the element, like div
    kinda like the dropdown button-->
<!--That's a good way of dividing sections-->
<!--Another Tip: Ctrl + [ or ]-->

<!--If you look at the screen it would seem
    that they are aligned to middle all of them
    that's because they all use the same class
    homepageContainer, so similar containers-->

<!--The side button goes to fast or future of your cursor line-->
<!--webpages natural size/width and height is like 1920x1080p-->


{End}------[{index.php}]------{File}







{Start}------[{login.php}]------{File}


<?php
    //Session must be a php itself method
    //Must place this here at start
    //PHP's PDO (PHP Data Objects) library
    session_start();
    if(isset($_SESSION['user'])) header('location: dashboard.php');
    //the above code makes is so user who have logged in can't visit this page until they're logged out
    //so they can't visit while the session is on going

    /*Note that if line six didn't have a ; the web error will point here at line 10 */
    $error_message = '';

    //$_SESSION will keep those data's or arrays while were not log out or the 
    //tab/chrome is over or the session expired. Until then data inserted in $_SESSION is
    //usable throughout any page connected to session (session_start);
    //var_dump($_SESSION); use this and you'll see $_SESSION still has no array set(or Object?)
    //This if($_POST) has no else
    if($_POST){
        //This below is like console.log(), also place DIE incase of bug
        //var_dump('WASSUP!') var_dump($_POST)
        //Also there will be a problem with refreshing, just go back to homepage then back again
        //The refresh thing is the way it is because it creates a new page probably I think
        //var_dump($_POST);
        include('database/connection.php');
        $username = $_POST['username'];
        $password = $_POST['password'];
        //this include(); will just connect or fetch that php
        //accesing data from that page/file to this page/file

        $query = 'SELECT * FROM users WHERE users.email="'. $username .'" AND users.password="'. $password .'"';
        /*$query = 'SELECT * FROM users WHERE users.email="'. $username .'" AND users.password="'. $password .'" LIMIT 1';*/
        /*$conn was set in connection.php */
        /*You know how you use SQL Queries in phpMyAdmin, that is $query
          that's the line we would have used if we we're in phpMyAdmin
          Only now we're using php to automate placing datas in database
          also the $conn is from connection.php*/
          //For info about -> (and =>) https://stackoverflow.com/questions/14037290/what-does-this-mean-in-php-or
        
        /* Var dump here will result in null error,
            since theres nothing at stmt yet
        var_dump($stmt);
        die; 
        */ 
        
        /*prepare method came from object inside $conn? then that was run with prepare, then it was stored in $stmt*/
        $stmt = $conn->prepare($query);
        /*So is $conn->prepare($query), basically object.method() in javascript? Instead of . its ->*/
        /*Prepare does change what's inside query, and why? So its suited for execution? */

        /*$stmt = $query; try this unprepared query*/
        /* var_dump($stmt);
        die; */
        /* Var dump here will result and show what input stored in stmt 
        var_dump($stmt);
        die;
        */

        $stmt->execute();
        
        /*
        $stmt->execute();
        $result = $stmt->execute();
        var_dump($result);
        this die keyword ends the entire site once past code is ran
        die;
        */

        //So the whole logic behind this probably is if $stmt has no value which is 0 and rowCount turns it into 1 so greater than 1
         going to the dashboard site will stopped, and the user is also set in session here. not sure about the line above
         But so if the query doesnt recieve the right value and none matches in the database the
         if statement will go to else which is an error

        //PDO Statement Class, Represents a prepared statement and, after the statement is executed, an associated result set.
        //So PDO is a class, the setFetchMode is its statement, also PDO::FETCH_ASSOC is a part of it
        /*Turn that 0 to 1 and error will appear, as there is 1 index our only row data jane. and you know its greater than >
          this is basically just a test run to see if this works, it will run if greater than 0*/
        //Also note that, not setting ->rowCount() will make it so if you make a mistake in password its wrong like that, no error message will be sent
        if($stmt->rowCount() > 0){
            $stmt->setFetchMode(PDO::FETCH_ASSOC);
            /*Don't think too much about methods*/
            //The 0 finds the data related to that zero index which is jane
            /*$user = $stmt->fetchAll()[0];
            var_dump($user);
            die;*/
            //I think this means fetchAll which here is only calling index data 0 (jane) from $stmt and put it in $user
            $user = $stmt->fetchAll()[0];
            /*This code below so $_SESSION['user'] gets all info of that user here will set user array*/
            
            // Captures data of currently login users.
            $_SESSION['user'] = $user;
            /*Check on WA4E https://www.youtube.com/watch?v=xr6uZDRTna0 */
            /*We use cookies(key value) for sessions */
 
            header('Location: dashboard.php');
            /*var_dump($_SESSION['user']); die; this var dump just shows how it is, must login right*/
            /*This runs which means nothing is wrong*/
            //Time to store user data in a session, mean we can access that variable in any of our page
        } else $error_message = 'Please make sure that username and password are correct.';
    }
?>


<!DOCTYPE html>
<!--This doctype html tells browser use newest html-->
<!--You can make rough draft of page deisgn in drawing or psd-->
<!--Then just follow and turn it into code-->
<!--Sometimes with php or web server xampp stuff you have
    to go out and back to the page to see it fully reloaded-->
<!--The point of this logIn page is error won't show up if correct
    email and pass is entered which has to match in database-->
<!--Entering a correct input will make the error bar disappear-->


<html>
    <head>
        <title>IMS Login -Inventory Management System</title>

        <link rel="stylesheet" type="text/css" href="css/login.css">
        <!--<style type="text/css"></style> this optional-->
    </head>
    <!--The body tag is where the visible part of page is-->
    <body id="loginBody">
        <!--This php wrap makes it so this will only show when something wrong, instead of right away-->
        <!--empty is a function, and ! is the negation sign, which means the opposite. Remove ! and see-->
        <!--I think it relates to how we will only connect to connection.php thus the db if we interact with the form-->
        <!--So once we interact, the code in there will place value in $error_message which will then show this below-->
        <!--Remember also that PHP runs top to bottom, so this php wrap basically makes php run and mingle with html-->
        <?php if(!empty($error_message)) { ?>
            <div id="errorMessage">
                <!--Also password isn't key sensitive apparently-->
                <!--This makes it so when there's error, it will be printed here-->
                <strong>ERROR:</strong><p><?= $error_message ?></p>
            </div>
        <?php } ?>
        <div class="container">
        <!--Use div to group some elements-->
        <!--Use class attribute here-->
            <div class="loginHeader">
                <h1>IMS</h1>
                <p>Inventory Management System</p>
            </div>
            <div class="loginBody">
                <!--Form action is new to me. Check out sql and php notes-->
                <!--The HTML <form> element can contain one or more-->
                <!--The <input> Element for example, One of the most
                    used form elements is the <input> element.-->
                <!--Well use post and not get method since get shows the input on the link or address bar, bad for password-->
                <form action="login.php" method="POST">
                    <!--Two input times in form with some elements-->
                    <div class="loginInputContainer">
                        <!--<p id="label-id">TEST</p> This is just a test code-->
                        <label for="">Username</label>
                        <input placeholder="username" name="username" type="text" />
                    </div>
                    <div class="loginInputContainer">
                        <!--Label is like p but an inline block-->
                        <!--for is for accesability/readability-->
                        <!--Use alt left click to type multiple-->
                        <label for="">Password</label>
                        <input placeholder="password" name="password" type="password" /> 
                    </div>
                    <div class="loginButtonContainer">
                        <button>log in</button>
                    </div>
                </form>
            </div>
        </div>
    </body>
</html>



{End}------[{login.php}]------{File}












{Start}------[{product-add.php}]------{File}



<?php
    //Go to WA4E for more info on sessions and cookies
    /* So without the session_start the user info collected
        won't be accessed or pass over to this page from login
    //session_start();
    var_dump($_SESSION['user']);
    die;
    */
    
    session_start();

    /*This refresh and prevents user from going back to dashboard. Also must be a shorthand thing */
    /*Remember the negation thing, that ! makes isset to opposite, so that mins if is not set, header will run */
    /*This if makes it so that just accessing this through url or address bar won't work, try accesing dashboard through url*/
    if(!isset($_SESSION['user'])) header('location: login.php');
    
    /*SESSION IS LIKE TEMPORARY */
    /*$_SESSION is an associative array, so if you use var_dump($_SESSION); you'll see its an
      an array that can store complex or primative data, like for example the 'user'
      So by doing. $_SESSION['Table'] = 'users'; we're adding a new variable in $_SESSION
      array next to user variavle(array)*/
    $_SESSION['table'] = 'products';
    $_SESSION['redirect_to'] = 'product-add.php';

    /*This will connect to the span element on user*/
    $user = $_SESSION['user'];

    //$users = include('database/show-users.php'); this line was from an old version or copied
    //Use this to test if show-users.php works
    //var_dump($users);
    //die


?>


<!--Red Alert! Huge Change In Script, Apparently it was users-add.php not user-add.php
    so a lot of code might not work because of the name change, keep that in mind.
    Two things will get affected or more with this, the one linking to this since and the one getting pagelink
    For the sake of our project lets keep using user-add, that guy is a piece of work-->
<!--[==============THIS IS USER-ADD.PHP=================]--> 

<!DOCTYPE html>
<html>
    <head>
        <title>Add Product - Inventory Management System</title>
        <!--The time() after css/login.css is to make sure everytime we refreash we always load the new updated file, its the hard refresh solution I think-->
        <!--app-header-scripts code was once placed here-->
        <?php include('partials/app-header-scripts.php'); ?>
    </head>

    <body>
        <div id="dashboardMainContainer">
            <!--This include will run and place here that html code from that php file-->
            <!--if something went wrong there's a high chance its just directory problem-->
            <?php include('partials/app-sidebar.php') ?>
            <div class="dashboard_content_container" id="dashboard_content_container">
                <!--The elements might be separated but remember the
                    CSS is the one setting how they look-->
                <?php include('partials/app-topnav.php') ?>
                <div class="dashboard_content">
                    <div class="dashboard_content_main">
                        <div class="row">
                            <div class="column column-12">
                                <h1 class="section_header"><i class="fa fa-plus"></i> Create Product</h1>
                                <div id="userAddFormContainer">
                                    <!--We added the attribute enctype="" to conform with adding img-->
                                    <form action="database/add.php" method="POST" class="appForm" enctype="multipart/form-data">
                                        <!--If you use this while still connected to add.php which is still for user-add it will only add
                                            empty input to the databse of users, which you can view in users-view.php-->
                                        <div class="appFormInputContainer">
                                            <!--Tips, CTRL + ARROW, CTRL SHIFT ARROW-->
                                            <label for="product_name">Product Name </label>
                                            <input type="text" class="appFormInput" id="product_name" placeholder="Enter Product Name..." name="product_name"/>
                                        </div>
                                        <div class="appFormInputContainer">
                                            <label for="description">Description </label>
                                            <!--Adding space between here in textarea in html will hide the placeholder-->
                                            <textarea class="appFormInput productTextAreaInput" placeholder="Enter Product Description..." id="description" name="description"></textarea>
                                        </div>
                                        <div class="appFormInputContainer">
                                            <label for="description">Suppliers </label>
                                            <!--<select name="suppliers" id="suppliersSelect" multiple=""> Change to height 100px and max-height to 100px for this. I'm refusing to use multiple="" in our version, ok scratch that, the [] in name attribute makes it array-->
                                            <select name="suppliers[]" id="suppliersSelect" multiple="">
                                                <option value="">Select Supplier</option>
                                                <?php
                                                    //overwrite table name php or something
                                                    $show_table = 'suppliers';
                                                    //$_SESSION['table'] = 'suppliers';
                                                    $suppliers = include('database/show.php');

                                                    foreach($suppliers as $supplier){
                                                        echo "<option value='". $supplier['id'] ."'>". $supplier['supplier_name'] ."</option>"; 
                                                        //var_dump($suppliers[])
                                                    }

                                                    //var_dump($suppliers);
                                                    //die;
                                                ?>
                                                <!--<option value="">Supplier 1</option>-->
                                                
                                            </select>
                                            <!--Don't forget the closing marks, it caused error because we forgot-->
                                        </div>
                                        <div class="appFormInputContainer">
                                            <!--Tips, CTRL + ARROW, CTRL SHIFT ARROW-->
                                            <label for="product_name">Product Image </label>
                                            <!--Remember that the name attribute correspond with the column name in database-->
                                            <input type="file" name="img" style="font-family: arial;" />
                                        </div>
                                        <!--Code below something about processing, maybe just to show it works-->
                                        <!--<input type="hidden" name="table" value="users" />-->
                                        <button type="submit" class="appBtn"><i class="fa fa-plus"></i> Create Product</button>
                                        <!--<input type="submit" value="Submit">-->
                                    </form>
                                    <!--Understand the logic behind this tomorrow, lmao I'm spent-->
                                    <?php
                                        if(isset($_SESSION['response'])){
                                            //either way, which one runs if or catch, this will run because there will be data inserted either way
                                            //the first [response] is an array, the second [message] is data from that array
                                            $response_message = $_SESSION['response']['message'];
                                            //catch will run if theres error so [success] here has content false
                                            //$is_success will store the ['success'] array value 
                                            $is_success = $_SESSION['response']['success'];
                                            //so both 
                                    ?>
                                        <div class="responseMessage">
                                            <!--Below determines if its true or false, and what the message or color will be-->
                                            <!--<a class="c1 c2">aa</a> so you can place multiple classes in one class attribute-->
                                            <!--the just a wild guess but maybe the ? : expression goes here a command to determine which class will be placed-->
                                            <!--$str = "TEST". ($bar ? 'true' : 'false') ."TEST"; expression example, so if whats
                                                $is_success is true then left will be run and if inside is false, right will be run inside-->
                                            <p class="responseMessage <?= $is_success ? 'responseMessage_success' : 'responseMessage_error' ?>">
                                                <?= $response_message ?>
                                            </p>
                                        </div>
                                    <?php unset($_SESSION['response']); } ?>
                                </div>
                            </div>
                            <!--column-7 user view form was removed here-->
                        </div>
                    </div>                           
                </div>
            </div>
        </div>

        <?php include('partials/app-scripts.php'); ?>
                                            
        <!--You can fold a sequence or block of code then copy it easily-->
        <!--JS codes were once here, but then they got separated too, and
            were using src="" attribute to link it-->
    
    <!--app-scripts.php code was once placed here-->
    
        <script>//Script Removed Here, Since User View Form is out</script>
    <!-- Deprecated Old Code Block
    <script>
        function script(){
            //Note that ajax() function is from jquery
            //this below runs this.registerEvents = function()
            this.initialize = function(){
                this.registerEvents();
            },

            this.registerEvents = function(){
                document.addEventListener('click', function(e){
                    //This below line will prevent anchor refresh
                    //but it will also prevent you from clicking and going to dashboard at navbar
                    //e.preventDefault(); so we place this inside if
                    //this below finds or gets all classes, so classList
                    targetElement = e.target;
                    classList = targetElement.classList;
                    //classList = e.target.classList;

                    //this below will show found if user clicks delete anchor
                    //this function method finds deleteUser, among a list of classes
                    if(classList.contains('deleteUser')){
                        e.preventDefault();
                        //dataset gets the userid which was set in the anchor
                        userId = targetElement.dataset.userid;
                        fname = targetElement.dataset.fname;
                        lname = targetElement.dataset.lname;
                        fullName = fname + ' ' + lname;
                        
                        /*This below code was the New way of informing which also has no cancel for delete for some reason, so I'll use the old code*/
                        /*
                        BootstrapDialog.confirm({
                            type: BootstrapDialog.TYPE_DANGER,
                            message: 'Are you sure about deleting '+ fullName +'?',
                            callback: function(isDelete){                          
                                $.ajax({
                                    method: 'POST',
                                    //user_id correlates to one in delete-user.php
                                    data: {
                                        user_id: userId,
                                        f_name: fname,
                                        l_name: lname
                                    },
                                    url: 'database/delete-user.php',
                                    //Set data type to json so we can easily parse, process the response
                                    dataType: 'json',
                                    success: function(data){
                                        //Probably means if data success is true or has value true
                                        if(data.success){
                                                BootstrapDialog.alert({
                                                    type: BootstrapDialog.TYPE_SUCCESS,
                                                    message: data.message,
                                                    callback: function(){
                                                        location.reload()
                                                    }
                                                });
                                                //We're still in javascript so, learn about objects and methods like location and reload here below
                                                //if(window.alert(data.message)){ window.alert couldn't refresh like window.confirm could
                                                //if(window.confirm(data.message)){
                                                //    location.reload();
                                                
                                        } else 
                                            BootstrapDialog.alert({
                                                type: BootstrapDialog.TYPE_DANGER,
                                                message: data.message,
                                            });
                                        //[==Unused code
                                        //} else {
                                        //    window.alert(data.message)
                                        //}
                                        //==]
                                    } else {
                                        window.alert('Won'+ "'" +'t delete');
                                        //console.log('Won'+ "'" +'t Delete')
                                    }
                                    
                                })
                            }
                        })
                        */

                        //Remember to always check your spelling or pronuncation
                        //window = object, confirm = method/function atleast at javascript pov
                        //Oh yeah, we're on script right now, concatinate too is here
                        //You can see the result of ajax in Inspect > Network > Request > Form data
                        
                        //Learn what ajax and json exactly are and how they work exactly
                        // This was the old way of informing, which was just the browser notifying
                        if(window.confirm('Are you sure about deleting '+ fullName +'?')){
                            $.ajax({
                                method: 'POST',
                                //user_id correlates to one in delete-user.php
                                data: {
                                    user_id: userId,
                                    f_name: fname,
                                    l_name: lname
                                },
                                url: 'database/delete-user.php',
                                //Set data type to json so we can easily parse, process the response
                                dataType: 'json',
                                success: function(data){
                                    //Probably means if data success is true or has value true
                                    if(data.success){
                                        //We're still in javascript so, learn about objects and methods like location and reload here below
                                        //if(window.alert(data.message)){ window.alert couldn't refresh like window.confirm could
                                        if(window.confirm(data.message)){
                                            location.reload();
                                        }
                                    } else window.alert(data.message);
                                    //[==Unused Code
                                    //} else {
                                    //    window.alert(data.message)
                                    //}
                                    //==]
                                }
                            })
                        } else {
                            window.alert('Won'+ "'" +'t delete');
                            //console.log('Won'+ "'" +'t Delete')
                        }


                        //This is the end of the line block code

                        //Where/what does user_id correlate to the one in delete-user.php
                        //console.log(userId, fname, lname);
                        //This below will show particulars in console
                        //fname = targetElement.dataset.fname;
                        //console.log(fname);

                        //console.log('found');
                    }
                    if(classList.contains('updateUser')){
                        e.preventDefault();
                        
                        //Get data. It will target and get that data?
                        //This will be inside one tr anyway so it'll target closest tr with td equal to that class, td.firstName example
                        //.innerHTML, organizes the code
                        firstName = targetElement.closest('tr').querySelector('td.firstName').innerHTML;
                        lastName = targetElement.closest('tr').querySelector('td.lastName').innerHTML;
                        email = targetElement.closest('tr').querySelector('td.email').innerHTML;
                        userId = targetElement.dataset.userid;

                        //this pulls out information related to that td next to class, shows in console
                        //console.log(firstName, lastName, email);
                        //Reminder inspect and webdevtool is your bestfriend 

                        BootstrapDialog.confirm({
                            title: 'Update ' + firstName + ' ' + lastName,
                            //message: firstName + ' ' + lastName + ' ' + email
                            //The forwards slash \ the error red thing from appearing, it passes it below I think. 
                            //It helps pass the cover down. Remove \ on div above </form> to see
                            //<form action="/action_page.php"> 
                            message: '<form>\
                                <div class="form-group">\
                                    <label for="firstName">First Name:</label>\
                                    <input type="text" class="form-control" id="firstName" value="'+ firstName +'">\
                                </div>\
                                <div class="form-group">\
                                    <label for="lastName">Last Name:</label>\
                                    <input type="text" class="form-control" id="lastName" value="'+ lastName +'">\
                                </div>\
                                <div class="form-group">\
                                    <label for="email">Email address:</label>\
                                    <input type="email" class="form-control" id="emailUpdate" value="'+ email +'">\
                                </div>\
                            </form>',

                            //We changed email to emailUpdate as there are multiple email id already in page
                            //Dont forget the comma's at the end
                            //Make guidelines when handling various errors or bugs

                            callback: function(isUpdate){ //parameter

                                /* This block of code will see if this works
                                console.log({
                                            userId: userId,
                                            f_name: document.getElementById('firstName').value,
                                            l_name: document.getElementById('lastName').value,
                                            email: document.getElementById('emailUpdate').value,
                                });
                                return;
                                */

                                if(isUpdate){ //If user click 'Ok' button.
                                   // alert('Hi I'+ "'" +'m updating');
                                   $.ajax({
                                        method: 'POST',
                                        //user_id correlates to one in delete-user.php
                                        data: {
                                            userId: userId,
                                            f_name: document.getElementById('firstName').value,
                                            l_name: document.getElementById('lastName').value,
                                            email: document.getElementById('emailUpdate').value,
                                        },
                                        url: 'database/update-user.php',
                                        //Set data type to json so we can easily parse, process the response
                                        //this dataType: 'json', a little bit of a mystery how it works
                                        dataType: 'json',
                                        
                                        //This update version gets message from data still check update-user.php
                                        success: function(data){
                                            //Probably means if data success is true or has value true
                                            if(data.success){
                                                BootstrapDialog.alert({
                                                    type: BootstrapDialog.TYPE_SUCCESS,
                                                    message: data.message,
                                                    callback: function(){
                                                        location.reload()
                                                    }
                                                });
                                                //We're still in javascript so, learn about objects and methods like location and reload here below
                                                //if(window.alert(data.message)){ window.alert couldn't refresh like window.confirm could
                                                /*if(window.confirm(data.message)){
                                                    location.reload();
                                                }*/
                                            } else 
                                                BootstrapDialog.alert({
                                                    type: BootstrapDialog.TYPE_DANGER,
                                                    message: data.message,
                                                });
                                            /* Unused code
                                            } else {
                                                window.alert(data.message)
                                            }
                                            */
                                        }
                                    });
                                }
                            },

                        });
                    }
                });
            }

        }

        var script = new script;
        script.initialize();
    </script>
    -->
    </body>
</html>



{End}------[{product-add.php}]------{File}












{Start}------[{product-view.php}]------{File}


<?php
    //Go to WA4E for more info on sessions and cookies
    /* So without the session_start the user info collected
        won't be accessed or pass over to this page from login
    //session_start();
    var_dump($_SESSION['user']);
    die;
    */
    
    session_start();

    /*This refresh and prevents user from going back to dashboard. Also must be a shorthand thing */
    /*Remember the negation thing, that ! makes isset to opposite, so that mins if is not set, header will run */
    /*This if makes it so that just accessing this through url or address bar won't work, try accesing dashboard through url*/
    if(!isset($_SESSION['user'])) header('location: login.php');
    
    /*SESSION IS LIKE TEMPORARY */
    /*$_SESSION is an associative array, so if you use var_dump($_SESSION); you'll see its an
      an array that can store complex or primative data, like for example the 'user'
      So by doing. $_SESSION['Table'] = 'users'; we're adding a new variable in $_SESSION
      array next to user variable(array)*/
    //The array you're inserting can be named anyway you want, and this table = product will only be set if this page is entered
    //$_SESSION['table'] = 'products'; deprecated got replaced by below
    //$show_table = 'products';

    //var_dump($_SESSION);
    //die;

    //$users = include('database/show-users.php'); WE CHANGED THIS
    
    //the 'products' gets inserted in $show_table?
    $show_table = 'products';
    $products = include('database/show.php');

    //Use this to test if show-users.php works
    //var_dump($users);
    //die


?>

<!--[==============THIS IS USER-ADD.PHP=================]--> 

<!DOCTYPE html>
<html>
    <head>
        <title>View Products - Inventory Management System</title>
        <!--The time() after css/login.css is to make sure everytime we refreash we always load the new updated file, its the hard refresh solution I think-->
        <!--app-header-scripts was once here-->
        <?php include('partials/app-header-scripts.php'); ?>
    </head>
    <body>
        <div id="dashboardMainContainer">
            <!--This include will run and place here that html code from that php file-->
            <!--if something wen't wrong there's a high chance its just directory problem-->
            <?php include('partials/app-sidebar.php') ?>
            <div class="dashboard_content_container" id="dashboard_content_container">
                <!--The elements might be separated but remember the
                    CSS is the one setting how they look-->
                <?php include('partials/app-topnav.php') ?>
                <div class="dashboard_content">
                    <div class="dashboard_content_main">
                        <div class="row">
                            <!--<div class="column column-7">-->
                            <!--woah what's going on, when we changed column-7 to column-12 it changed width-->
                            <div class="column column-12">
                                <!--Remember we kept the h1 at top instead of moving it to bottom right corner-->
                                <h1 class="section_header"><i class="fa fa-list"></i> List of Products</h1>
                                <div class="section_content">
                                    <div class="users">
                                        <!--Below it doesn't matter if array is from 0 to up, it will count it normally-->
                                        <p class="userCount"><?= count($products) ?> Products</p>
                                        <table>
                                            <!--<thead></thead>-->
                                            <!--Also the logo on sidebar changes/changed because we changed source of icons-->
                                            <thead>
                                                <tr>
                                                    <!--We updated this line of codes to fit product-view-->
                                                    <th>#</th>
                                                    <th>Image</th>
                                                    <th>Product Name</th>
                                                    <!-- you can use width="10%" in th -->
                                                    <th width="10%">Description</th>
                                                    <th width="15%">Suppliers</th>
                                                    <th>Created By</th>
                                                    <th>Created At</th>
                                                    <th>Updated At</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <!--Also on id we don't use the real id in database-->
                                                <!--Notice how $index is set and respond-->
                                                <!--foreach will pull.take out and run for each array inside ($users) ?-->
                                                <!--as and $variable (you pick a name) is a must-->
                                                <!--We updated this line of codes from users-view to fit product-view-->
                                                <?php foreach($products as $index => $product){ ?>
                                                    <tr>
                                                        <!--Remember PDO::_ASSOC set it to array so users
                                                            an array turned as index an array here, in one instance
                                                            here we make index + 1 cause first array inside is set to 0, it just
                                                            correspond to array in $users. then index which holds from 0 to whatever
                                                            array value there is will be what $user draws from. So if $index in this
                                                            iteration of foreach is now 7, $user will draw from data or row column data
                                                            from that array made in $users/$index-->
                                                        <td><?= $index + 1 ?></td>
                                                        <!--<td class="firstName"><?= $product['img'] ?></td> This line of code will only show image name-->
                                                        <!--Lmao he has a sizing problem with his styling table, we fixed it before him chapters ago, we'll try and write his solution for now-->
                                                        <td class="firstName">
                                                            <!--<img class="productImages" src="uploads/products/<?= $product['img'] ?>" alt="" />-->
                                                            <img class="productImages" src="uploads/products/<?= $product['img'] ?>" alt="" />
                                                        </td>
                                                        <td class="lastName"><?= $product['product_name'] ?></td>
                                                        <td class="email"><?= $product['description'] ?></td>
                                                        <td class="email">
                                                            <?php
                                                                // This below line will show up since rows without truthsy value wont run if statement
                                                                $supplier_list = 'Not-Set';

                                                                //This code block is from for product id and below code block is for user id
                                                                //This code block got copied from below 
                                                                //This following code block is from show.php and was slightly modified. Nice, at Chapter 19 changed pid to uid
                                                                $pid = $product['id'];
                                                                $stmt = $conn->prepare("
                                                                                SELECT supplier_name
                                                                                    FROM suppliers, productsuppliers
                                                                                    WHERE
                                                                                        productsuppliers.product=$pid
                                                                                            AND
                                                                                        productsuppliers.supplier=suppliers.id                                 
                                                                                ");
                                                                $stmt->execute();
                                                                $row = $stmt->fetchAll(PDO::FETCH_ASSOC);
                                                                // $row = $stmt->fetch(PDO::FETCH_ASSOC);
                                                                //$stmt->setFetchMode(PDO::FETCH_ASSOC);
                                                                
                                                                if($row){

                                                                    $supplier_arr = array_column($row, 'supplier_name');
                                                                    //Not sure how this two works, get an idea of it
                                                                    $supplier_list = '<li>' . implode("</li><li>", $supplier_arr);
    
                                                                }

                                                                // var_dump($row);
                                                                // die;
                                                                //So here instead of getting the Id number of the creator like last time, will make the name appear
                                                                // $created_by_name = $row['first_name'] . ' ' . $row['last_name'];
                                                                // echo $created_by_name;
                                                                //var_dump($stmt->fetchAll())
                                                                //var_dump($row)

                                                                // $supplier_arr = array_column($row, 'supplier_name');
                                                                // $supplier_list = '<li>' . implode("</li><li>", $supplier_arr);
                                                                
                                                                echo $supplier_list

                                                                // var_dump($supplier_list);
                                                                // die;
                                                            ?>
                                                        </td>
                                                        <td>
                                                            <!--What's the difference between return; and die;-->
                                                            <?php 
                                                                //This following code block is from show.php and was slightly modified. Nice, at Chapter 19 changed pid to uid
                                                                $uid = $product['created_by'];
                                                                $stmt = $conn->prepare("SELECT * FROM users WHERE id=$uid");
                                                                $stmt->execute();
                                                                $row = $stmt->fetch(PDO::FETCH_ASSOC);
                                                                //$stmt->setFetchMode(PDO::FETCH_ASSOC);
                                                                
                                                                //So here instead of getting the Id number of the creator like last time, will make the name appear
                                                                $created_by_name = $row['first_name'] . ' ' . $row['last_name'];
                                                                echo $created_by_name;
                                                                //var_dump($stmt->fetchAll())
                                                                //var_dump($row)

                                                            ?>

                                                            <!--<?= $product['created_by'] ?>-->

                                                        </td>
                                                        <!--so the F d,y correspond to month, day, year, might be a parameter-->
                                                        <td><?= date('M d,Y @ h:i:s A', strtotime($product['created_at'])) ?></td>
                                                        <td><?= date('M d,Y @ h:i:s A', strtotime($product['updated_at'])) ?></td>
                                                        <!--Below code are variations-->
                                                        <!--<td><?= date('F d,Y @ H:i:s A', strtotime($user['updated_at'])) ?></td>-->
                                                        <!--Below code is removed cause its hard to read-->
                                                        <!--<td><?= $user['created_at'] ?></td>-->
                                                        <!--<td><?= $user['updated_at'] ?></td>-->
                                                        <td>
                                                            <!--Many ware changed from user page to product page here-->
                                                            <a href="" class="updateProduct" data-pid="<?= $product['id'] ?>"><i class="fa fa-pencil"></i> Edit |</a>
                                                            <!-- the $user['id'] will pull out the user corelating to this row, foreach. data-name="" can be changed to any name-->
                                                            <!--You cant use <QuestionMarkphp here, you must use <Questionmark= or you'll get nothing-->
                                                            <a href="" class="deleteProduct" data-pname="<?= $product['product_name'] ?>" data-pid="<?= $product['id'] ?>"><i class="fa fa-trash"></i> Delete</a>
                                                        </td>
                                                    </tr>
                                                <?php } ?>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>         
                            </div>
                        </div>
                    </div>                           
                </div>
            </div>
        </div>
        <!--You can fold a sequence or block of code then copy it easily-->
        <!--JS codes were once here, but then they got separated too, and
            were using src="" attribute to link it-->
    <!--app-scripts.php code was once here-->        
    <?php 
    
        include('partials/app-scripts.php'); 
        
        $show_table = 'suppliers';
        $suppliers = include('database/show.php');

        $suppliers_arr = [];

        foreach($suppliers as $supplier){
            $suppliers_arr[$supplier['id']] = $supplier['supplier_name'];
            //"<option value='". $supplier['id'] . "'> ".$supplier['supplier_name']."</option>";
            //echo "<option value='". $supplier['id'] . "'> ".$supplier['supplier_name']."</option>";
        }

        $suppliers_arr = json_encode($suppliers_arr);
        // var_dump($supplier_arr);
        // die;
    
    ?>
    <script>
        var suppliersList = <?= $suppliers_arr ?>;

        //console.log(suppliersList);


        function script(){
            var vm = this;


            this.registerEvents = function(){
                document.addEventListener('click', function(e){
                    //alert('hi');
                    //return: false; what was the false for?

                    //He's trying to make it more dynamic, so show-users.php got removed

                    //This code block was from users-view-php
                    //This below line will prevent anchor refresh
                    //but it will also prevent you from clicking and going to dashboard at navbar
                    //e.preventDefault(); so we place this inside if
                    //this below finds or gets all classes, so classList
                    targetElement = e.target; //Target element
                    classList = targetElement.classList;
                    //classList = e.target.classList;

                    //this below will show found if user clicks delete anchor
                    //this function method finds deleteUser, among a list of classes
                    if(classList.contains('deleteProduct')){
                        e.preventDefault(); //This prevents the default mechanism

                        //console.log(targetElement);
                        //return; returns ends the run of code reading

                        pId = targetElement.dataset.pid;
                        pName = targetElement.dataset.pname;

                        //console.log(pId, pName);
                        //return false;


                        //dataset gets the userid which was set in the anchor
                        //userId = targetElement.dataset.userid;
                        //fname = targetElement.dataset.fname;
                        //lname = targetElement.dataset.lname;
                        //fullName = fname + ' ' + lname;
                        
                        /*This below code was the New way of informing which also has no cancel for delete for some reason, so I'll use the old code,
                        now at chapter 17 it has been brought back, now it works since the alert thing have been implemented on bootstrap/ajax.
                        Unlike him though, we kept the alert for its usefulness*/
                        
                        BootstrapDialog.confirm({
                            type: BootstrapDialog.TYPE_DANGER,
                            title: 'Delete Product',
                            message: 'Are you sure about deleting <strong>'+ pName +'<strong>?',
                            callback: function(isDelete){
                                if(isDelete){
                                    alert('Will be deleting');
                                    $.ajax({
                                    method: 'POST',
                                    //user_id correlates to one in delete-user.php
                                    data: {
                                        id: pId,
                                        table: 'products' 
                                        //f_name: fname,
                                        //l_name: lname
                                    },
                                    url: 'database/delete.php',
                                    //url: 'database/delete-user.php', line above changed from this
                                    //Set data type to json so we can easily parse, process the response
                                    dataType: 'json',
                                    success: function(data){
                                        message = data.success ? 
                                            pName + ' succesfully deleted!' : 'Error processing your request!';
                                        
                                        BootstrapDialog.alert({
                                                //Is this expression like to see if the value of data.success is truethy or falsy which then is if else
                                                type: data.success ? BootstrapDialog.TYPE_SUCCESS : BootstrapDialog.TYPE_DANGER,
                                                message: message,
                                                callback: function(){
                                                    if(data.success) location.reload()
                                                }
                                        });
                                            
                                        /* Old Code Block
                                        //Probably means if data success is true or has value true
                                        if(data.success){
                                                BootstrapDialog.alert({
                                                    type: BootstrapDialog.TYPE_SUCCESS,
                                                    message: message,
                                                    callback: function(){
                                                        location.reload()
                                                    }
                                                });
                                                //We're still in javascript so, learn about objects and methods like location and reload here below
                                                //if(window.alert(data.message)){ window.alert couldn't refresh like window.confirm could
                                                //if(window.confirm(data.message)){
                                                //    location.reload();
                                                
                                        } else 
                                            BootstrapDialog.alert({
                                                type: BootstrapDialog.TYPE_DANGER,
                                                message: message,
                                            });
                                        End of Code Comment Block*/
                                        //[==Unused code
                                        //} else {
                                        //    window.alert(data.message)
                                        //}
                                        //==]
                                    }
                                    //} else { this code block turned the very bottom blue, Dont know exactly why, but it caused error or problem
                                    //    window.alert('Won'+ "'" +'t delete');
                                    //    //console.log('Won'+ "'" +'t Delete')
                                    //}

                                    })

                                } else {
                                    alert('Cancelled');
                                }
                            }
                        })
                        


                        //Remember to always check your spelling or pronuncation
                        //window = object, confirm = method/function atleast at javascript pov
                        //Oh yeah, we're on script right now, concatinate too is here
                        //You can see the result of ajax in Inspect > Network > Request > Form data
                        
                        //Learn what ajax and json exactly are and how they work exactly
                        // This was the old way of informing, which was just the browser notifying
                        //Thie line block of code is now deprecated we'll be using bootstrap again
                        /*
                        if(window.confirm('Are you sure about deleting '+ fullName +'?')){
                            $.ajax({
                                method: 'POST',
                                //user_id correlates to one in delete-user.php
                                data: {
                                    user_id: userId,
                                    f_name: fname,
                                    l_name: lname
                                },
                                url: 'database/delete-user.php',
                                //Set data type to json so we can easily parse, process the response
                                dataType: 'json',
                                success: function(data){
                                    //Probably means if data success is true or has value true
                                    if(data.success){
                                        //We're still in javascript so, learn about objects and methods like location and reload here below
                                        //if(window.alert(data.message)){ window.alert couldn't refresh like window.confirm could
                                        if(window.confirm(data.message)){
                                            location.reload();
                                        }
                                    } else window.alert(data.message);
                                    //[==Unused Code
                                    //} else {
                                    //    window.alert(data.message)
                                    //}
                                    //==]
                                }
                            })
                        } else {
                            window.alert('Won'+ "'" +'t delete');
                            //console.log('Won'+ "'" +'t Delete')
                        }
                        */

                        //This is the end of the line block code

                        //Where/what does user_id correlate to the one in delete-user.php
                        //console.log(userId, fname, lname);
                        //This below will show particulars in console
                        //fname = targetElement.dataset.fname;
                        //console.log(fname);

                        //console.log('found');
                    }

                    if(classList.contains('updateProduct')){
                        //This alert runs when you click edit text button anchor
                        //alert('Hey!')

                        e.preventDefault(); //This prevents the default mechanism

                        //console.log(targetElement);
                        //return; returns ends the run of code reading

                        pId = targetElement.dataset.pid;
                        //pName = targetElement.dataset.pname;

                        //this keyword im unsure of but showEditDialog is a function
                        //this.showEditDialog(pId);
                        //Get Product. you can change asdf into anything aparrently, its not a function? Can be named anything?

                        vm.showEditDialog(pId);
                        //vm.asdf(pId);
                        


                    }
                });

                document.addEventListener('submit', function(e){
                    e.preventDefault();
                    targetElement = e.target;

                    if(targetElement.id === 'editProductForm'){
                        //alert('Updating form');
                        vm.saveUpdatedData(targetElement);
                        //The form inside this above is the same in function below and the FormData(form),
                        //you can change the name of this to anything as when the saveUpdatedData is run it runs parameter
                    }

                });

                //CTRL + / to comment multiple lines and CTRL + K then after U comment out

                // document.addEventListener('submit', function(e){
                //     targetElement = e.target; //target element
                    
                //     alert(targetElement.id);
                //     e.preventDefault();

                // });
                
                //This code block below refreshes
                // $('#editProductForm').on('submit', function(e){
                //     e.preventDefault();
                // })

            },

            //this keyword might be related to this keyword in php classes/objects
            this.saveUpdatedData = function(form){

                //console.log(new FormData(form));
                //return; this duo will show in console when edit is clicked, the data it shows has tons of info, see it

                //alert('Hi');
                $.ajax({
                    method: 'POST',
                    //user_id correlates to one in delete-user.php
                    data: new FormData(form),
                    //this code below contacts update-product.php and gives it data which it can use
                    url: 'database/update-product.php',
                    //Set data type to json so we can easily parse, process the response
                    //this dataType: 'json', a little bit of a mystery how it works
                    //dataType: 'json',
                    //These two below is a new addition at Chap 18, then dataType: 'json' got removed, then got back again, guy flip flops a lot
                    processData: false,
                    contentType: false,
                    dataType: 'json',
                    //This update version gets message from data still check update-user.php
                    success: function(data){
                        BootstrapDialog.alert({
                            type: data.success ? BootstrapDialog.TYPE_SUCCESS : BootstrapDialog.TYPE_DANGER,
                            message: data.message,
                            callback: function(){
                                if(data.success) location.reload();

                            }
                            
                        });


                        //console.log(data);
                        //Probably means if data success is true or has value true
                        //This code block below got removed because the above code block does the exact same thing but simpler
                        // if(data.success){
                        //     BootstrapDialog.alert({
                        //         type: BootstrapDialog.TYPE_SUCCESS,
                        //         message: data.message,
                        //         callback: function(){
                        //             location.reload()
                        //         }
                        //     });
                        //     //We're still in javascript so, learn about objects and methods like location and reload here below
                        //     //if(window.alert(data.message)){ window.alert couldn't refresh like window.confirm could
                        //     /*if(window.confirm(data.message)){
                        //         location.reload();
                        //     }*/
                        // } else 
                        //     BootstrapDialog.alert({
                        //         type: BootstrapDialog.TYPE_DANGER,
                        //         message: data.message,
                        //     });
                        /* Unused code
                        } else {
                            window.alert(data.message)
                        }
                        */
                    }
                });
            },

            //this.asdf = function(id){
            
            //What this below line of code is saying is that, this (this) . showEditDialog is equals to function(id)
            //which depending on which row you clicked will store that id value, the id is a parameter that holds id, it can be name changed
            this.showEditDialog = function(id){
                
                //console.log(productDetails);
                //function(data) parameter?
                //Understand this line below the expression
                //So productDetails will be like a placeholder or parameter, and it can pull out the items, like product_name
                //This $.get will run and get info from get-product.php it corelates. the id might relate to id down in message: that element with it
                $.get('database/get-product.php', {id: id}, function(productDetails){
                    
                    //Supplier option will display the options of supplier in edit/update
                    //console.log(productDetails);
                    let curSuppliers = productDetails['suppliers'];
                    let supplierOption = '';

                    //Try ang comprehend this loop
                    for(const [supId, supName] of Object.entries(suppliersList)) {
                        selected = curSuppliers.indexOf(supId) > -1 ? 'selected' : '';
                        supplierOption += "<option "+ selected +" value='"+ supId +"'>"+ supName +"</option>";
                    }

                    //console.log(supplierOption);

                    //can't use $ outside of php stuff, unrelated for stuffs that goes outside
                    //console.log(data); or console.productDetails
                    //This code sequence below was copied from users-view.php,
                    BootstrapDialog.confirm({
                                title: 'Update <strong>' + productDetails.product_name + '</strong>',
                                //message: firstName + ' ' + lastName + ' ' + email
                                //The forwards slash \ the error red thing from appearing, it passes it below I think. 
                                //It helps pass the cover down. Remove \ on div above </form> to see
                                //<form action="/action_page.php"> 
                                //Also we added \ at the end to turn it into text I think
                                //Don't forget <form></form>, also enctype was added 
                                //Note with this message: thing, if a line won't turn into comment, go backspace on that line
                                message: '\<form action="database/add.php" method="POST" enctype="multipart/form-data" id="editProductForm">\
                                        <div class="appFormInputContainer">\
                                            <!--Tips, CTRL + ARROW, CTRL SHIFT ARROW-->\
                                            <label for="product_name">Product Name </label>\
                                            <input type="text" class="appFormInput" id="product_name" value="'+ productDetails.product_name +'" placeholder="Enter Product Name..." name="product_name"/>\
                                        </div>\
                                        <div class="appFormInputContainer">\
                                            <label for="description">Suppliers </label>\
                                            <select name="suppliers[]" id="suppliersSelect" multiple="">\
                                                <option value="">Select Supplier</option>\
                                                '+ supplierOption +'\
                                            </select>\
                                        </div>\
                                        <div class="appFormInputContainer">\
                                            <label for="description">Description</label>\
                                            <!--Adding space between here in textarea in html will hide the placeholder-->\
                                            <textarea class="appFormInput productTextAreaInput" placeholder="Enter Product Description..." id="description" name="description">'+ productDetails.description +'</textarea>\
                                        </div>\
                                        <div class="appFormInputContainer">\
                                            <!--Tips, CTRL + ARROW, CTRL SHIFT ARROW-->\
                                            <label for="product_name">Product Image</label>\
                                            <!--Remember that the name attribute correspond with the column name in database-->\
                                            <input type="file" name="img" style="font-family: arial;" />\
                                        </div>\
                                        <input type="hidden" name="pid" value="'+ productDetails.id +'"/>\
                                        <input type="submit" value="submit" id="editProductSubmitBtn" class="hidden"/>\
                                    </form>\
                                ',

                                //class="hidden" hides the input submit thing above
                                //We changed email to emailUpdate as there are multiple email id already in page
                                //Dont forget the comma's at the end
                                //Make guidelines when handling various errors or bugs

                                callback: function(isUpdate){ //parameter

                                    /* This block of code will see if this works
                                    console.log({
                                                userId: userId,
                                                f_name: document.getElementById('firstName').value,
                                                l_name: document.getElementById('lastName').value,
                                                email: document.getElementById('emailUpdate').value,
                                    });
                                    return;
                                    */

                                    if(isUpdate){ //If user click 'Ok' button.
                                    // alert('Hi I'+ "'" +'m updating');
                                        //So thats a parametered get variable, that used submit() method/function?
                                        //The id was from the form above inside message at ajax
                                        //$('#editProductForm').submit();

                                        document.getElementById('editProductSubmitBtn').click();
                                        
                                        
                                        // $('#editProductForm').submit(function(e){
                                        //     console.log('hi');

                                        //     window.href.location = 'facebook.com'

                                        //     e.preventDefault();
                                        // });
                                        
                                    // return;

                                        // $.ajax({ Start
                                        //     method: 'POST',
                                        //     //user_id correlates to one in delete-user.php
                                        //     data: {
                                        //         userId: userId,
                                        //         f_name: document.getElementById('firstName').value,
                                        //         l_name: document.getElementById('lastName').value,
                                        //         email: document.getElementById('emailUpdate').value,
                                        //     },
                                        //     url: 'database/update-user.php',
                                        //     //Set data type to json so we can easily parse, process the response
                                        //     //this dataType: 'json', a little bit of a mystery how it works
                                        //     dataType: 'json',
                                            
                                        //     //This update version gets message from data still check update-user.php
                                        //     success: function(data){
                                        //         //Probably means if data success is true or has value true
                                        //         if(data.success){
                                        //             BootstrapDialog.alert({
                                        //                 type: BootstrapDialog.TYPE_SUCCESS,
                                        //                 message: data.message,
                                        //                 callback: function(){
                                        //                     location.reload()
                                        //                 }
                                        //             });
                                        //             //We're still in javascript so, learn about objects and methods like location and reload here below
                                        //             //if(window.alert(data.message)){ window.alert couldn't refresh like window.confirm could
                                        //             /*if(window.confirm(data.message)){
                                        //                 location.reload();
                                        //             }*/
                                        //         } else 
                                        //             BootstrapDialog.alert({
                                        //                 type: BootstrapDialog.TYPE_DANGER,
                                        //                 message: data.message,
                                        //             });
                                        //         /* Unused code
                                        //         } else {
                                        //             window.alert(data.message)
                                        //         }
                                        //         */
                                        //     }
                                        // }); End
                                    }
                                },

                            });

                       

                }, 'json');


            //     //This code sequence below was copied from users-view.php, former spot, now placed at top
            //     BootstrapDialog.confirm({
            //                 title: 'Update ' + firstName + ' ' + lastName,
            //                 //message: firstName + ' ' + lastName + ' ' + email
            //                 //The forwards slash \ the error red thing from appearing, it passes it below I think. 
            //                 //It helps pass the cover down. Remove \ on div above </form> to see
            //                 //<form action="/action_page.php"> 
            //                 message: '<form>\
            //                     <div class="form-group">\
            //                         <label for="firstName">First Name:</label>\
            //                         <input type="text" class="form-control" id="firstName" value="'+ firstName +'">\
            //                     </div>\
            //                     <div class="form-group">\
            //                         <label for="lastName">Last Name:</label>\
            //                         <input type="text" class="form-control" id="lastName" value="'+ lastName +'">\
            //                     </div>\
            //                     <div class="form-group">\
            //                         <label for="email">Email address:</label>\
            //                         <input type="email" class="form-control" id="emailUpdate" value="'+ email +'">\
            //                     </div>\
            //                 </form>',

            //                 //We changed email to emailUpdate as there are multiple email id already in page
            //                 //Dont forget the comma's at the end
            //                 //Make guidelines when handling various errors or bugs

            //                 callback: function(isUpdate){ //parameter

            //                     /* This block of code will see if this works
            //                     console.log({
            //                                 userId: userId,
            //                                 f_name: document.getElementById('firstName').value,
            //                                 l_name: document.getElementById('lastName').value,
            //                                 email: document.getElementById('emailUpdate').value,
            //                     });
            //                     return;
            //                     */

            //                     if(isUpdate){ //If user click 'Ok' button.
            //                        // alert('Hi I'+ "'" +'m updating');
            //                        $.ajax({
            //                             method: 'POST',
            //                             //user_id correlates to one in delete-user.php
            //                             data: {
            //                                 userId: userId,
            //                                 f_name: document.getElementById('firstName').value,
            //                                 l_name: document.getElementById('lastName').value,
            //                                 email: document.getElementById('emailUpdate').value,
            //                             },
            //                             url: 'database/update-user.php',
            //                             //Set data type to json so we can easily parse, process the response
            //                             //this dataType: 'json', a little bit of a mystery how it works
            //                             dataType: 'json',
                                        
            //                             //This update version gets message from data still check update-user.php
            //                             success: function(data){
            //                                 //Probably means if data success is true or has value true
            //                                 if(data.success){
            //                                     BootstrapDialog.alert({
            //                                         type: BootstrapDialog.TYPE_SUCCESS,
            //                                         message: data.message,
            //                                         callback: function(){
            //                                             location.reload()
            //                                         }
            //                                     });
            //                                     //We're still in javascript so, learn about objects and methods like location and reload here below
            //                                     //if(window.alert(data.message)){ window.alert couldn't refresh like window.confirm could
            //                                     /*if(window.confirm(data.message)){
            //                                         location.reload();
            //                                     }*/
            //                                 } else 
            //                                     BootstrapDialog.alert({
            //                                         type: BootstrapDialog.TYPE_DANGER,
            //                                         message: data.message,
            //                                     });
            //                                 /* Unused code
            //                                 } else {
            //                                     window.alert(data.message)
            //                                 }
            //                                 */
            //                             }
            //                         });
            //                     }
            //                 },

            //             });

            // //Cut            

            }
            
            this.initialize = function(){
                this.registerEvents();
            }
        }

        //Why is this down when this is the initiliazing point?
        //What does this mean, this line of code below
        //So new script means it creates a new object, then it gets in or set as var script then initialized
        var script = new script;
        script.initialize();
    </script>   
    </body>
</html>



{End}------[{product-view.php}]------{File}














{Start}------[{supplier-add.php}]------{File}


<?php
    //Go to WA4E for more info on sessions and cookies
    /* So without the session_start the user info collected
        won't be accessed or pass over to this page from login
    //session_start();
    var_dump($_SESSION['user']);
    die;
    */
    
    session_start();

    /*This refresh and prevents user from going back to dashboard. Also must be a shorthand thing */
    /*Remember the negation thing, that ! makes isset to opposite, so that mins if is not set, header will run */
    /*This if makes it so that just accessing this through url or address bar won't work, try accesing dashboard through url*/
    if(!isset($_SESSION['user'])) header('location: login.php');
    
    /*SESSION IS LIKE TEMPORARY */
    /*$_SESSION is an associative array, so if you use var_dump($_SESSION); you'll see its an
      an array that can store complex or primative data, like for example the 'user'
      So by doing. $_SESSION['Table'] = 'users'; we're adding a new variable in $_SESSION
      array next to user variavle(array)*/
    $_SESSION['table'] = 'suppliers';
    $_SESSION['redirect_to'] = 'supplier-add.php';

    /*This will connect to the span element on user*/
    $user = $_SESSION['user'];

    //$users = include('database/show-users.php'); this line was from an old version or copied
    //Use this to test if show-users.php works
    //var_dump($users);
    //die


?>


<!--Red Alert! Huge Change In Script, Apparently it was users-add.php not user-add.php
    so a lot of code might not work because of the name change, keep that in mind.
    Two things will get affected or more with this, the one linking to this since and the one getting pagelink
    For the sake of our project lets keep using user-add, that guy is a piece of work-->
<!--[==============THIS IS USER-ADD.PHP=================]--> 

<!DOCTYPE html>
<html>
    <head>
        <title>Add Supplier - Inventory Management System</title>
        <!--The time() after css/login.css is to make sure everytime we refreash we always load the new updated file, its the hard refresh solution I think-->
        <!--app-header-scripts code was once placed here-->
        <?php include('partials/app-header-scripts.php'); ?>
    </head>

    <body>
        <div id="dashboardMainContainer">
            <!--This include will run and place here that html code from that php file-->
            <!--if something went wrong there's a high chance its just directory problem-->
            <?php include('partials/app-sidebar.php') ?>
            <div class="dashboard_content_container" id="dashboard_content_container">
                <!--The elements might be separated but remember the
                    CSS is the one setting how they look-->
                <?php include('partials/app-topnav.php') ?>
                <div class="dashboard_content">
                    <div class="dashboard_content_main">
                        <div class="row">
                            <div class="column column-12">
                                <h1 class="section_header"><i class="fa fa-plus"></i> Create Supplier</h1>
                                <div id="userAddFormContainer">
                                    <!--We added the attribute enctype="" to conform with adding img-->
                                    <form action="database/add.php" method="POST" class="appForm" enctype="multipart/form-data">
                                        <!--If you use this while still connected to add.php which is still for user-add it will only add
                                            empty input to the databse of users, which you can view in users-view.php-->
                                        <div class="appFormInputContainer">
                                            <!--Tips, CTRL + ARROW, CTRL SHIFT ARROW-->
                                            <label for="supplier_name">Supplier Name </label>
                                            <input type="text" class="appFormInput" id="supplier_name" placeholder="Enter Supplier Name..." name="supplier_name"/>
                                        </div>
                                        <div class="appFormInputContainer">
                                            <label for="supplier_location">Location </label>
                                            <!--Adding space between here in textarea in html will hide the placeholder-->
                                            <input type="text" class="appFormInput" placeholder="Enter Product Supplier Location..." id="supplier_location" name="supplier_location">
                                        </div>
                                        <div class="appFormInputContainer">
                                            <label for="email">Email </label>
                                            <!--<select name="suppliers" id="suppliersSelect" multiple=""> Change to height 100px and max-height to 100px for this. I'm refusing to use multiple="" in our version, ok scratch that, the [] in name attribute makes it array-->
                                            <input type="text" class="appFormInput" placeholder="Enter Supplier Email..." id="email" name="email">
                                            <!--Don't forget the closing marks, it caused error because we forgot-->
                                        </div>
                                        <!--Code below something about processing, maybe just to show it works-->
                                        <!--<input type="hidden" name="table" value="users" />-->
                                        <button type="submit" class="appBtn"><i class="fa fa-plus"></i> Create Product</button>
                                        <!--<input type="submit" value="Submit">-->
                                    </form>
                                    <!--Understand the logic behind this tomorrow, lmao I'm spent-->
                                    <?php
                                        if(isset($_SESSION['response'])){
                                            //either way, which one runs if or catch, this will run because there will be data inserted either way
                                            //the first [response] is an array, the second [message] is data from that array
                                            $response_message = $_SESSION['response']['message'];
                                            //catch will run if theres error so [success] here has content false
                                            //$is_success will store the ['success'] array value 
                                            $is_success = $_SESSION['response']['success'];
                                            //so both 
                                    ?>
                                        <div class="responseMessage">
                                            <!--Below determines if its true or false, and what the message or color will be-->
                                            <!--<a class="c1 c2">aa</a> so you can place multiple classes in one class attribute-->
                                            <!--the just a wild guess but maybe the ? : expression goes here a command to determine which class will be placed-->
                                            <!--$str = "TEST". ($bar ? 'true' : 'false') ."TEST"; expression example, so if whats
                                                $is_success is true then left will be run and if inside is false, right will be run inside-->
                                            <p class="responseMessage <?= $is_success ? 'responseMessage_success' : 'responseMessage_error' ?>">
                                                <?= $response_message ?>
                                            </p>
                                        </div>
                                    <?php unset($_SESSION['response']); } ?>
                                </div>
                            </div>
                            <!--column-7 user view form was removed here-->
                        </div>
                    </div>                           
                </div>
            </div>
        </div>

        <?php include('partials/app-scripts.php'); ?>
                                            
        <!--You can fold a sequence or block of code then copy it easily-->
        <!--JS codes were once here, but then they got separated too, and
            were using src="" attribute to link it-->
    
    <!--app-scripts.php code was once placed here-->
    
        <script>//Script Removed Here, Since User View Form is out</script>
    <!-- Deprecated Old Code Block
    <script>
        function script(){
            //Note that ajax() function is from jquery
            //this below runs this.registerEvents = function()
            this.initialize = function(){
                this.registerEvents();
            },

            this.registerEvents = function(){
                document.addEventListener('click', function(e){
                    //This below line will prevent anchor refresh
                    //but it will also prevent you from clicking and going to dashboard at navbar
                    //e.preventDefault(); so we place this inside if
                    //this below finds or gets all classes, so classList
                    targetElement = e.target;
                    classList = targetElement.classList;
                    //classList = e.target.classList;

                    //this below will show found if user clicks delete anchor
                    //this function method finds deleteUser, among a list of classes
                    if(classList.contains('deleteUser')){
                        e.preventDefault();
                        //dataset gets the userid which was set in the anchor
                        userId = targetElement.dataset.userid;
                        fname = targetElement.dataset.fname;
                        lname = targetElement.dataset.lname;
                        fullName = fname + ' ' + lname;
                        
                        /*This below code was the New way of informing which also has no cancel for delete for some reason, so I'll use the old code*/
                        /*
                        BootstrapDialog.confirm({
                            type: BootstrapDialog.TYPE_DANGER,
                            message: 'Are you sure about deleting '+ fullName +'?',
                            callback: function(isDelete){                          
                                $.ajax({
                                    method: 'POST',
                                    //user_id correlates to one in delete-user.php
                                    data: {
                                        user_id: userId,
                                        f_name: fname,
                                        l_name: lname
                                    },
                                    url: 'database/delete-user.php',
                                    //Set data type to json so we can easily parse, process the response
                                    dataType: 'json',
                                    success: function(data){
                                        //Probably means if data success is true or has value true
                                        if(data.success){
                                                BootstrapDialog.alert({
                                                    type: BootstrapDialog.TYPE_SUCCESS,
                                                    message: data.message,
                                                    callback: function(){
                                                        location.reload()
                                                    }
                                                });
                                                //We're still in javascript so, learn about objects and methods like location and reload here below
                                                //if(window.alert(data.message)){ window.alert couldn't refresh like window.confirm could
                                                //if(window.confirm(data.message)){
                                                //    location.reload();
                                                
                                        } else 
                                            BootstrapDialog.alert({
                                                type: BootstrapDialog.TYPE_DANGER,
                                                message: data.message,
                                            });
                                        //[==Unused code
                                        //} else {
                                        //    window.alert(data.message)
                                        //}
                                        //==]
                                    } else {
                                        window.alert('Won'+ "'" +'t delete');
                                        //console.log('Won'+ "'" +'t Delete')
                                    }
                                    
                                })
                            }
                        })
                        */

                        //Remember to always check your spelling or pronuncation
                        //window = object, confirm = method/function atleast at javascript pov
                        //Oh yeah, we're on script right now, concatinate too is here
                        //You can see the result of ajax in Inspect > Network > Request > Form data
                        
                        //Learn what ajax and json exactly are and how they work exactly
                        // This was the old way of informing, which was just the browser notifying
                        if(window.confirm('Are you sure about deleting '+ fullName +'?')){
                            $.ajax({
                                method: 'POST',
                                //user_id correlates to one in delete-user.php
                                data: {
                                    user_id: userId,
                                    f_name: fname,
                                    l_name: lname
                                },
                                url: 'database/delete-user.php',
                                //Set data type to json so we can easily parse, process the response
                                dataType: 'json',
                                success: function(data){
                                    //Probably means if data success is true or has value true
                                    if(data.success){
                                        //We're still in javascript so, learn about objects and methods like location and reload here below
                                        //if(window.alert(data.message)){ window.alert couldn't refresh like window.confirm could
                                        if(window.confirm(data.message)){
                                            location.reload();
                                        }
                                    } else window.alert(data.message);
                                    //[==Unused Code
                                    //} else {
                                    //    window.alert(data.message)
                                    //}
                                    //==]
                                }
                            })
                        } else {
                            window.alert('Won'+ "'" +'t delete');
                            //console.log('Won'+ "'" +'t Delete')
                        }


                        //This is the end of the line block code

                        //Where/what does user_id correlate to the one in delete-user.php
                        //console.log(userId, fname, lname);
                        //This below will show particulars in console
                        //fname = targetElement.dataset.fname;
                        //console.log(fname);

                        //console.log('found');
                    }
                    if(classList.contains('updateUser')){
                        e.preventDefault();
                        
                        //Get data. It will target and get that data?
                        //This will be inside one tr anyway so it'll target closest tr with td equal to that class, td.firstName example
                        //.innerHTML, organizes the code
                        firstName = targetElement.closest('tr').querySelector('td.firstName').innerHTML;
                        lastName = targetElement.closest('tr').querySelector('td.lastName').innerHTML;
                        email = targetElement.closest('tr').querySelector('td.email').innerHTML;
                        userId = targetElement.dataset.userid;

                        //this pulls out information related to that td next to class, shows in console
                        //console.log(firstName, lastName, email);
                        //Reminder inspect and webdevtool is your bestfriend 

                        BootstrapDialog.confirm({
                            title: 'Update ' + firstName + ' ' + lastName,
                            //message: firstName + ' ' + lastName + ' ' + email
                            //The forwards slash \ the error red thing from appearing, it passes it below I think. 
                            //It helps pass the cover down. Remove \ on div above </form> to see
                            //<form action="/action_page.php"> 
                            message: '<form>\
                                <div class="form-group">\
                                    <label for="firstName">First Name:</label>\
                                    <input type="text" class="form-control" id="firstName" value="'+ firstName +'">\
                                </div>\
                                <div class="form-group">\
                                    <label for="lastName">Last Name:</label>\
                                    <input type="text" class="form-control" id="lastName" value="'+ lastName +'">\
                                </div>\
                                <div class="form-group">\
                                    <label for="email">Email address:</label>\
                                    <input type="email" class="form-control" id="emailUpdate" value="'+ email +'">\
                                </div>\
                            </form>',

                            //We changed email to emailUpdate as there are multiple email id already in page
                            //Dont forget the comma's at the end
                            //Make guidelines when handling various errors or bugs

                            callback: function(isUpdate){ //parameter

                                /* This block of code will see if this works
                                console.log({
                                            userId: userId,
                                            f_name: document.getElementById('firstName').value,
                                            l_name: document.getElementById('lastName').value,
                                            email: document.getElementById('emailUpdate').value,
                                });
                                return;
                                */

                                if(isUpdate){ //If user click 'Ok' button.
                                   // alert('Hi I'+ "'" +'m updating');
                                   $.ajax({
                                        method: 'POST',
                                        //user_id correlates to one in delete-user.php
                                        data: {
                                            userId: userId,
                                            f_name: document.getElementById('firstName').value,
                                            l_name: document.getElementById('lastName').value,
                                            email: document.getElementById('emailUpdate').value,
                                        },
                                        url: 'database/update-user.php',
                                        //Set data type to json so we can easily parse, process the response
                                        //this dataType: 'json', a little bit of a mystery how it works
                                        dataType: 'json',
                                        
                                        //This update version gets message from data still check update-user.php
                                        success: function(data){
                                            //Probably means if data success is true or has value true
                                            if(data.success){
                                                BootstrapDialog.alert({
                                                    type: BootstrapDialog.TYPE_SUCCESS,
                                                    message: data.message,
                                                    callback: function(){
                                                        location.reload()
                                                    }
                                                });
                                                //We're still in javascript so, learn about objects and methods like location and reload here below
                                                //if(window.alert(data.message)){ window.alert couldn't refresh like window.confirm could
                                                /*if(window.confirm(data.message)){
                                                    location.reload();
                                                }*/
                                            } else 
                                                BootstrapDialog.alert({
                                                    type: BootstrapDialog.TYPE_DANGER,
                                                    message: data.message,
                                                });
                                            /* Unused code
                                            } else {
                                                window.alert(data.message)
                                            }
                                            */
                                        }
                                    });
                                }
                            },

                        });
                    }
                });
            }

        }

        var script = new script;
        script.initialize();
    </script>
    -->
    </body>
</html>



{End}------[{supplier-add.php}]------{File}











{Start}------[{supplier-view.php}]------{File}


<?php
    //Go to WA4E for more info on sessions and cookies
    /* So without the session_start the user info collected
        won't be accessed or pass over to this page from login
    //session_start();
    var_dump($_SESSION['user']);
    die;
    */
    
    session_start();

    /*This refresh and prevents user from going back to dashboard. Also must be a shorthand thing */
    /*Remember the negation thing, that ! makes isset to opposite, so that mins if is not set, header will run */
    /*This if makes it so that just accessing this through url or address bar won't work, try accesing dashboard through url*/
    if(!isset($_SESSION['user'])) header('location: login.php');
    
    /*SESSION IS LIKE TEMPORARY */
    /*$_SESSION is an associative array, so if you use var_dump($_SESSION); you'll see its an
      an array that can store complex or primative data, like for example the 'user'
      So by doing. $_SESSION['Table'] = 'users'; we're adding a new variable in $_SESSION
      array next to user variable(array)*/
    //The array you're inserting can be named anyway you want, and this table = product will only be set if this page is entered
    //$_SESSION['table'] = 'products'; deprecated got replaced by below
    //$show_table = 'products';

    //var_dump($_SESSION);
    //die;

    //$users = include('database/show-users.php'); WE CHANGED THIS
    
    //This was entire page was copied from product_view.php chapter 20
    //the 'products' gets inserted in $show_table?
    $show_table = 'suppliers';
    $suppliers = include('database/show.php');

    //Use this to test if show-users.php works
    //var_dump($users);
    //die


?>

<!--[==============THIS IS USER-ADD.PHP=================]--> 

<!DOCTYPE html>
<html>
    <head>
        <title>View Suppliers - Inventory Management System</title>
        <!--The time() after css/login.css is to make sure everytime we refreash we always load the new updated file, its the hard refresh solution I think-->
        <!--app-header-scripts was once here-->
        <?php include('partials/app-header-scripts.php'); ?>
    </head>
    <body>
        <div id="dashboardMainContainer">
            <!--This include will run and place here that html code from that php file-->
            <!--if something wen't wrong there's a high chance its just directory problem-->
            <?php include('partials/app-sidebar.php') ?>
            <div class="dashboard_content_container" id="dashboard_content_container">
                <!--The elements might be separated but remember the
                    CSS is the one setting how they look-->
                <?php include('partials/app-topnav.php') ?>
                <div class="dashboard_content">
                    <div class="dashboard_content_main">
                        <div class="row">
                            <!--<div class="column column-7">-->
                            <!--woah what's going on, when we changed column-7 to column-12 it changed width-->
                            <div class="column column-12">
                                <!--Remember we kept the h1 at top instead of moving it to bottom right corner-->
                                <h1 class="section_header"><i class="fa fa-list"></i> List of Suppliers</h1>
                                <div class="section_content">
                                    <div class="users">
                                        <!--Below it doesn't matter if array is from 0 to up, it will count it normally-->
                                        <p class="userCount"><?= count($suppliers) ?> Products</p>
                                        <table>
                                            <!--<thead></thead>-->
                                            <!--Also the logo on sidebar changes/changed because we changed source of icons-->
                                            <thead>
                                                <tr>
                                                    <!--We updated this line of codes to fit product-view-->
                                                    <th>#</th>
                                                    <th>Supplier Name</th>
                                                    <th>Supplier Location</th>
                                                    <!-- you can use width="10%" in th -->
                                                    <th>Contact Details</th>
                                                    <th>Products</th>
                                                    <th>Created By</th>
                                                    <th>Created At</th>
                                                    <th>Updated At</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <!--Also on id we don't use the real id in database-->
                                                <!--Notice how $index is set and respond-->
                                                <!--foreach will pull.take out and run for each array inside ($users) ?-->
                                                <!--as and $variable (you pick a name) is a must-->
                                                <!--We updated this line of codes from users-view to fit product-view-->
                                                <!--This $suppliers related to the one we set above-->
                                                <!-- you can place var_dump($suppliers); die; between php and foreach below to see what it pulled -->
                                                <?php foreach($suppliers as $index => $supplier){ ?>
                                                    <tr>
                                                        <!--Remember PDO::_ASSOC set it to array so users
                                                            an array turned as index an array here, in one instance
                                                            here we make index + 1 cause first array inside is set to 0, it just
                                                            correspond to array in $users. then index which holds from 0 to whatever
                                                            array value there is will be what $user draws from. So if $index in this
                                                            iteration of foreach is now 7, $user will draw from data or row column data
                                                            from that array made in $users/$index-->
                                                        <td><?= $index + 1 ?></td>
                                                        <!--<td class="firstName"><?= $product['img'] ?></td> This line of code will only show image name-->
                                                        <!--Lmao he has a sizing problem with his styling table, we fixed it before him chapters ago, we'll try and write his solution for now-->
                                                        <td>
                                                            <?= $supplier['supplier_name'] ?>
                                                        </td>
                                                        <td><?= $supplier['supplier_location'] ?></td>
                                                        <td><?= $supplier['email'] ?></td>
                                                        <td class="productsTD">    
                                                            <?php
                                                                // This below line will show up since rows without truthsy value wont run if statement
                                                                $product_list = 'Not-Set';

                                                                //This code block is from for product id and below code block is for user id
                                                                //This code block got copied from below 
                                                                //This following code block is from show.php and was slightly modified. Nice, at Chapter 19 changed pid to uid
                                                                $sid = $supplier['id'];
                                                                $stmt = $conn->prepare("
                                                                                SELECT product_name
                                                                                    FROM products, productsuppliers
                                                                                    WHERE
                                                                                        productsuppliers.supplier=$sid
                                                                                            AND
                                                                                        productsuppliers.product = products.id                                 
                                                                                ");
                                                                $stmt->execute();
                                                                $row = $stmt->fetchAll(PDO::FETCH_ASSOC);
                                                                // $row = $stmt->fetch(PDO::FETCH_ASSOC);
                                                                //$stmt->setFetchMode(PDO::FETCH_ASSOC);
                                                                
                                                                if($row){

                                                                    $product_arr = array_column($row, 'product_name');
                                                                    //Not sure how this two works, get an idea of it
                                                                    $product_list = '<li>' . implode("</li><li>", $product_arr);
    
                                                                }

                                                                // var_dump($row);
                                                                // die;
                                                                //So here instead of getting the Id number of the creator like last time, will make the name appear
                                                                // $created_by_name = $row['first_name'] . ' ' . $row['last_name'];
                                                                // echo $created_by_name;
                                                                //var_dump($stmt->fetchAll())
                                                                //var_dump($row)

                                                                // $supplier_arr = array_column($row, 'supplier_name');
                                                                // $supplier_list = '<li>' . implode("</li><li>", $supplier_arr);
                                                                
                                                                echo $product_list

                                                                // var_dump($supplier_list);
                                                                // die;
                                                            ?>                                                        
                                                        </td>
                                                        <td>
                                                            <!--What's the difference between return; and die;-->
                                                            <?php
                                                                //Yo its weird as hell, if we keep this $uid = $product['created_by']; instead of the motified one, the sidenav wont work
                                                                //This following code block is from show.php and was slightly modified. Nice, at Chapter 19 changed pid to uid
                                                                $uid = $supplier['created_by'];
                                                                $stmt = $conn->prepare("SELECT * FROM users WHERE id=$uid");
                                                                $stmt->execute();
                                                                $row = $stmt->fetch(PDO::FETCH_ASSOC);
                                                                //$stmt->setFetchMode(PDO::FETCH_ASSOC);
                                                                
                                                                //So here instead of getting the Id number of the creator like last time, will make the name appear
                                                                $created_by_name = $row['first_name'] . ' ' . $row['last_name'];
                                                                echo $created_by_name;
                                                                //var_dump($stmt->fetchAll())
                                                                //var_dump($row)

                                                            ?>

                                                            <!--<?= $product['created_by'] ?>-->

                                                        </td>
                                                        <!--so the F d,y correspond to month, day, year, might be a parameter-->
                                                        <td><?= date('M d,Y @ h:i:s A', strtotime($supplier['created_at'])) ?></td>
                                                        <td><?= date('M d,Y @ h:i:s A', strtotime($supplier['updated_at'])) ?></td>
                                                        <!--Below code are variations-->
                                                        <!--<td><?= date('F d,Y @ H:i:s A', strtotime($user['updated_at'])) ?></td>-->
                                                        <!--Below code is removed cause its hard to read-->
                                                        <!--<td><?= $user['created_at'] ?></td>-->
                                                        <!--<td><?= $user['updated_at'] ?></td>-->
                                                        <td>
                                                            <!--Many ware changed from user page to product page here-->
                                                            <a href="" class="updateSupplier" data-sid="<?= $supplier['id'] ?>"><i class="fa fa-pencil"></i> Edit |</a>
                                                            <!-- the $user['id'] will pull out the user corelating to this row, foreach. data-name="" can be changed to any name-->
                                                            <!--You cant use <QuestionMarkphp here, you must use <Questionmark= or you'll get nothing-->
                                                            <a href="" class="deleteSupplier" data-name="<?= $supplier['supplier_name'] ?>" data-sid="<?= $supplier['id'] ?>"><i class="fa fa-trash"></i> Delete</a>
                                                        </td>
                                                    </tr>
                                                <?php } ?>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>         
                            </div>
                        </div>
                    </div>                           
                </div>
            </div>
        </div>
        <!--You can fold a sequence or block of code then copy it easily-->
        <!--JS codes were once here, but then they got separated too, and
            were using src="" attribute to link it-->
    <!--app-scripts.php code was once here-->        
    <?php 
    
        include('partials/app-scripts.php'); 
        
        $show_table = 'products';
        $products = include('database/show.php');

        $products_arr = [];

        foreach($products as $product){
            $products_arr[$product['id']] = $product['product_name'];
            //"<option value='". $supplier['id'] . "'> ".$supplier['supplier_name']."</option>";
            //echo "<option value='". $supplier['id'] . "'> ".$supplier['supplier_name']."</option>";
        }

        $products_arr = json_encode($products_arr);
        // var_dump($supplier_arr);
        // die;
    
    ?>
    <script>
        var productsList = <?= $products_arr ?>;

        //console.log(suppliersList);


        function script(){
            var vm = this;


            this.registerEvents = function(){
                document.addEventListener('click', function(e){
                    //alert('hi');
                    //return: false; what was the false for?

                    //He's trying to make it more dynamic, so show-users.php got removed

                    //This code block was from users-view-php
                    //This below line will prevent anchor refresh
                    //but it will also prevent you from clicking and going to dashboard at navbar
                    //e.preventDefault(); so we place this inside if
                    //this below finds or gets all classes, so classList
                    targetElement = e.target; //Target element
                    classList = targetElement.classList;
                    //classList = e.target.classList;

                    //this below will show found if user clicks delete anchor
                    //this function method finds deleteUser, among a list of classes
                    if(classList.contains('deleteSupplier')){
                        e.preventDefault(); //This prevents the default mechanism

                        //console.log(targetElement);
                        //return; returns ends the run of code reading

                        sId = targetElement.dataset.sid;
                        supplierName = targetElement.dataset.name;

                        //console.log(pId, pName);
                        //return false;


                        //dataset gets the userid which was set in the anchor
                        //userId = targetElement.dataset.userid;
                        //fname = targetElement.dataset.fname;
                        //lname = targetElement.dataset.lname;
                        //fullName = fname + ' ' + lname;
                        
                        /*This below code was the New way of informing which also has no cancel for delete for some reason, so I'll use the old code,
                        now at chapter 17 it has been brought back, now it works since the alert thing have been implemented on bootstrap/ajax.
                        Unlike him though, we kept the alert for its usefulness*/
                        
                        BootstrapDialog.confirm({
                            type: BootstrapDialog.TYPE_DANGER,
                            title: 'Delete Supplier',
                            message: 'Are you sure about deleting <strong>'+ supplierName +'<strong>?',
                            callback: function(isDelete){
                                if(isDelete){
                                    //I kept the alert line
                                    alert('Will be deleting');
                                    $.ajax({
                                    method: 'POST',
                                    //user_id correlates to one in delete-user.php
                                    data: {
                                        id: sId,
                                        table: 'suppliers' 
                                        //f_name: fname,
                                        //l_name: lname
                                    },
                                    url: 'database/delete.php',
                                    //url: 'database/delete-user.php', line above changed from this
                                    //Set data type to json so we can easily parse, process the response
                                    dataType: 'json',
                                    success: function(data){
                                        message = data.success ? 
                                            supplierName + ' succesfully deleted!' : 'Error processing your request!';
                                        
                                        BootstrapDialog.alert({
                                                //Is this expression like to see if the value of data.success is truethy or falsy which then is if else
                                                type: data.success ? BootstrapDialog.TYPE_SUCCESS : BootstrapDialog.TYPE_DANGER,
                                                message: message,
                                                callback: function(){
                                                    if(data.success) location.reload()
                                                }
                                        });
                                            
                                        /* Old Code Block
                                        //Probably means if data success is true or has value true
                                        if(data.success){
                                                BootstrapDialog.alert({
                                                    type: BootstrapDialog.TYPE_SUCCESS,
                                                    message: message,
                                                    callback: function(){
                                                        location.reload()
                                                    }
                                                });
                                                //We're still in javascript so, learn about objects and methods like location and reload here below
                                                //if(window.alert(data.message)){ window.alert couldn't refresh like window.confirm could
                                                //if(window.confirm(data.message)){
                                                //    location.reload();
                                                
                                        } else 
                                            BootstrapDialog.alert({
                                                type: BootstrapDialog.TYPE_DANGER,
                                                message: message,
                                            });
                                        End of Code Comment Block*/
                                        //[==Unused code
                                        //} else {
                                        //    window.alert(data.message)
                                        //}
                                        //==]
                                    }
                                    //} else { this code block turned the very bottom blue, Dont know exactly why, but it caused error or problem
                                    //    window.alert('Won'+ "'" +'t delete');
                                    //    //console.log('Won'+ "'" +'t Delete')
                                    //}

                                    })

                                } else {
                                    alert('Cancelled');
                                }
                            }
                        })
                        


                        //Remember to always check your spelling or pronuncation
                        //window = object, confirm = method/function atleast at javascript pov
                        //Oh yeah, we're on script right now, concatinate too is here
                        //You can see the result of ajax in Inspect > Network > Request > Form data
                        
                        //Learn what ajax and json exactly are and how they work exactly
                        // This was the old way of informing, which was just the browser notifying
                        //Thie line block of code is now deprecated we'll be using bootstrap again
                        /*
                        if(window.confirm('Are you sure about deleting '+ fullName +'?')){
                            $.ajax({
                                method: 'POST',
                                //user_id correlates to one in delete-user.php
                                data: {
                                    user_id: userId,
                                    f_name: fname,
                                    l_name: lname
                                },
                                url: 'database/delete-user.php',
                                //Set data type to json so we can easily parse, process the response
                                dataType: 'json',
                                success: function(data){
                                    //Probably means if data success is true or has value true
                                    if(data.success){
                                        //We're still in javascript so, learn about objects and methods like location and reload here below
                                        //if(window.alert(data.message)){ window.alert couldn't refresh like window.confirm could
                                        if(window.confirm(data.message)){
                                            location.reload();
                                        }
                                    } else window.alert(data.message);
                                    //[==Unused Code
                                    //} else {
                                    //    window.alert(data.message)
                                    //}
                                    //==]
                                }
                            })
                        } else {
                            window.alert('Won'+ "'" +'t delete');
                            //console.log('Won'+ "'" +'t Delete')
                        }
                        */

                        //This is the end of the line block code

                        //Where/what does user_id correlate to the one in delete-user.php
                        //console.log(userId, fname, lname);
                        //This below will show particulars in console
                        //fname = targetElement.dataset.fname;
                        //console.log(fname);

                        //console.log('found');
                    }

                    if(classList.contains('updateSupplier')){
                        //This alert runs when you click edit text button anchor
                        //alert('Hey!')

                        e.preventDefault(); //This prevents the default mechanism

                        //console.log(targetElement);
                        //return; returns ends the run of code reading

                        sId = targetElement.dataset.sid;
                        //pName = targetElement.dataset.pname;

                        //this keyword im unsure of but showEditDialog is a function
                        //this.showEditDialog(pId);
                        //Get Product. you can change asdf into anything aparrently, its not a function? Can be named anything?

                        vm.showEditDialog(sId);
                        //vm.asdf(pId);
                        


                    }
                });

                document.addEventListener('submit', function(e){
                    e.preventDefault();
                    targetElement = e.target;

                    if(targetElement.id === 'editSupplierForm'){
                        //alert('Updating form');
                        vm.saveUpdatedData(targetElement);
                        //The form inside this above is the same in function below and the FormData(form),
                        //you can change the name of this to anything as when the saveUpdatedData is run it runs parameter
                    }

                });

                //CTRL + / to comment multiple lines and CTRL + K then after U comment out

                // document.addEventListener('submit', function(e){
                //     targetElement = e.target; //target element
                    
                //     alert(targetElement.id);
                //     e.preventDefault();

                // });
                
                //This code block below refreshes
                // $('#editProductForm').on('submit', function(e){
                //     e.preventDefault();
                // })

            },

            //this keyword might be related to this keyword in php classes/objects
            this.saveUpdatedData = function(form){

                //console.log(new FormData(form));
                //return; this duo will show in console when edit is clicked, the data it shows has tons of info, see it

                //alert('Hi');
                $.ajax({
                    method: 'POST',
                    //user_id correlates to one in delete-user.php
                    //data: new FormData(form), whats this new FormData(form)? Btw the data inside here corelates to the one in message:
                    data: {
                        supplier_name: document.getElementById('supplier_name').value,
                        supplier_location: document.getElementById('supplier_location').value,
                        email: document.getElementById('email').value,
                        products: $('#products').val(),
                        //products: document.getElementById('products').value, we needed some kind of loop, but the above works to get all values
                        sid: document.getElementById('sid').value
                    },
                    //this code below contacts update-product.php and gives it data which it can use
                    url: 'database/update-supplier.php',
                    //Set data type to json so we can easily parse, process the response
                    //this dataType: 'json', a little bit of a mystery how it works
                    //dataType: 'json',
                    //These two below is a new addition at Chap 18, then dataType: 'json' got removed, then got back again, guy flip flops a lot
                    // processData: false, These two was removed at chapter 22
                    // contentType: false,
                    dataType: 'json',
                    //This update version gets message from data still check update-user.php
                    success: function(data){
                        BootstrapDialog.alert({
                            type: data.success ? BootstrapDialog.TYPE_SUCCESS : BootstrapDialog.TYPE_DANGER,
                            message: data.message,
                            callback: function(){
                                if(data.success) location.reload();

                            }
                            
                        });


                        //console.log(data);
                        //Probably means if data success is true or has value true
                        //This code block below got removed because the above code block does the exact same thing but simpler
                        // if(data.success){
                        //     BootstrapDialog.alert({
                        //         type: BootstrapDialog.TYPE_SUCCESS,
                        //         message: data.message,
                        //         callback: function(){
                        //             location.reload()
                        //         }
                        //     });
                        //     //We're still in javascript so, learn about objects and methods like location and reload here below
                        //     //if(window.alert(data.message)){ window.alert couldn't refresh like window.confirm could
                        //     /*if(window.confirm(data.message)){
                        //         location.reload();
                        //     }*/
                        // } else 
                        //     BootstrapDialog.alert({
                        //         type: BootstrapDialog.TYPE_DANGER,
                        //         message: data.message,
                        //     });
                        /* Unused code
                        } else {
                            window.alert(data.message)
                        }
                        */
                    }
                });
            },

            //this.asdf = function(id){
            
            //What this below line of code is saying is that, this (this) . showEditDialog is equals to function(id)
            //which depending on which row you clicked will store that id value, the id is a parameter that holds id, it can be name changed
            this.showEditDialog = function(id){
                
                //console.log(productDetails);
                //function(data) parameter?
                //Understand this line below the expression
                //So productDetails will be like a placeholder or parameter, and it can pull out the items, like product_name
                //This $.get will run and get info from get-product.php it corelates. the id might relate to id down in message: that element with it
                $.get('database/get-supplier.php', {id: id}, function(supplierDetails){
                    
                    //Supplier option will display the options of supplier in edit/update
                    //console.log(productDetails);
                    let curProducts = supplierDetails['products'];
                    let productOptions = '';

                    //Try ang comprehend this loop
                    for(const [pId, pName] of Object.entries(productsList)) {
                        selected = curProducts.indexOf(pId) > -1 ? 'selected' : '';
                        productOptions += "<option "+ selected +" value='"+ pId +"'>"+ pName +"</option>";
                    }

                    //console.log(supplierOption);

                    //can't use $ outside of php stuff, unrelated for stuffs that goes outside
                    //console.log(data); or console.productDetails
                    //This code sequence below was copied from users-view.php,
                    BootstrapDialog.confirm({
                                title: 'Update <strong>' + supplierDetails.supplier_name + '</strong>',
                                //message: firstName + ' ' + lastName + ' ' + email
                                //The forwards slash \ the error red thing from appearing, it passes it below I think. 
                                //It helps pass the cover down. Remove \ on div above </form> to see
                                //<form action="/action_page.php"> 
                                //Also we added \ at the end to turn it into text I think
                                //Don't forget <form></form>, also enctype was added 
                                //Note with this message: thing, if a line won't turn into comment, go backspace on that line
                                message: '\<form action="database/add.php" method="POST" enctype="multipart/form-data" id="editSupplierForm">\
                                        <div class="appFormInputContainer">\
                                            <!--Tips, CTRL + ARROW, CTRL SHIFT ARROW-->\
                                            <label for="supplier_name">Supplier Name </label>\
                                            <input type="text" class="appFormInput" id="supplier_name" value="'+ supplierDetails.supplier_name +'" placeholder="Enter Supplier Name..." name="supplier_name"/>\
                                        </div>\
                                        <div class="appFormInputContainer">\
                                            <label for="supplier_location">Location </label>\
                                            <!--Adding space between here in textarea in html will hide the placeholder-->\
                                            <input type="text" class="appFormInput" value="'+ supplierDetails.supplier_location +'" placeholder="Enter Product Supplier Location..." id="supplier_location" name="supplier_location">\
                                        </div>\
                                        <div class="appFormInputContainer">\
                                            <label for="email">Email </label>\
                                            <!--<select name="suppliers" id="suppliersSelect" multiple="">-->\
                                            <input type="text" class="appFormInput" value="'+ supplierDetails.email +'" placeholder="Enter Supplier Email..." id="email" name="email">\
                                        </div>\
                                        <div class="appFormInputContainer">\
                                            <label for="products">Products </label>\
                                            <select name="products[]" id="products" multiple="">\
                                                <option value="">Select Products</option>\
                                                '+ productOptions +'\
                                            </select>\
                                        </div>\
                                        <input type="hidden" name="sid" id="sid" value="'+ supplierDetails.id +'"/>\
                                        <input type="submit" value="submit" id="editSupplierSubmitBtn" class="hidden"/>\
                                    </form>\
                                ',

                                //class="hidden" hides the input submit thing above
                                //We changed email to emailUpdate as there are multiple email id already in page
                                //Dont forget the comma's at the end
                                //Make guidelines when handling various errors or bugs

                                callback: function(isUpdate){ //parameter

                                    /* This block of code will see if this works
                                    console.log({
                                                userId: userId,
                                                f_name: document.getElementById('firstName').value,
                                                l_name: document.getElementById('lastName').value,
                                                email: document.getElementById('emailUpdate').value,
                                    });
                                    return;
                                    */

                                    if(isUpdate){ //If user click 'Ok' button.
                                    // alert('Hi I'+ "'" +'m updating');
                                        //So thats a parametered get variable, that used submit() method/function?
                                        //The id was from the form above inside message at ajax
                                        //$('#editProductForm').submit();

                                        document.getElementById('editSupplierSubmitBtn').click();
                                        
                                        
                                        // $('#editProductForm').submit(function(e){
                                        //     console.log('hi');

                                        //     window.href.location = 'facebook.com'

                                        //     e.preventDefault();
                                        // });
                                        
                                    // return;

                                        // $.ajax({ Start
                                        //     method: 'POST',
                                        //     //user_id correlates to one in delete-user.php
                                        //     data: {
                                        //         userId: userId,
                                        //         f_name: document.getElementById('firstName').value,
                                        //         l_name: document.getElementById('lastName').value,
                                        //         email: document.getElementById('emailUpdate').value,
                                        //     },
                                        //     url: 'database/update-user.php',
                                        //     //Set data type to json so we can easily parse, process the response
                                        //     //this dataType: 'json', a little bit of a mystery how it works
                                        //     dataType: 'json',
                                            
                                        //     //This update version gets message from data still check update-user.php
                                        //     success: function(data){
                                        //         //Probably means if data success is true or has value true
                                        //         if(data.success){
                                        //             BootstrapDialog.alert({
                                        //                 type: BootstrapDialog.TYPE_SUCCESS,
                                        //                 message: data.message,
                                        //                 callback: function(){
                                        //                     location.reload()
                                        //                 }
                                        //             });
                                        //             //We're still in javascript so, learn about objects and methods like location and reload here below
                                        //             //if(window.alert(data.message)){ window.alert couldn't refresh like window.confirm could
                                        //             /*if(window.confirm(data.message)){
                                        //                 location.reload();
                                        //             }*/
                                        //         } else 
                                        //             BootstrapDialog.alert({
                                        //                 type: BootstrapDialog.TYPE_DANGER,
                                        //                 message: data.message,
                                        //             });
                                        //         /* Unused code
                                        //         } else {
                                        //             window.alert(data.message)
                                        //         }
                                        //         */
                                        //     }
                                        // }); End
                                    }
                                },

                            });

                       

                }, 'json');


            //     //This code sequence below was copied from users-view.php, former spot, now placed at top
            //     BootstrapDialog.confirm({
            //                 title: 'Update ' + firstName + ' ' + lastName,
            //                 //message: firstName + ' ' + lastName + ' ' + email
            //                 //The forwards slash \ the error red thing from appearing, it passes it below I think. 
            //                 //It helps pass the cover down. Remove \ on div above </form> to see
            //                 //<form action="/action_page.php"> 
            //                 message: '<form>\
            //                     <div class="form-group">\
            //                         <label for="firstName">First Name:</label>\
            //                         <input type="text" class="form-control" id="firstName" value="'+ firstName +'">\
            //                     </div>\
            //                     <div class="form-group">\
            //                         <label for="lastName">Last Name:</label>\
            //                         <input type="text" class="form-control" id="lastName" value="'+ lastName +'">\
            //                     </div>\
            //                     <div class="form-group">\
            //                         <label for="email">Email address:</label>\
            //                         <input type="email" class="form-control" id="emailUpdate" value="'+ email +'">\
            //                     </div>\
            //                 </form>',

            //                 //We changed email to emailUpdate as there are multiple email id already in page
            //                 //Dont forget the comma's at the end
            //                 //Make guidelines when handling various errors or bugs

            //                 callback: function(isUpdate){ //parameter

            //                     /* This block of code will see if this works
            //                     console.log({
            //                                 userId: userId,
            //                                 f_name: document.getElementById('firstName').value,
            //                                 l_name: document.getElementById('lastName').value,
            //                                 email: document.getElementById('emailUpdate').value,
            //                     });
            //                     return;
            //                     */

            //                     if(isUpdate){ //If user click 'Ok' button.
            //                        // alert('Hi I'+ "'" +'m updating');
            //                        $.ajax({
            //                             method: 'POST',
            //                             //user_id correlates to one in delete-user.php
            //                             data: {
            //                                 userId: userId,
            //                                 f_name: document.getElementById('firstName').value,
            //                                 l_name: document.getElementById('lastName').value,
            //                                 email: document.getElementById('emailUpdate').value,
            //                             },
            //                             url: 'database/update-user.php',
            //                             //Set data type to json so we can easily parse, process the response
            //                             //this dataType: 'json', a little bit of a mystery how it works
            //                             dataType: 'json',
                                        
            //                             //This update version gets message from data still check update-user.php
            //                             success: function(data){
            //                                 //Probably means if data success is true or has value true
            //                                 if(data.success){
            //                                     BootstrapDialog.alert({
            //                                         type: BootstrapDialog.TYPE_SUCCESS,
            //                                         message: data.message,
            //                                         callback: function(){
            //                                             location.reload()
            //                                         }
            //                                     });
            //                                     //We're still in javascript so, learn about objects and methods like location and reload here below
            //                                     //if(window.alert(data.message)){ window.alert couldn't refresh like window.confirm could
            //                                     /*if(window.confirm(data.message)){
            //                                         location.reload();
            //                                     }*/
            //                                 } else 
            //                                     BootstrapDialog.alert({
            //                                         type: BootstrapDialog.TYPE_DANGER,
            //                                         message: data.message,
            //                                     });
            //                                 /* Unused code
            //                                 } else {
            //                                     window.alert(data.message)
            //                                 }
            //                                 */
            //                             }
            //                         });
            //                     }
            //                 },

            //             });

            // //Cut            

            }
            
            this.initialize = function(){
                this.registerEvents();
            }
        }

        //Why is this down when this is the initiliazing point?
        //What does this mean, this line of code below
        //So new script means it creates a new object, then it gets in or set as var script then initialized
        var script = new script;
        script.initialize();
    </script>   
    </body>
</html>



{End}------[{supplier-view.php}]------{File}













{Start}------[{user-add.php}]------{File}


<?php
    //Go to WA4E for more info on sessions and cookies
    /* So without the session_start the user info collected
        won't be accessed or pass over to this page from login
    //session_start();
    var_dump($_SESSION['user']);
    die;
    */
    
    session_start();

    /*This refresh and prevents user from going back to dashboard. Also must be a shorthand thing */
    /*Remember the negation thing, that ! makes isset to opposite, so that mins if is not set, header will run */
    /*This if makes it so that just accessing this through url or address bar won't work, try accesing dashboard through url*/
    if(!isset($_SESSION['user'])) header('location: login.php');
    
    /*SESSION IS LIKE TEMPORARY */
    /*$_SESSION is an associative array, so if you use var_dump($_SESSION); you'll see its an
      an array that can store complex or primative data, like for example the 'user'
      So by doing. $_SESSION['Table'] = 'users'; we're adding a new variable in $_SESSION
      array next to user variavle(array)*/
    $_SESSION['table'] = 'users';
    $_SESSION['redirect_to'] = 'user-add.php';

    /*This will connect to the span element on user*/
    //Keping this code below after chapter 19 will cause error in view  pages
    //$user = $_SESSION['user'];

    //Added at chapter 19
    $show_table = 'users';
    //New added code when show.php got introduced
    //$_SESSION['table'] = 'users';
    $users = include('database/show.php');

    //$users = include('database/show-users.php'); Old code

    //Use this to test if show-users.php works
    //var_dump($users);
    //die


?>


<!--Red Alert! Huge Change In Script, Apparently it was users-add.php not user-add.php
    so a lot of code might not work because of the name change, keep that in mind.
    Two things will get affected or more with this, the one linking to this since and the one getting pagelink
    For the sake of our project lets keep using user-add, that guy is a piece of work-->
<!--[==============THIS IS USER-ADD.PHP=================]--> 

<!DOCTYPE html>
<html>
    <head>
        <title>Add User - Inventory Management System</title>
        <!--The time() after css/login.css is to make sure everytime we refreash we always load the new updated file, its the hard refresh solution I think-->
        <!--app-header-scripts code was once placed here-->
        <?php include('partials/app-header-scripts.php'); ?>
    </head>

    <body>
        <div id="dashboardMainContainer">
            <!--This include will run and place here that html code from that php file-->
            <!--if something wen't wrong there's a high chance its just directory problem-->
            <?php include('partials/app-sidebar.php') ?>
            <div class="dashboard_content_container" id="dashboard_content_container">
                <!--The elements might be separated but remember the
                    CSS is the one setting how they look-->
                <?php include('partials/app-topnav.php') ?>
                <div class="dashboard_content">
                    <div class="dashboard_content_main">
                        <div class="row">
                            <div class="column column-12">
                                <h1 class="section_header"><i class="fa fa-plus"></i> Create User</h1>
                                <div id="userAddFormContainer">
                                    <form action="database/add.php" method="POST" class="appForm">
                                        <div class="appFormInputContainer">
                                            <!--Tips, CTRL + ARROW, CTRL SHIFT ARROW-->
                                            <label for="first_name">First Name</label>
                                            <input type="text" class="appFormInput" id="first_name" name="first_name"/>
                                        </div>
                                        <div class="appFormInputContainer">
                                            <label for="last_name">Last Name</label>
                                            <input type="text" class="appFormInput" id="last_name" name="last_name"/>
                                        </div>
                                        <div class="appFormInputContainer">
                                            <label for="email">Email</label>
                                            <input type="text" class="appFormInput" id="email" name="email"/>
                                        </div>
                                        <div class="appFormInputContainer">
                                            <label for="password">Password</label>
                                            <input type="password" class="appFormInput" id="password" name="password"/>
                                        </div>

                                        <!--Code below something about processing, maybe just to show it works-->
                                        <!--<input type="hidden" name="table" value="users" />-->
                                        <button type="submit" class="appBtn"><i class="fa fa-plus"></i> Add User</button>
                                        <!--<input type="submit" value="Submit">-->
                                    </form>
                                    <!--Understand the logic behind this tomorrow, lmao I'm spent-->
                                    <?php
                                        if(isset($_SESSION['response'])){
                                            //either way, which one runs if or catch, this will run because there will be data inserted either way
                                            //the first [response] is an array, the second [message] is data from that array
                                            $response_message = $_SESSION['response']['message'];
                                            //catch will run if theres error so [success] here has content false
                                            //$is_success will store the ['success'] array value 
                                            $is_success = $_SESSION['response']['success'];
                                            //so both 
                                    ?>
                                        <div class="responseMessage">
                                            <!--Below determines if its true or false, and what the message or color will be-->
                                            <!--<a class="c1 c2">aa</a> so you can place multiple classes in one class attribute-->
                                            <!--the just a wild guess but maybe the ? : expression goes here a command to determine which class will be placed-->
                                            <!--$str = "TEST". ($bar ? 'true' : 'false') ."TEST"; expression example, so if whats
                                                $is_success is true then left will be run and if inside is false, right will be run inside-->
                                            <p class="responseMessage <?= $is_success ? 'responseMessage_success' : 'responseMessage_error' ?>">
                                                <?= $response_message ?>
                                            </p>
                                        </div>
                                    <?php unset($_SESSION['response']); } ?>
                                </div>
                            </div>
                            <!--column-7 user view form was removed here-->
                        </div>
                    </div>                           
                </div>
            </div>
        </div>

        <?php include('partials/app-scripts.php'); ?>
                                            
        <!--You can fold a sequence or block of code then copy it easily-->
        <!--JS codes were once here, but then they got separated too, and
            were using src="" attribute to link it-->
    
    <!--app-scripts.php code was once placed here-->
    
        <script>//Script Removed Here, Since User View Form is out</script>
    <!-- Deprecated Old Code Block
    <script>
        function script(){
            //Note that ajax() function is from jquery
            //this below runs this.registerEvents = function()
            this.initialize = function(){
                this.registerEvents();
            },

            this.registerEvents = function(){
                document.addEventListener('click', function(e){
                    //This below line will prevent anchor refresh
                    //but it will also prevent you from clicking and going to dashboard at navbar
                    //e.preventDefault(); so we place this inside if
                    //this below finds or gets all classes, so classList
                    targetElement = e.target;
                    classList = targetElement.classList;
                    //classList = e.target.classList;

                    //this below will show found if user clicks delete anchor
                    //this function method finds deleteUser, among a list of classes
                    if(classList.contains('deleteUser')){
                        e.preventDefault();
                        //dataset gets the userid which was set in the anchor
                        userId = targetElement.dataset.userid;
                        fname = targetElement.dataset.fname;
                        lname = targetElement.dataset.lname;
                        fullName = fname + ' ' + lname;
                        
                        /*This below code was the New way of informing which also has no cancel for delete for some reason, so I'll use the old code*/
                        /*
                        BootstrapDialog.confirm({
                            type: BootstrapDialog.TYPE_DANGER,
                            message: 'Are you sure about deleting '+ fullName +'?',
                            callback: function(isDelete){                          
                                $.ajax({
                                    method: 'POST',
                                    //user_id correlates to one in delete-user.php
                                    data: {
                                        user_id: userId,
                                        f_name: fname,
                                        l_name: lname
                                    },
                                    url: 'database/delete-user.php',
                                    //Set data type to json so we can easily parse, process the response
                                    dataType: 'json',
                                    success: function(data){
                                        //Probably means if data success is true or has value true
                                        if(data.success){
                                                BootstrapDialog.alert({
                                                    type: BootstrapDialog.TYPE_SUCCESS,
                                                    message: data.message,
                                                    callback: function(){
                                                        location.reload()
                                                    }
                                                });
                                                //We're still in javascript so, learn about objects and methods like location and reload here below
                                                //if(window.alert(data.message)){ window.alert couldn't refresh like window.confirm could
                                                //if(window.confirm(data.message)){
                                                //    location.reload();
                                                
                                        } else 
                                            BootstrapDialog.alert({
                                                type: BootstrapDialog.TYPE_DANGER,
                                                message: data.message,
                                            });
                                        //[==Unused code
                                        //} else {
                                        //    window.alert(data.message)
                                        //}
                                        //==]
                                    } else {
                                        window.alert('Won'+ "'" +'t delete');
                                        //console.log('Won'+ "'" +'t Delete')
                                    }
                                    
                                })
                            }
                        })
                        */

                        //Remember to always check your spelling or pronuncation
                        //window = object, confirm = method/function atleast at javascript pov
                        //Oh yeah, we're on script right now, concatinate too is here
                        //You can see the result of ajax in Inspect > Network > Request > Form data
                        
                        //Learn what ajax and json exactly are and how they work exactly
                        // This was the old way of informing, which was just the browser notifying
                        if(window.confirm('Are you sure about deleting '+ fullName +'?')){
                            $.ajax({
                                method: 'POST',
                                //user_id correlates to one in delete-user.php
                                data: {
                                    user_id: userId,
                                    f_name: fname,
                                    l_name: lname
                                },
                                url: 'database/delete-user.php',
                                //Set data type to json so we can easily parse, process the response
                                dataType: 'json',
                                success: function(data){
                                    //Probably means if data success is true or has value true
                                    if(data.success){
                                        //We're still in javascript so, learn about objects and methods like location and reload here below
                                        //if(window.alert(data.message)){ window.alert couldn't refresh like window.confirm could
                                        if(window.confirm(data.message)){
                                            location.reload();
                                        }
                                    } else window.alert(data.message);
                                    //[==Unused Code
                                    //} else {
                                    //    window.alert(data.message)
                                    //}
                                    //==]
                                }
                            })
                        } else {
                            window.alert('Won'+ "'" +'t delete');
                            //console.log('Won'+ "'" +'t Delete')
                        }


                        //This is the end of the line block code

                        //Where/what does user_id correlate to the one in delete-user.php
                        //console.log(userId, fname, lname);
                        //This below will show particulars in console
                        //fname = targetElement.dataset.fname;
                        //console.log(fname);

                        //console.log('found');
                    }
                    if(classList.contains('updateUser')){
                        e.preventDefault();
                        
                        //Get data. It will target and get that data?
                        //This will be inside one tr anyway so it'll target closest tr with td equal to that class, td.firstName example
                        //.innerHTML, organizes the code
                        firstName = targetElement.closest('tr').querySelector('td.firstName').innerHTML;
                        lastName = targetElement.closest('tr').querySelector('td.lastName').innerHTML;
                        email = targetElement.closest('tr').querySelector('td.email').innerHTML;
                        userId = targetElement.dataset.userid;

                        //this pulls out information related to that td next to class, shows in console
                        //console.log(firstName, lastName, email);
                        //Reminder inspect and webdevtool is your bestfriend 

                        BootstrapDialog.confirm({
                            title: 'Update ' + firstName + ' ' + lastName,
                            //message: firstName + ' ' + lastName + ' ' + email
                            //The forwards slash \ the error red thing from appearing, it passes it below I think. 
                            //It helps pass the cover down. Remove \ on div above </form> to see
                            //<form action="/action_page.php"> 
                            message: '<form>\
                                <div class="form-group">\
                                    <label for="firstName">First Name:</label>\
                                    <input type="text" class="form-control" id="firstName" value="'+ firstName +'">\
                                </div>\
                                <div class="form-group">\
                                    <label for="lastName">Last Name:</label>\
                                    <input type="text" class="form-control" id="lastName" value="'+ lastName +'">\
                                </div>\
                                <div class="form-group">\
                                    <label for="email">Email address:</label>\
                                    <input type="email" class="form-control" id="emailUpdate" value="'+ email +'">\
                                </div>\
                            </form>',

                            //We changed email to emailUpdate as there are multiple email id already in page
                            //Dont forget the comma's at the end
                            //Make guidelines when handling various errors or bugs

                            callback: function(isUpdate){ //parameter

                                /* This block of code will see if this works
                                console.log({
                                            userId: userId,
                                            f_name: document.getElementById('firstName').value,
                                            l_name: document.getElementById('lastName').value,
                                            email: document.getElementById('emailUpdate').value,
                                });
                                return;
                                */

                                if(isUpdate){ //If user click 'Ok' button.
                                   // alert('Hi I'+ "'" +'m updating');
                                   $.ajax({
                                        method: 'POST',
                                        //user_id correlates to one in delete-user.php
                                        data: {
                                            userId: userId,
                                            f_name: document.getElementById('firstName').value,
                                            l_name: document.getElementById('lastName').value,
                                            email: document.getElementById('emailUpdate').value,
                                        },
                                        url: 'database/update-user.php',
                                        //Set data type to json so we can easily parse, process the response
                                        //this dataType: 'json', a little bit of a mystery how it works
                                        dataType: 'json',
                                        
                                        //This update version gets message from data still check update-user.php
                                        success: function(data){
                                            //Probably means if data success is true or has value true
                                            if(data.success){
                                                BootstrapDialog.alert({
                                                    type: BootstrapDialog.TYPE_SUCCESS,
                                                    message: data.message,
                                                    callback: function(){
                                                        location.reload()
                                                    }
                                                });
                                                //We're still in javascript so, learn about objects and methods like location and reload here below
                                                //if(window.alert(data.message)){ window.alert couldn't refresh like window.confirm could
                                                /*if(window.confirm(data.message)){
                                                    location.reload();
                                                }*/
                                            } else 
                                                BootstrapDialog.alert({
                                                    type: BootstrapDialog.TYPE_DANGER,
                                                    message: data.message,
                                                });
                                            /* Unused code
                                            } else {
                                                window.alert(data.message)
                                            }
                                            */
                                        }
                                    });
                                }
                            },

                        });
                    }
                });
            }

        }

        var script = new script;
        script.initialize();
    </script>
    -->
    </body>
</html>



{End}------[{user-add.php}]------{File}











(Hey! Daniel here, the extra s on users was my divertion, didn't feel like changing it)

{Start}------[{users-view.php}]------{File}

<?php
    //Go to WA4E for more info on sessions and cookies
    /* So without the session_start the user info collected
        won't be accessed or pass over to this page from login
    //session_start();
    var_dump($_SESSION['user']);
    die;
    */
    
    session_start();

    /*This refresh and prevents user from going back to dashboard. Also must be a shorthand thing */
    /*Remember the negation thing, that ! makes isset to opposite, so that mins if is not set, header will run */
    /*This if makes it so that just accessing this through url or address bar won't work, try accesing dashboard through url*/
    if(!isset($_SESSION['user'])) header('location: login.php');
    
    /*SESSION IS LIKE TEMPORARY */
    /*$_SESSION is an associative array, so if you use var_dump($_SESSION); you'll see its an
      an array that can store complex or primative data, like for example the 'user'
      So by doing. $_SESSION['Table'] = 'users'; we're adding a new variable in $_SESSION
      array next to user variavle(array)*/
    $_SESSION['table'] = 'users';
    /*This will connect to the span element on user*/
    $user = $_SESSION['user'];

    //On chapter 17 we placed the line of code below here
    //This compensates for the deletion of show-users.php which code you can find in notes
    //$_SESSION['table'] = 'users'; deprecated, replaced by below $show_table

    $show_table = 'users';
    $users = include('database/show.php');
    //Use this to test if show-users.php works
    //var_dump($users);
    //die


?>

<!--[==============THIS IS USER-ADD.PHP=================]--> 

<!DOCTYPE html>
<html>
    <head>
        <title>View Users - Inventory Management System</title>
        <!--The time() after css/login.css is to make sure everytime we refreash we always load the new updated file, its the hard refresh solution I think-->
        <!--app-header-scripts was once here-->
        <?php include('partials/app-header-scripts.php'); ?>
    </head>
    <body>
        <div id="dashboardMainContainer">
            <!--This include will run and place here that html code from that php file-->
            <!--if something wen't wrong there's a high chance its just directory problem-->
            <?php include('partials/app-sidebar.php') ?>
            <div class="dashboard_content_container" id="dashboard_content_container">
                <!--The elements might be separated but remember the
                    CSS is the one setting how they look-->
                <?php include('partials/app-topnav.php') ?>
                <div class="dashboard_content">
                    <div class="dashboard_content_main">
                        <div class="row">
                            <!--<div class="column column-7">-->
                            <!--woah what's going on, when we changed column-7 to column-12 it changed width-->
                            <div class="column column-12">
                                <h1 class="section_header"><i class="fa fa-list"></i> List of Users</h1>
                                <div class="section_content">
                                    <div class="users">
                                        <!--Below it doesn't matter if array is from 0 to up, it will count it normally-->
                                        <p class="userCount"><?= count($users) ?> Users</p>
                                        <table>
                                            <!--<thead></thead>-->
                                            <!--Also the logo on sidebar changes/changed because we changed source of icons-->
                                            <thead>
                                                <tr>
                                                    <th>#</th>
                                                    <th>First Name</th>
                                                    <th>Last Name</th>
                                                    <th>Email</th>
                                                    <th>Created At</th>
                                                    <th>Updated At</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <!--Also on id we don't use the real id in database-->
                                                <!--Notice how $index is set and respond-->
                                                <!--foreach will pull.take out and run for each array inside ($users) ?-->
                                                <!--as and $variable (you pick a name) is a must-->
                                                <?php foreach($users as $index => $user){ ?>
                                                    <tr>
                                                        <!--Remember PDO::_ASSOC set it to array so users
                                                            an array turned as index an array here, in one instance
                                                            here we make index + 1 cause first array inside is set to 0, it just
                                                            correspond to array in $users. then index which holds from 0 to whatever
                                                            array value there is will be what $user draws from. So if $index in this
                                                            iteration of foreach is now 7, $user will draw from data or row column data
                                                            from that array made in $users/$index-->
                                                        <td><?= $index + 1 ?></td>
                                                        <td class="firstName"><?= $user['first_name'] ?></td>
                                                        <td class="lastName"><?= $user['last_name'] ?></td>
                                                        <td class="email"><?= $user['email'] ?></td>
                                                        <!--so the F d,y correspond to month, day, year, might be a parameter-->
                                                        <td><?= date('M d,Y @ h:i:s A', strtotime($user['created_at'])) ?></td>
                                                        <td><?= date('M d,Y @ h:i:s A', strtotime($user['updated_at'])) ?></td>
                                                        <!--Below code are variations-->
                                                        <!--<td><?= date('F d,Y @ H:i:s A', strtotime($user['updated_at'])) ?></td>-->
                                                        <!--Below code is removed cause its hard to read-->
                                                        <!--<td><?= $user['created_at'] ?></td>-->
                                                        <!--<td><?= $user['updated_at'] ?></td>-->
                                                        <td>
                                                            <a href="" class="updateUser" data-userid="<?= $user['id'] ?>"><i class="fa fa-pencil"></i> Edit</a>
                                                            <!-- the $user['id'] will pull out the user corelating to this row, foreach. data-name="" can be changed to any name-->
                                                            <a href="" class="deleteUser" data-userid="<?= $user['id'] ?>" data-fname="<?= $user['first_name'] ?>" data-lname="<?= $user['last_name'] ?>"><i class="fa fa-trash"></i> Delete</a>
                                                        </td>
                                                    </tr>
                                                <?php } ?>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>         
                            </div>
                        </div>
                    </div>                           
                </div>
            </div>
        </div>
        <!--You can fold a sequence or block of code then copy it easily-->
        <!--JS codes were once here, but then they got separated too, and
            were using src="" attribute to link it-->
    <!--app-scripts.php code was once here-->        
    <?php include('partials/app-scripts.php'); ?>

    <script>
        function script(){
            //Note that ajax() function is from jquery
            //this below runs this.registerEvents = function()
            this.initialize = function(){
                this.registerEvents();
            },

            this.registerEvents = function(){
                document.addEventListener('click', function(e){
                    //This below line will prevent anchor refresh
                    //but it will also prevent you from clicking and going to dashboard at navbar
                    //e.preventDefault(); so we place this inside if
                    //this below finds or gets all classes, so classList
                    targetElement = e.target;
                    classList = targetElement.classList;
                    //classList = e.target.classList;

                    //this below will show found if user clicks delete anchor
                    //this function method finds deleteUser, among a list of classes
                    if(classList.contains('deleteUser')){
                        e.preventDefault();
                        //dataset gets the userid which was set in the anchor
                        userId = targetElement.dataset.userid;
                        fname = targetElement.dataset.fname;
                        lname = targetElement.dataset.lname;
                        fullName = fname + ' ' + lname;
                        
                        /*This below code was the New way of informing which also has no cancel for delete for some reason, so I'll use the old code*/
                        /*
                        BootstrapDialog.confirm({
                            type: BootstrapDialog.TYPE_DANGER,
                            message: 'Are you sure about deleting '+ fullName +'?',
                            callback: function(isDelete){                          
                                $.ajax({
                                    method: 'POST',
                                    //user_id correlates to one in delete-user.php
                                    data: {
                                        user_id: userId,
                                        f_name: fname,
                                        l_name: lname
                                    },
                                    url: 'database/delete-user.php',
                                    //Set data type to json so we can easily parse, process the response
                                    dataType: 'json',
                                    success: function(data){
                                        //Probably means if data success is true or has value true
                                        if(data.success){
                                                BootstrapDialog.alert({
                                                    type: BootstrapDialog.TYPE_SUCCESS,
                                                    message: data.message,
                                                    callback: function(){
                                                        location.reload()
                                                    }
                                                });
                                                //We're still in javascript so, learn about objects and methods like location and reload here below
                                                //if(window.alert(data.message)){ window.alert couldn't refresh like window.confirm could
                                                //if(window.confirm(data.message)){
                                                //    location.reload();
                                                
                                        } else 
                                            BootstrapDialog.alert({
                                                type: BootstrapDialog.TYPE_DANGER,
                                                message: data.message,
                                            });
                                        //[==Unused code
                                        //} else {
                                        //    window.alert(data.message)
                                        //}
                                        //==]
                                    } else {
                                        window.alert('Won'+ "'" +'t delete');
                                        //console.log('Won'+ "'" +'t Delete')
                                    }
                                    
                                })
                            }
                        })
                        */

                        //Remember to always check your spelling or pronuncation
                        //window = object, confirm = method/function atleast at javascript pov
                        //Oh yeah, we're on script right now, concatinate too is here
                        //You can see the result of ajax in Inspect > Network > Request > Form data
                        
                        //If you encounter any problem with deleting or bootstrop go back to chapter 17 (Tip: 22:00)
                        //You can copy the code from product-view then change variables, remember, constants and variables

                        //Learn what ajax and json exactly are and how they work exactly
                        // This was the old way of informing, which was just the browser notifying
                        //You can now use bootstrap without the problem of delete cancel not working
                        if(window.confirm('Are you sure about deleting '+ fullName +'?')){
                            $.ajax({
                                method: 'POST',
                                //user_id correlates to one in delete-user.php
                                data: {
                                    id: userId,
                                    table: 'users'

                                    //This below block of code is what we used with delete-user.php
                                    //And it uses this fname lname to make special messages, which is now
                                    //Irrelevant as we made the delete more dynamic
                                    /*  user_id: userId,
                                        f_name: fname,
                                        l_name: lname    */
                                },
                                url: 'database/delete.php',
                                //url: 'database/delete-user.php', former code, we updated to dynamic delete.php
                                //Set data type to json so we can easily parse, process the response
                                dataType: 'json',
                                success: function(data){
                                    message = data.success ? 
                                            fullName + ' succesfully deleted!' : 'Error processing your request!';
                                        
                                    BootstrapDialog.alert({
                                            //Is this expression like to see if the value of data.success is truethy or falsy which then is if else
                                            type: data.success ? BootstrapDialog.TYPE_SUCCESS : BootstrapDialog.TYPE_DANGER,
                                            message: message,
                                            callback: function(){
                                                if(data.success) location.reload()
                                            }
                                    });

                                    //Probably means if data success is true or has value true
                                    /*  This block of code got removed after the code sequence above was added from product-view.php
                                    if(data.success){
                                        //We're still in javascript so, learn about objects and methods like location and reload here below
                                        //if(window.alert(data.message)){ window.alert couldn't refresh like window.confirm could
                                        if(window.confirm(data.message)){
                                            location.reload();
                                        }
                                    } else window.alert(data.message);
                                    */

                                    //[==Unused Code
                                    //} else {
                                    //    window.alert(data.message)
                                    //}
                                    //==]
                                }
                            })
                        } else {
                            window.alert('Won'+ "'" +'t delete');
                            //console.log('Won'+ "'" +'t Delete')
                        }


                        //This is the end of the line block code

                        //Where/what does user_id correlate to the one in delete-user.php
                        //console.log(userId, fname, lname);
                        //This below will show particulars in console
                        //fname = targetElement.dataset.fname;
                        //console.log(fname);

                        //console.log('found');
                    }
                    if(classList.contains('updateUser')){
                        e.preventDefault();
                        
                        //Get data. It will target and get that data?
                        //This will be inside one tr anyway so it'll target closest tr with td equal to that class, td.firstName example
                        //.innerHTML, organizes the code
                        firstName = targetElement.closest('tr').querySelector('td.firstName').innerHTML;
                        lastName = targetElement.closest('tr').querySelector('td.lastName').innerHTML;
                        email = targetElement.closest('tr').querySelector('td.email').innerHTML;
                        userId = targetElement.dataset.userid;

                        //this pulls out information related to that td next to class, shows in console
                        //console.log(firstName, lastName, email);
                        //Reminder inspect and webdevtool is your bestfriend 

                        BootstrapDialog.confirm({
                            title: 'Update ' + firstName + ' ' + lastName,
                            //message: firstName + ' ' + lastName + ' ' + email
                            //The forwards slash \ the error red thing from appearing, it passes it below I think. 
                            //It helps pass the cover down. Remove \ on div above </form> to see
                            //<form action="/action_page.php"> 
                            message: '<form>\
                                <div class="form-group">\
                                    <label for="firstName">First Name:</label>\
                                    <input type="text" class="form-control" id="firstName" value="'+ firstName +'">\
                                </div>\
                                <div class="form-group">\
                                    <label for="lastName">Last Name:</label>\
                                    <input type="text" class="form-control" id="lastName" value="'+ lastName +'">\
                                </div>\
                                <div class="form-group">\
                                    <label for="email">Email address:</label>\
                                    <input type="email" class="form-control" id="emailUpdate" value="'+ email +'">\
                                </div>\
                            </form>',

                            //We changed email to emailUpdate as there are multiple email id already in page
                            //Dont forget the comma's at the end
                            //Make guidelines when handling various errors or bugs

                            callback: function(isUpdate){ //parameter

                                /* This block of code will see if this works
                                console.log({
                                            userId: userId,
                                            f_name: document.getElementById('firstName').value,
                                            l_name: document.getElementById('lastName').value,
                                            email: document.getElementById('emailUpdate').value,
                                });
                                return;
                                */

                                if(isUpdate){ //If user click 'Ok' button.
                                   // alert('Hi I'+ "'" +'m updating');
                                   $.ajax({
                                        method: 'POST',
                                        //user_id correlates to one in delete-user.php
                                        data: {
                                            userId: userId,
                                            f_name: document.getElementById('firstName').value,
                                            l_name: document.getElementById('lastName').value,
                                            email: document.getElementById('emailUpdate').value,
                                        },
                                        url: 'database/update-user.php',
                                        //Set data type to json so we can easily parse, process the response
                                        //this dataType: 'json', a little bit of a mystery how it works
                                        dataType: 'json',
                                        
                                        //This update version gets message from data still check update-user.php
                                        success: function(data){
                                            //Probably means if data success is true or has value true
                                            if(data.success){
                                                BootstrapDialog.alert({
                                                    type: BootstrapDialog.TYPE_SUCCESS,
                                                    message: data.message,
                                                    callback: function(){
                                                        location.reload()
                                                    }
                                                });
                                                //We're still in javascript so, learn about objects and methods like location and reload here below
                                                //if(window.alert(data.message)){ window.alert couldn't refresh like window.confirm could
                                                /*if(window.confirm(data.message)){
                                                    location.reload();
                                                }*/
                                            } else 
                                                BootstrapDialog.alert({
                                                    type: BootstrapDialog.TYPE_DANGER,
                                                    message: data.message,
                                                });
                                            /* Unused code
                                            } else {
                                                window.alert(data.message)
                                            }
                                            */
                                        }
                                    });
                                }
                            },

                        });
                    }
                });
            }
        }

        var script = new script;
        script.initialize();
    </script>   
    </body>
</html>



{End}------[{users-view.php}]------{File}



<This is the end of After Chapter 22 or Below and Equal to Chapter 22>